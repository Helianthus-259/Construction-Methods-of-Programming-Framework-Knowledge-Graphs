[
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests#getDefaultOrder()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests#getPriorityValueNoAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getPriorityValueNoAnnotation() {\r\n    assertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\r\n    assertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.OrderUtilsTests#getPriorityValueNoAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests#getPriorityValueNoAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests#getPriorityValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getPriorityValue() {\r\n    assertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\r\n    assertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.OrderUtilsTests#getPriorityValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.OrderUtilsTests#getPriorityValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.annotation.SimpleOrder",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.annotation.SimpleOrder",
    "headType": "class",
    "relation": "use",
    "tail": "@Order",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.SimpleOrder",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.annotation;\n\nimport jakarta.annotation.Priority;\nimport org.junit.jupiter.api.Test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n/**\n * @author Stephane Nicoll\n * @author Juergen Hoeller\n */\nclass OrderUtilsTests {\n\n\t@Test\n\tvoid getSimpleOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getPriorityOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\t@Test\n\tvoid getOrderWithBoth() {\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getDefaultOrder() {\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t}\n\n\t@Test\n\tvoid getPriorityValueNoAnnotation() {\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t}\n\n\t@Test\n\tvoid getPriorityValue() {\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\n\t@Order(50)\n\tprivate static class SimpleOrder {}\n\n\t@Priority(55)\n\tprivate static class SimplePriority {}\n\n\t@Order(50)\n\t@Priority(55)\n\tprivate static class OrderAndPriority {}\n\n\tprivate static class NoOrder {}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.annotation",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.annotation.SimplePriority",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.annotation.SimplePriority",
    "headType": "class",
    "relation": "use",
    "tail": "@Priority",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.SimplePriority",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.annotation;\n\nimport jakarta.annotation.Priority;\nimport org.junit.jupiter.api.Test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n/**\n * @author Stephane Nicoll\n * @author Juergen Hoeller\n */\nclass OrderUtilsTests {\n\n\t@Test\n\tvoid getSimpleOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getPriorityOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\t@Test\n\tvoid getOrderWithBoth() {\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getDefaultOrder() {\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t}\n\n\t@Test\n\tvoid getPriorityValueNoAnnotation() {\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t}\n\n\t@Test\n\tvoid getPriorityValue() {\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\n\t@Order(50)\n\tprivate static class SimpleOrder {}\n\n\t@Priority(55)\n\tprivate static class SimplePriority {}\n\n\t@Order(50)\n\t@Priority(55)\n\tprivate static class OrderAndPriority {}\n\n\tprivate static class NoOrder {}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.annotation",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.annotation.OrderAndPriority",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.annotation.OrderAndPriority",
    "headType": "class",
    "relation": "use",
    "tail": "@Order",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.OrderAndPriority",
    "headType": "class",
    "relation": "use",
    "tail": "@Priority",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.OrderAndPriority",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.annotation;\n\nimport jakarta.annotation.Priority;\nimport org.junit.jupiter.api.Test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n/**\n * @author Stephane Nicoll\n * @author Juergen Hoeller\n */\nclass OrderUtilsTests {\n\n\t@Test\n\tvoid getSimpleOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getPriorityOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\t@Test\n\tvoid getOrderWithBoth() {\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getDefaultOrder() {\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t}\n\n\t@Test\n\tvoid getPriorityValueNoAnnotation() {\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t}\n\n\t@Test\n\tvoid getPriorityValue() {\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\n\t@Order(50)\n\tprivate static class SimpleOrder {}\n\n\t@Priority(55)\n\tprivate static class SimplePriority {}\n\n\t@Order(50)\n\t@Priority(55)\n\tprivate static class OrderAndPriority {}\n\n\tprivate static class NoOrder {}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.annotation",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.annotation.NoOrder",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.annotation.NoOrder",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.annotation;\n\nimport jakarta.annotation.Priority;\nimport org.junit.jupiter.api.Test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n/**\n * @author Stephane Nicoll\n * @author Juergen Hoeller\n */\nclass OrderUtilsTests {\n\n\t@Test\n\tvoid getSimpleOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(SimpleOrder.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getPriorityOrder() {\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getOrder(SimplePriority.class, null)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\t@Test\n\tvoid getOrderWithBoth() {\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t\tassertThat(OrderUtils.getOrder(OrderAndPriority.class, null)).isEqualTo(Integer.valueOf(50));\n\t}\n\n\t@Test\n\tvoid getDefaultOrder() {\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t\tassertThat(OrderUtils.getOrder(NoOrder.class, 33)).isEqualTo(33);\n\t}\n\n\t@Test\n\tvoid getPriorityValueNoAnnotation() {\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t\tassertThat(OrderUtils.getPriority(SimpleOrder.class)).isNull();\n\t}\n\n\t@Test\n\tvoid getPriorityValue() {\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t\tassertThat(OrderUtils.getPriority(OrderAndPriority.class)).isEqualTo(Integer.valueOf(55));\n\t}\n\n\n\t@Order(50)\n\tprivate static class SimpleOrder {}\n\n\t@Priority(55)\n\tprivate static class SimplePriority {}\n\n\t@Order(50)\n\t@Priority(55)\n\tprivate static class OrderAndPriority {}\n\n\tprivate static class NoOrder {}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.annotation",
    "tailType": "package"
  }
]