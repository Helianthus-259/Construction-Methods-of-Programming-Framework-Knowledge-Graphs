[
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#isDirectlyPresent(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#isDirectlyPresent(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <A extends Annotation> MergedAnnotation<A> get(Class<A> annotationType) {\r\n    return get(annotationType, null, null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>,Predicate<? super MergedAnnotation<A>>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <A extends Annotation> MergedAnnotation<A> get(Class<A> annotationType, @Nullable Predicate<? super MergedAnnotation<A>> predicate) {\r\n    return get(annotationType, predicate, null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>,Predicate<? super MergedAnnotation<A>>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>,Predicate<? super MergedAnnotation<A>>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>,Predicate<? super MergedAnnotation<A>>,MergedAnnotationSelector<A>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <A extends Annotation> MergedAnnotation<A> get(Class<A> annotationType, @Nullable Predicate<? super MergedAnnotation<A>> predicate, @Nullable MergedAnnotationSelector<A> selector) {\r\n    if (this.annotationFilter.matches(annotationType)) {\r\n        return MergedAnnotation.missing();\r\n    }\r\n    MergedAnnotation<A> result = scan(annotationType, new MergedAnnotationFinder<>(annotationType, predicate, selector));\r\n    return (result != null ? result : MergedAnnotation.missing());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>,Predicate<? super MergedAnnotation<A>>,MergedAnnotationSelector<A>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(Class<A>,Predicate<? super MergedAnnotation<A>>,MergedAnnotationSelector<A>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <A extends Annotation> MergedAnnotation<A> get(String annotationType) {\r\n    return get(annotationType, null, null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#get(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(String,Predicate<? super MergedAnnotation<A>>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <A extends Annotation> MergedAnnotation<A> get(String annotationType, @Nullable Predicate<? super MergedAnnotation<A>> predicate) {\r\n    return get(annotationType, predicate, null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#get(String,Predicate<? super MergedAnnotation<A>>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(String,Predicate<? super MergedAnnotation<A>>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(String,Predicate<? super MergedAnnotation<A>>,MergedAnnotationSelector<A>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <A extends Annotation> MergedAnnotation<A> get(String annotationType, @Nullable Predicate<? super MergedAnnotation<A>> predicate, @Nullable MergedAnnotationSelector<A> selector) {\r\n    if (this.annotationFilter.matches(annotationType)) {\r\n        return MergedAnnotation.missing();\r\n    }\r\n    MergedAnnotation<A> result = scan(annotationType, new MergedAnnotationFinder<>(annotationType, predicate, selector));\r\n    return (result != null ? result : MergedAnnotation.missing());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.TypeMappedAnnotations#get(String,Predicate<? super MergedAnnotation<A>>,MergedAnnotationSelector<A>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.TypeMappedAnnotations#get(String,Predicate<? super MergedAnnotation<A>>,MergedAnnotationSelector<A>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]