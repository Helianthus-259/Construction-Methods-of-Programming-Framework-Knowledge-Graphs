[
  {
    "head": "org.springframework.cglib.core.State",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.State#getClassInfo()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.State#getClassInfo()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.core.State#getModifiers()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int getModifiers() {\r\n    return access;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.State",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.State#getModifiers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.State#getModifiers()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.core.State#getSignature()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Signature getSignature() {\r\n    return sig;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.State",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.State#getSignature()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.State#getSignature()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.core.State#getExceptionTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Type[] getExceptionTypes() {\r\n    return exceptionTypes;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.State",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.State#getExceptionTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.State#getExceptionTypes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.core.State",
    "headType": "class",
    "relation": "extend",
    "tail": "MethodInfo",
    "tailType": "class"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.cglib.core",
    "tailType": "package"
  },
  {
    "head": "org.springframework.cglib.core",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.cglib.core.CodeGenerationException",
    "tailType": "class"
  },
  {
    "head": "org.springframework.cglib.core.CodeGenerationException",
    "headType": "class",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.core.CodeGenerationException",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2003 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.cglib.core;\n\n/**\n * @version $Id: CodeGenerationException.java,v 1.3 2004/06/24 21:15:21 herbyderby Exp $\n */\n@SuppressWarnings(\"serial\")\npublic class CodeGenerationException extends RuntimeException {\n    private Throwable cause;\n\n    public CodeGenerationException(Throwable cause) {\n        super(cause.getClass().getName() + \"-->\" + cause.getMessage());\n        this.cause = cause;\n    }\n\n    @Override\n\tpublic Throwable getCause() {\n        return cause;\n    }\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.core.CodeGenerationException",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.core.CodeGenerationException#cause",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.core.CodeGenerationException#cause",
    "headType": "field",
    "relation": "haveType",
    "tail": "Throwable",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.core.CodeGenerationException#getCause()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Throwable getCause() {\r\n    return cause;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.CodeGenerationException",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.CodeGenerationException#getCause()",
    "tailType": "method"
  }
]