[
  {
    "head": "org.springframework.util.FilteredMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.FilteredMap#delegate",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.FilteredMap#delegate",
    "headType": "field",
    "relation": "haveType",
    "tail": "Map<K, V>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.FilteredMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.FilteredMap#filter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.FilteredMap#filter",
    "headType": "field",
    "relation": "haveType",
    "tail": "Predicate<K>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.FilteredMap#entrySet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Set<Entry<K, V>> entrySet() {\r\n    return new FilteredSet<>(this.delegate.entrySet(), entry -> this.filter.test(entry.getKey()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FilteredMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FilteredMap#entrySet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FilteredMap#entrySet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#size()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int size() {\r\n    int size = 0;\r\n    for (K k : keySet()) {\r\n        if (this.filter.test(k)) {\r\n            size++;\r\n        }\r\n    }\r\n    return size;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FilteredMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FilteredMap#size()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FilteredMap#size()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#containsKey(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@SuppressWarnings(\"unchecked\")\r\npublic boolean containsKey(Object key) {\r\n    if (this.delegate.containsKey(key)) {\r\n        return this.filter.test((K) key);\r\n    } else {\r\n        return false;\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FilteredMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FilteredMap#containsKey(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FilteredMap#containsKey(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#containsKey(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#get(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@SuppressWarnings(\"unchecked\")\r\n@Nullable\r\npublic V get(Object key) {\r\n    V value = this.delegate.get(key);\r\n    if (value != null && this.filter.test((K) key)) {\r\n        return value;\r\n    } else {\r\n        return null;\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FilteredMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FilteredMap#get(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FilteredMap#get(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#get(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#get(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FilteredMap#put(K,V)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic V put(K key, V value) {\r\n    V oldValue = this.delegate.put(key, value);\r\n    if (oldValue != null && this.filter.test(key)) {\r\n        return oldValue;\r\n    } else {\r\n        return null;\r\n    }\r\n}",
    "tailType": "method_code"
  }
]