[
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#entries",
    "headType": "field",
    "relation": "haveType",
    "tail": "Set<Entry<K, List<V>>>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#getFirst(K)",
    "headType": "method",
    "relation": "provide",
    "tail": "// MultiValueMap implementation\r\n@Override\r\n@Nullable\r\npublic V getFirst(K key) {\r\n    return this.targetMap.get(key);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SingleToMultiValueMapAdapter#getFirst(K)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#getFirst(K)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#getFirst(K)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#add(K,V)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void add(K key, @Nullable V value) {\r\n    if (!this.targetMap.containsKey(key)) {\r\n        this.targetMap.put(key, value);\r\n    } else {\r\n        throw new UnsupportedOperationException(\"Duplicate key: \" + key);\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SingleToMultiValueMapAdapter#add(K,V)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#add(K,V)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(K,List<? extends V>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@SuppressWarnings(\"unchecked\")\r\npublic void addAll(K key, List<? extends V> values) {\r\n    if (!this.targetMap.containsKey(key)) {\r\n        put(key, (List<V>) values);\r\n    } else {\r\n        throw new UnsupportedOperationException(\"Duplicate key: \" + key);\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(K,List<? extends V>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(K,List<? extends V>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(K,List<? extends V>)",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(MultiValueMap<K,V>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void addAll(MultiValueMap<K, V> values) {\r\n    values.forEach(this::addAll);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(MultiValueMap<K,V>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#addAll(MultiValueMap<K,V>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#set(K,V)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void set(K key, @Nullable V value) {\r\n    this.targetMap.put(key, value);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SingleToMultiValueMapAdapter#set(K,V)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#set(K,V)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter#setAll(Map<K,V>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void setAll(Map<K, V> values) {\r\n    this.targetMap.putAll(values);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SingleToMultiValueMapAdapter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SingleToMultiValueMapAdapter#setAll(Map<K,V>)",
    "tailType": "method"
  }
]