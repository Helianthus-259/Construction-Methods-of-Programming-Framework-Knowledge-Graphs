[
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedArrayOfString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedArrayOfObject()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeObjectWithNestedArrayOfObject() {\r\n    Map<String, Object> attributes = orderedMap(\"test\", \"value\");\r\n    LinkedHashMap<String, Object> secondNested = orderedMap(\"name\", \"second\");\r\n    secondNested.put(\"enabled\", false);\r\n    attributes.put(\"nested\", List.of(orderedMap(\"name\", \"first\"), secondNested, orderedMap(\"name\", \"third\")));\r\n    this.json.writeObject(attributes);\r\n    assertThat(out.toString()).isEqualToNormalizingNewlines(\"\"\"\r\n        {\r\n        \t\"test\": \"value\",\r\n        \t\"nested\": [\r\n        \t\t{\r\n        \t\t\t\"name\": \"first\"\r\n        \t\t},\r\n        \t\t{\r\n        \t\t\t\"name\": \"second\",\r\n        \t\t\t\"enabled\": false\r\n        \t\t},\r\n        \t\t{\r\n        \t\t\t\"name\": \"third\"\r\n        \t\t}\r\n        \t]\r\n        }\r\n        \"\"\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedArrayOfObject()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedArrayOfObject()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedEmptyArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeObjectWithNestedEmptyArray() {\r\n    Map<String, Object> attributes = orderedMap(\"test\", \"value\");\r\n    attributes.put(\"nested\", Collections.emptyList());\r\n    this.json.writeObject(attributes);\r\n    assertThat(out.toString()).isEqualToNormalizingNewlines(\"\"\"\r\n        {\r\n        \t\"test\": \"value\",\r\n        \t\"nested\": [ ]\r\n        }\r\n        \"\"\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedEmptyArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedEmptyArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedEmptyObject()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeObjectWithNestedEmptyObject() {\r\n    Map<String, Object> attributes = orderedMap(\"test\", \"value\");\r\n    attributes.put(\"nested\", Collections.emptyMap());\r\n    this.json.writeObject(attributes);\r\n    assertThat(out.toString()).isEqualToNormalizingNewlines(\"\"\"\r\n        {\r\n        \t\"test\": \"value\",\r\n        \t\"nested\": ;\r\n        }\r\n        \"\"\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedEmptyObject()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeObjectWithNestedEmptyObject()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeDoubleQuote()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeWithEscapeDoubleQuote() {\r\n    assertStringAttribute(\"foo\\\"bar\", \"foo\\\\\\\"bar\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeDoubleQuote()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeDoubleQuote()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeBackslash()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeWithEscapeBackslash() {\r\n    assertStringAttribute(\"foo\\\"bar\", \"foo\\\\\\\"bar\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeBackslash()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeBackslash()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeBackspace()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeWithEscapeBackspace() {\r\n    assertStringAttribute(\"foo\\bbar\", \"foo\\\\bbar\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeBackspace()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeBackspace()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.BasicJsonWriterTests#writeWithEscapeFormFeed()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeWithEscapeFormFeed() {\r\n    assertStringAttribute(\"foo\\fbar\", \"foo\\\\fbar\");\r\n}",
    "tailType": "method_code"
  }
]