[
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenProtectedVisibilityInSamePackage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenProtectedVisibilityInSamePackage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenProtectedVisibilityInDifferentPackage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAccessibleWhenProtectedVisibilityInDifferentPackage() {\r\n    AccessControl accessControl = new AccessControl(PublicClass.class, Visibility.PROTECTED);\r\n    assertThat(accessControl.isAccessibleFrom(ClassName.get(String.class))).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenProtectedVisibilityInDifferentPackage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenProtectedVisibilityInDifferentPackage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPackagePrivateVisibilityInSamePackage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAccessibleWhenPackagePrivateVisibilityInSamePackage() {\r\n    AccessControl accessControl = new AccessControl(PublicClass.class, Visibility.PACKAGE_PRIVATE);\r\n    assertThat(accessControl.isAccessibleFrom(ClassName.get(PublicClass.class))).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPackagePrivateVisibilityInSamePackage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPackagePrivateVisibilityInSamePackage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPackagePrivateVisibilityInDifferentPackage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAccessibleWhenPackagePrivateVisibilityInDifferentPackage() {\r\n    AccessControl accessControl = new AccessControl(PublicClass.class, Visibility.PACKAGE_PRIVATE);\r\n    assertThat(accessControl.isAccessibleFrom(ClassName.get(String.class))).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPackagePrivateVisibilityInDifferentPackage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPackagePrivateVisibilityInDifferentPackage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPrivateVisibilityInSamePackage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAccessibleWhenPrivateVisibilityInSamePackage() {\r\n    AccessControl accessControl = new AccessControl(PublicClass.class, Visibility.PRIVATE);\r\n    assertThat(accessControl.isAccessibleFrom(ClassName.get(PublicClass.class))).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPrivateVisibilityInSamePackage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPrivateVisibilityInSamePackage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPrivateVisibilityInDifferentPackage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAccessibleWhenPrivateVisibilityInDifferentPackage() {\r\n    AccessControl accessControl = new AccessControl(PublicClass.class, Visibility.PRIVATE);\r\n    assertThat(accessControl.isAccessibleFrom(ClassName.get(String.class))).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPrivateVisibilityInDifferentPackage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#isAccessibleWhenPrivateVisibilityInDifferentPackage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#forMemberWhenPublicConstructor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid forMemberWhenPublicConstructor() throws NoSuchMethodException {\r\n    Member member = PublicClass.class.getConstructor();\r\n    AccessControl accessControl = AccessControl.forMember(member);\r\n    assertThat(accessControl.getVisibility()).isEqualTo(Visibility.PUBLIC);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.AccessControlTests#forMemberWhenPublicConstructor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.AccessControlTests#forMemberWhenPublicConstructor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]