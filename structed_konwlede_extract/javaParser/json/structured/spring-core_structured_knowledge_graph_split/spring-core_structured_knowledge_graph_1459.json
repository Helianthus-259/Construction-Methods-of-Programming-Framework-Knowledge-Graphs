[
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#reader",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#reader",
    "headType": "field",
    "relation": "haveType",
    "tail": "XMLStreamReader",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#xmlVersion",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#xmlVersion",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#encoding",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#encoding",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#parseInternal()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void parseInternal() throws SAXException, XMLStreamException {\r\n    boolean documentStarted = false;\r\n    boolean documentEnded = false;\r\n    int elementDepth = 0;\r\n    int eventType = this.reader.getEventType();\r\n    while (true) {\r\n        if (eventType != XMLStreamConstants.START_DOCUMENT && eventType != XMLStreamConstants.END_DOCUMENT && !documentStarted) {\r\n            handleStartDocument();\r\n            documentStarted = true;\r\n        }\r\n        switch(eventType) {\r\n            case XMLStreamConstants.START_ELEMENT ->\r\n                {\r\n                    elementDepth++;\r\n                    handleStartElement();\r\n                }\r\n            case XMLStreamConstants.END_ELEMENT ->\r\n                {\r\n                    elementDepth--;\r\n                    if (elementDepth >= 0) {\r\n                        handleEndElement();\r\n                    }\r\n                }\r\n            case XMLStreamConstants.PROCESSING_INSTRUCTION ->\r\n                handleProcessingInstruction();\r\n            case XMLStreamConstants.CHARACTERS, XMLStreamConstants.SPACE, XMLStreamConstants.CDATA ->\r\n                handleCharacters();\r\n            case XMLStreamConstants.START_DOCUMENT ->\r\n                {\r\n                    handleStartDocument();\r\n                    documentStarted = true;\r\n                }\r\n            case XMLStreamConstants.END_DOCUMENT ->\r\n                {\r\n                    handleEndDocument();\r\n                    documentEnded = true;\r\n                }\r\n            case XMLStreamConstants.COMMENT ->\r\n                handleComment();\r\n            case XMLStreamConstants.DTD ->\r\n                handleDtd();\r\n            case XMLStreamConstants.ENTITY_REFERENCE ->\r\n                handleEntityReference();\r\n        }\r\n        if (this.reader.hasNext() && elementDepth >= 0) {\r\n            eventType = this.reader.next();\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    if (!documentEnded) {\r\n        handleEndDocument();\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#parseInternal()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#parseInternal()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#handleStartDocument()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void handleStartDocument() throws SAXException {\r\n    if (XMLStreamConstants.START_DOCUMENT == this.reader.getEventType()) {\r\n        String xmlVersion = this.reader.getVersion();\r\n        if (StringUtils.hasLength(xmlVersion)) {\r\n            this.xmlVersion = xmlVersion;\r\n        }\r\n        this.encoding = this.reader.getCharacterEncodingScheme();\r\n    }\r\n    ContentHandler contentHandler = getContentHandler();\r\n    if (contentHandler != null) {\r\n        final Location location = this.reader.getLocation();\r\n        contentHandler.setDocumentLocator(new Locator2() {\r\n\r\n            @Override\r\n            public int getColumnNumber() {\r\n                return (location != null ? location.getColumnNumber() : -1);\r\n            }\r\n\r\n            @Override\r\n            public int getLineNumber() {\r\n                return (location != null ? location.getLineNumber() : -1);\r\n            }\r\n\r\n            @Override\r\n            @Nullable\r\n            public String getPublicId() {\r\n                return (location != null ? location.getPublicId() : null);\r\n            }\r\n\r\n            @Override\r\n            @Nullable\r\n            public String getSystemId() {\r\n                return (location != null ? location.getSystemId() : null);\r\n            }\r\n\r\n            @Override\r\n            public String getXMLVersion() {\r\n                return xmlVersion;\r\n            }\r\n\r\n            @Override\r\n            @Nullable\r\n            public String getEncoding() {\r\n                return encoding;\r\n            }\r\n        });\r\n        contentHandler.startDocument();\r\n        if (this.reader.standaloneSet()) {\r\n            setStandalone(this.reader.isStandalone());\r\n        }\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#handleStartDocument()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#handleStartElement()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void handleStartElement() throws SAXException {\r\n    if (getContentHandler() != null) {\r\n        QName qName = this.reader.getName();\r\n        if (hasNamespacesFeature()) {\r\n            for (int i = 0; i < this.reader.getNamespaceCount(); i++) {\r\n                startPrefixMapping(this.reader.getNamespacePrefix(i), this.reader.getNamespaceURI(i));\r\n            }\r\n            for (int i = 0; i < this.reader.getAttributeCount(); i++) {\r\n                String prefix = this.reader.getAttributePrefix(i);\r\n                String namespace = this.reader.getAttributeNamespace(i);\r\n                if (StringUtils.hasLength(namespace)) {\r\n                    startPrefixMapping(prefix, namespace);\r\n                }\r\n            }\r\n            getContentHandler().startElement(qName.getNamespaceURI(), qName.getLocalPart(), toQualifiedName(qName), getAttributes());\r\n        } else {\r\n            getContentHandler().startElement(\"\", \"\", toQualifiedName(qName), getAttributes());\r\n        }\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#handleStartElement()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#handleEndElement()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void handleEndElement() throws SAXException {\r\n    if (getContentHandler() != null) {\r\n        QName qName = this.reader.getName();\r\n        if (hasNamespacesFeature()) {\r\n            getContentHandler().endElement(qName.getNamespaceURI(), qName.getLocalPart(), toQualifiedName(qName));\r\n            for (int i = 0; i < this.reader.getNamespaceCount(); i++) {\r\n                String prefix = this.reader.getNamespacePrefix(i);\r\n                if (prefix == null) {\r\n                    prefix = \"\";\r\n                }\r\n                endPrefixMapping(prefix);\r\n            }\r\n        } else {\r\n            getContentHandler().endElement(\"\", \"\", toQualifiedName(qName));\r\n        }\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#handleEndElement()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#handleCharacters()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void handleCharacters() throws SAXException {\r\n    if (XMLStreamConstants.CDATA == this.reader.getEventType() && getLexicalHandler() != null) {\r\n        getLexicalHandler().startCDATA();\r\n    }\r\n    if (getContentHandler() != null) {\r\n        getContentHandler().characters(this.reader.getTextCharacters(), this.reader.getTextStart(), this.reader.getTextLength());\r\n    }\r\n    if (XMLStreamConstants.CDATA == this.reader.getEventType() && getLexicalHandler() != null) {\r\n        getLexicalHandler().endCDATA();\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#handleCharacters()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#handleComment()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void handleComment() throws SAXException {\r\n    if (getLexicalHandler() != null) {\r\n        getLexicalHandler().comment(this.reader.getTextCharacters(), this.reader.getTextStart(), this.reader.getTextLength());\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxStreamXMLReader#handleComment()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxStreamXMLReader#handleDtd()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void handleDtd() throws SAXException {\r\n    if (getLexicalHandler() != null) {\r\n        Location location = this.reader.getLocation();\r\n        getLexicalHandler().startDTD(null, location.getPublicId(), location.getSystemId());\r\n    }\r\n    if (getLexicalHandler() != null) {\r\n        getLexicalHandler().endDTD();\r\n    }\r\n}",
    "tailType": "method_code"
  }
]