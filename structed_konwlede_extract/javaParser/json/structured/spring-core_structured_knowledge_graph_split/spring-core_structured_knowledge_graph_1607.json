[
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getAllMergedAnnotationsOnClassWithInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findAllMergedAnnotationsOnClassWithInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findAllMergedAnnotationsOnClassWithInterface() throws Exception {\r\n    Method method = TransactionalServiceImpl.class.getMethod(\"doIt\");\r\n    Set<Transactional> allMergedAnnotations = findAllMergedAnnotations(method, Transactional.class);\r\n    assertThat(allMergedAnnotations).hasSize(1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findAllMergedAnnotationsOnClassWithInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findAllMergedAnnotationsOnClassWithInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMethodAnnotationFromGenericInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-16060\r\n@Test\r\nvoid findMethodAnnotationFromGenericInterface() throws Exception {\r\n    Method method = ImplementsInterfaceWithGenericAnnotatedMethod.class.getMethod(\"foo\", String.class);\r\n    Order order = findMergedAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMethodAnnotationFromGenericInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMethodAnnotationFromGenericInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMethodAnnotationFromGenericSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-17146\r\n@Test\r\nvoid findMethodAnnotationFromGenericSuperclass() throws Exception {\r\n    Method method = ExtendsBaseClassWithGenericAnnotatedMethod.class.getMethod(\"foo\", String.class);\r\n    Order order = findMergedAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMethodAnnotationFromGenericSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMethodAnnotationFromGenericSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#forAnnotationsCreatesCopyOfArrayOnEachCall()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-22655\r\n@Test\r\nvoid forAnnotationsCreatesCopyOfArrayOnEachCall() {\r\n    AnnotatedElement element = AnnotatedElementUtils.forAnnotations(ForAnnotationsClass.class.getDeclaredAnnotations());\r\n    // Trigger the NPE as originally reported in the bug\r\n    AnnotationsScanner.getDeclaredAnnotations(element, false);\r\n    AnnotationsScanner.getDeclaredAnnotations(element, false);\r\n    // Also specifically test we get different instances\r\n    assertThat(element.getDeclaredAnnotations()).isNotSameAs(element.getDeclaredAnnotations());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#forAnnotationsCreatesCopyOfArrayOnEachCall()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#forAnnotationsCreatesCopyOfArrayOnEachCall()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getMergedAnnotationOnThreeDeepMetaWithValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-22703\r\n@Test\r\nvoid getMergedAnnotationOnThreeDeepMetaWithValue() {\r\n    ValueAttribute annotation = AnnotatedElementUtils.getMergedAnnotation(ValueAttributeMetaMetaClass.class, ValueAttribute.class);\r\n    assertThat(annotation.value()).containsExactly(\"FromValueAttributeMeta\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getMergedAnnotationOnThreeDeepMetaWithValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getMergedAnnotationOnThreeDeepMetaWithValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getMergedRepeatableAnnotationsWithContainerWithMultipleAttributes()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * @since 5.3.25\r\n */\r\n// gh-29685\r\n@Test\r\nvoid getMergedRepeatableAnnotationsWithContainerWithMultipleAttributes() {\r\n    Set<StandardRepeatableWithContainerWithMultipleAttributes> repeatableAnnotations = AnnotatedElementUtils.getMergedRepeatableAnnotations(StandardRepeatablesWithContainerWithMultipleAttributesTestCase.class, StandardRepeatableWithContainerWithMultipleAttributes.class);\r\n    assertThat(repeatableAnnotations).map(StandardRepeatableWithContainerWithMultipleAttributes::value).containsExactly(\"a\", \"b\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getMergedRepeatableAnnotationsWithContainerWithMultipleAttributes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#getMergedRepeatableAnnotationsWithContainerWithMultipleAttributes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedRepeatableAnnotationsWithContainerWithMultipleAttributes()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * @since 5.3.25\r\n */\r\n// gh-29685\r\n@Test\r\nvoid findMergedRepeatableAnnotationsWithContainerWithMultipleAttributes() {\r\n    Set<StandardRepeatableWithContainerWithMultipleAttributes> repeatableAnnotations = AnnotatedElementUtils.findMergedRepeatableAnnotations(StandardRepeatablesWithContainerWithMultipleAttributesTestCase.class, StandardRepeatableWithContainerWithMultipleAttributes.class);\r\n    assertThat(repeatableAnnotations).map(StandardRepeatableWithContainerWithMultipleAttributes::value).containsExactly(\"a\", \"b\");\r\n}",
    "tailType": "method_code"
  }
]