[
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid streamRepeatableDeclaredOnSuperclass() {\r\n    Class<?> element = SubMyRepeatableClass.class;\r\n    String[] expectedValuesJava = { \"A\", \"B\", \"C\" };\r\n    String[] expectedValuesSpring = { \"A\", \"B\", \"C\", \"meta1\" };\r\n    testRepeatables(SearchStrategy.SUPERCLASS, element, expectedValuesJava, expectedValuesSpring);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnClassAndSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid streamRepeatableDeclaredOnClassAndSuperclass() {\r\n    Class<?> element = SubMyRepeatableWithAdditionalLocalDeclarationsClass.class;\r\n    String[] expectedValuesJava = { \"X\", \"Y\", \"Z\" };\r\n    String[] expectedValuesSpring = { \"X\", \"Y\", \"Z\", \"meta2\" };\r\n    testRepeatables(SearchStrategy.SUPERCLASS, element, expectedValuesJava, expectedValuesSpring);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnClassAndSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnClassAndSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnMultipleSuperclasses()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid streamRepeatableDeclaredOnMultipleSuperclasses() {\r\n    Class<?> element = SubSubMyRepeatableWithAdditionalLocalDeclarationsClass.class;\r\n    String[] expectedValuesJava = { \"X\", \"Y\", \"Z\" };\r\n    String[] expectedValuesSpring = { \"X\", \"Y\", \"Z\", \"meta2\" };\r\n    testRepeatables(SearchStrategy.SUPERCLASS, element, expectedValuesJava, expectedValuesSpring);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnMultipleSuperclasses()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamRepeatableDeclaredOnMultipleSuperclasses()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamDirectRepeatablesDeclaredOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid streamDirectRepeatablesDeclaredOnClass() {\r\n    Class<?> element = MyRepeatableClass.class;\r\n    String[] expectedValuesJava = { \"A\", \"B\", \"C\" };\r\n    String[] expectedValuesSpring = { \"A\", \"B\", \"C\", \"meta1\" };\r\n    testRepeatables(SearchStrategy.DIRECT, element, expectedValuesJava, expectedValuesSpring);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#streamDirectRepeatablesDeclaredOnClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamDirectRepeatablesDeclaredOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamDirectRepeatablesDeclaredOnSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid streamDirectRepeatablesDeclaredOnSuperclass() {\r\n    Class<?> element = SubMyRepeatableClass.class;\r\n    String[] expectedValuesJava = ;;\r\n    String[] expectedValuesSpring = ;;\r\n    testRepeatables(SearchStrategy.DIRECT, element, expectedValuesJava, expectedValuesSpring);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#streamDirectRepeatablesDeclaredOnSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#streamDirectRepeatablesDeclaredOnSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#testRepeatables(SearchStrategy,Class<?>,String[],String[])",
    "headType": "method",
    "relation": "provide",
    "tail": "private void testRepeatables(SearchStrategy searchStrategy, Class<?> element, String[] expectedValuesJava, String[] expectedValuesSpring) {\r\n    testJavaRepeatables(searchStrategy, element, expectedValuesJava);\r\n    testExplicitRepeatables(searchStrategy, element, expectedValuesSpring);\r\n    testStandardRepeatables(searchStrategy, element, expectedValuesSpring);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#testRepeatables(SearchStrategy,Class<?>,String[],String[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#testJavaRepeatables(SearchStrategy,Class<?>,String[])",
    "headType": "method",
    "relation": "provide",
    "tail": "private void testJavaRepeatables(SearchStrategy searchStrategy, Class<?> element, String[] expected) {\r\n    MyRepeatable[] annotations = searchStrategy == SearchStrategy.DIRECT ? element.getDeclaredAnnotationsByType(MyRepeatable.class) : element.getAnnotationsByType(MyRepeatable.class);\r\n    assertThat(Arrays.stream(annotations).map(MyRepeatable::value)).containsExactly(expected);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#testJavaRepeatables(SearchStrategy,Class<?>,String[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#testExplicitRepeatables(SearchStrategy,Class<?>,String[])",
    "headType": "method",
    "relation": "provide",
    "tail": "private void testExplicitRepeatables(SearchStrategy searchStrategy, Class<?> element, String[] expected) {\r\n    MergedAnnotations annotations = MergedAnnotations.from(element, searchStrategy, RepeatableContainers.of(MyRepeatable.class, MyRepeatableContainer.class), AnnotationFilter.PLAIN);\r\n    Stream<String> values = annotations.stream(MyRepeatable.class).filter(MergedAnnotationPredicates.firstRunOf(MergedAnnotation::getAggregateIndex)).map(annotation -> annotation.getString(\"value\"));\r\n    assertThat(values).containsExactly(expected);\r\n}",
    "tailType": "method_code"
  }
]