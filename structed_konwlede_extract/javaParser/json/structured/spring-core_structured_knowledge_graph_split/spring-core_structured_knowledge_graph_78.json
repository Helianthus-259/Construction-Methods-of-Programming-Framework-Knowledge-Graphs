[
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#assertMetaAnnotationOverrides(AnnotationMetadata)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-11649\r\n@Test\r\nvoid multipleAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata() {\r\n    AnnotationMetadata metadata = AnnotationMetadata.introspect(NamedAnnotationsClass.class);\r\n    assertMultipleAnnotationsWithIdenticalAttributeNames(metadata);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#multipleAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-11649\r\n@Test\r\nvoid multipleAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata() throws Exception {\r\n    MetadataReaderFactory metadataReaderFactory = new SimpleMetadataReaderFactory();\r\n    MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(NamedAnnotationsClass.class.getName());\r\n    AnnotationMetadata metadata = metadataReader.getAnnotationMetadata();\r\n    assertMultipleAnnotationsWithIdenticalAttributeNames(metadata);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#multipleAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-11649\r\n@Test\r\nvoid composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata() {\r\n    AnnotationMetadata metadata = AnnotationMetadata.introspect(NamedComposedAnnotationClass.class);\r\n    assertMultipleAnnotationsWithIdenticalAttributeNames(metadata);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-11649\r\n@Test\r\nvoid composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata() throws Exception {\r\n    MetadataReaderFactory metadataReaderFactory = new SimpleMetadataReaderFactory();\r\n    MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(NamedComposedAnnotationClass.class.getName());\r\n    AnnotationMetadata metadata = metadataReader.getAnnotationMetadata();\r\n    assertMultipleAnnotationsWithIdenticalAttributeNames(metadata);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#composedAnnotationWithMetaAnnotationsWithIdenticalAttributeNamesUsingSimpleAnnotationMetadata()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-31041\r\n@Test\r\nvoid multipleComposedRepeatableAnnotationsUsingStandardAnnotationMetadata() {\r\n    AnnotationMetadata metadata = AnnotationMetadata.introspect(MultipleComposedRepeatableAnnotationsClass.class);\r\n    assertRepeatableAnnotations(metadata);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsUsingStandardAnnotationMetadata()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsUsingSimpleAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-31041\r\n@Test\r\nvoid multipleComposedRepeatableAnnotationsUsingSimpleAnnotationMetadata() throws Exception {\r\n    MetadataReaderFactory metadataReaderFactory = new SimpleMetadataReaderFactory();\r\n    MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(MultipleComposedRepeatableAnnotationsClass.class.getName());\r\n    AnnotationMetadata metadata = metadataReader.getAnnotationMetadata();\r\n    assertRepeatableAnnotations(metadata);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsUsingSimpleAnnotationMetadata()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsUsingSimpleAnnotationMetadata()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AnnotationMetadataTests#multipleComposedRepeatableAnnotationsSortedByReversedMetaDistanceUsingStandardAnnotationMetadata()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-31074\r\n@Test\r\nvoid multipleComposedRepeatableAnnotationsSortedByReversedMetaDistanceUsingStandardAnnotationMetadata() {\r\n    AnnotationMetadata metadata = AnnotationMetadata.introspect(MultipleComposedRepeatableAnnotationsClass.class);\r\n    assertRepeatableAnnotationsSortedByReversedMetaDistance(metadata);\r\n}",
    "tailType": "method_code"
  }
]