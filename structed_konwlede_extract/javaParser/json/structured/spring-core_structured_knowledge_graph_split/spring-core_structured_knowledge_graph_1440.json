[
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getAttributeValue(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic String getAttributeValue(@Nullable String namespaceURI, String localName) {\r\n    for (int i = 0; i < getAttributeCount(); i++) {\r\n        QName name = getAttributeName(i);\r\n        if (name.getLocalPart().equals(localName) && (namespaceURI == null || name.getNamespaceURI().equals(namespaceURI))) {\r\n            return getAttributeValue(i);\r\n        }\r\n    }\r\n    return null;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.AbstractXMLStreamReader#getAttributeValue(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getAttributeValue(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getAttributeValue(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#hasNext()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean hasNext() {\r\n    return getEventType() != END_DOCUMENT;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.AbstractXMLStreamReader#hasNext()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#hasNext()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getLocalName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String getLocalName() {\r\n    return getName().getLocalPart();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.AbstractXMLStreamReader#getLocalName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getLocalName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getTextCharacters()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic char[] getTextCharacters() {\r\n    return getText().toCharArray();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.AbstractXMLStreamReader#getTextCharacters()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getTextCharacters()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getTextCharacters(int,char[],int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int getTextCharacters(int sourceStart, char[] target, int targetStart, int length) {\r\n    char[] source = getTextCharacters();\r\n    length = Math.min(length, source.length);\r\n    System.arraycopy(source, sourceStart, target, targetStart, length);\r\n    return length;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.AbstractXMLStreamReader#getTextCharacters(int,char[],int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getTextCharacters(int,char[],int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getTextLength()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int getTextLength() {\r\n    return getText().length();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.AbstractXMLStreamReader#getTextLength()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.AbstractXMLStreamReader#getTextLength()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.util.xml",
    "tailType": "package"
  }
]