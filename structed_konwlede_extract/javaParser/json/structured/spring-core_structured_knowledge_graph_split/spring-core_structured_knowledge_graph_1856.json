[
  {
    "head": "org.springframework.core.CollectionFactoryTests#createMapIsNotTypeSafeForEnumMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createMapIsNotTypeSafeForEnumMap() {\r\n    Map<String, Integer> map = createMap(EnumMap.class, Color.class, 3);\r\n    // Use a try-catch block to ensure that the exception is thrown as a result of the\r\n    // next line and not as a result of the previous line.\r\n    // Note that the 'map' key must be of type String, but the keys in the map\r\n    // returned by createMap() are of type Color. Thus \"foo\" cannot be cast to a\r\n    // Color.\r\n    assertThatExceptionOfType(ClassCastException.class).isThrownBy(() -> map.put(\"foo\", 1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createMapIsNotTypeSafeForEnumMap()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createMapIsNotTypeSafeForEnumMap()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createMapIsNotTypeSafeForLinkedMultiValueMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createMapIsNotTypeSafeForLinkedMultiValueMap() {\r\n    Map<String, Integer> map = createMap(MultiValueMap.class, null, 3);\r\n    // Use a try-catch block to ensure that the exception is thrown as a result of the\r\n    // next line and not as a result of the previous line.\r\n    // Note: 'map' values must be of type Integer, but the values in the map\r\n    // returned by createMap() are of type java.util.List. Thus 1 cannot be\r\n    // cast to a List.\r\n    assertThatExceptionOfType(ClassCastException.class).isThrownBy(() -> map.put(\"foo\", 1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createMapIsNotTypeSafeForLinkedMultiValueMap()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createMapIsNotTypeSafeForLinkedMultiValueMap()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromEmptyHashSet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createApproximateCollectionFromEmptyHashSet() {\r\n    Collection<String> set = createApproximateCollection(new HashSet<>(), 2);\r\n    assertThat(set).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromEmptyHashSet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromEmptyHashSet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromNonEmptyHashSet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createApproximateCollectionFromNonEmptyHashSet() {\r\n    HashSet<String> hashSet = new HashSet<>();\r\n    hashSet.add(\"foo\");\r\n    Collection<String> set = createApproximateCollection(hashSet, 2);\r\n    assertThat(set).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromNonEmptyHashSet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromNonEmptyHashSet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromEmptyEnumSet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createApproximateCollectionFromEmptyEnumSet() {\r\n    Collection<Color> colors = createApproximateCollection(EnumSet.noneOf(Color.class), 2);\r\n    assertThat(colors).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromEmptyEnumSet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromEmptyEnumSet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromNonEmptyEnumSet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createApproximateCollectionFromNonEmptyEnumSet() {\r\n    Collection<Color> colors = createApproximateCollection(EnumSet.of(Color.BLUE), 2);\r\n    assertThat(colors).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromNonEmptyEnumSet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateCollectionFromNonEmptyEnumSet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests#createApproximateMapFromEmptyHashMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createApproximateMapFromEmptyHashMap() {\r\n    Map<String, String> map = createApproximateMap(new HashMap<>(), 2);\r\n    assertThat(map).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.CollectionFactoryTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.CollectionFactoryTests#createApproximateMapFromEmptyHashMap()",
    "tailType": "method"
  }
]