[
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeCharacters(char[],int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeCData(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeCData(String data) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createCData(data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeCData(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeCData(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeComment(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeComment(String data) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createComment(data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeComment(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeComment(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeProcessingInstruction(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeProcessingInstruction(String target) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createProcessingInstruction(target, \"\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeProcessingInstruction(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeProcessingInstruction(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeProcessingInstruction(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeProcessingInstruction(String target, String data) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createProcessingInstruction(target, data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeProcessingInstruction(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeProcessingInstruction(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeDTD(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeDTD(String dtd) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createDTD(dtd));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeDTD(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeDTD(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEntityRef(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeEntityRef(String name) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createEntityReference(name, null));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeEntityRef(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEntityRef(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEndDocument()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeEndDocument() throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createEndDocument());\r\n}",
    "tailType": "method_code"
  }
]