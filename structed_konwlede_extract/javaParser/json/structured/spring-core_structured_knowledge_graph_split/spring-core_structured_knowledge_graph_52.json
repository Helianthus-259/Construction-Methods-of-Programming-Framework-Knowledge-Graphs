[
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getClassNameReturnsClassName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isInterfaceWhenInterfaceReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isInterfaceWhenInterfaceReturnsTrue() {\r\n    assertThat(get(TestInterface.class).isInterface()).isTrue();\r\n    assertThat(get(TestAnnotation.class).isInterface()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#isInterfaceWhenInterfaceReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isInterfaceWhenInterfaceReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isInterfaceWhenNotInterfaceReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isInterfaceWhenNotInterfaceReturnsFalse() {\r\n    assertThat(get(TestClass.class).isInterface()).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#isInterfaceWhenNotInterfaceReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isInterfaceWhenNotInterfaceReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotationWhenAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAnnotationWhenAnnotationReturnsTrue() {\r\n    assertThat(get(TestAnnotation.class).isAnnotation()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotationWhenAnnotationReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotationWhenAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotationWhenNotAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAnnotationWhenNotAnnotationReturnsFalse() {\r\n    assertThat(get(TestClass.class).isAnnotation()).isFalse();\r\n    assertThat(get(TestInterface.class).isAnnotation()).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotationWhenNotAnnotationReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotationWhenNotAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isFinalWhenFinalReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isFinalWhenFinalReturnsTrue() {\r\n    assertThat(get(TestFinalClass.class).isFinal()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#isFinalWhenFinalReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isFinalWhenFinalReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isFinalWhenNonFinalReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isFinalWhenNonFinalReturnsFalse() {\r\n    assertThat(get(TestClass.class).isFinal()).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#isFinalWhenNonFinalReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isFinalWhenNonFinalReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isIndependentWhenIndependentReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isIndependentWhenIndependentReturnsTrue() {\r\n    assertThat(get(AbstractAnnotationMetadataTests.class).isIndependent()).isTrue();\r\n    assertThat(get(TestClass.class).isIndependent()).isTrue();\r\n}",
    "tailType": "method_code"
  }
]