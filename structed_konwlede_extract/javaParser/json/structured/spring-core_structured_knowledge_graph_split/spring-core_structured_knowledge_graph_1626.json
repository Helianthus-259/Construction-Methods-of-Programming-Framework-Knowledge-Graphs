[
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#matchesAnnotationClassWhenMatchReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#matchesAnnotationClassWhenMatchReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#matchesAnnotationClassWhenNoMatchReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid matchesAnnotationClassWhenNoMatchReturnsFalse() {\r\n    Class<OtherAnnotation> annotationType = OtherAnnotation.class;\r\n    assertThat(FILTER.matches(annotationType)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#matchesAnnotationClassWhenNoMatchReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#matchesAnnotationClassWhenNoMatchReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenJavaLangAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid plainWhenJavaLangAnnotationReturnsTrue() {\r\n    assertThat(AnnotationFilter.PLAIN.matches(Retention.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenJavaLangAnnotationReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenJavaLangAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenSpringLangAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid plainWhenSpringLangAnnotationReturnsTrue() {\r\n    assertThat(AnnotationFilter.PLAIN.matches(Contract.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenSpringLangAnnotationReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenSpringLangAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenOtherAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid plainWhenOtherAnnotationReturnsFalse() {\r\n    assertThat(AnnotationFilter.PLAIN.matches(TestAnnotation.class)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenOtherAnnotationReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#plainWhenOtherAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#javaWhenJavaLangAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid javaWhenJavaLangAnnotationReturnsTrue() {\r\n    assertThat(AnnotationFilter.JAVA.matches(Retention.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#javaWhenJavaLangAnnotationReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#javaWhenJavaLangAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#javaWhenJavaxAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid javaWhenJavaxAnnotationReturnsTrue() {\r\n    assertThat(AnnotationFilter.JAVA.matches(Nonnull.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationFilterTests#javaWhenJavaxAnnotationReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationFilterTests#javaWhenJavaxAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]