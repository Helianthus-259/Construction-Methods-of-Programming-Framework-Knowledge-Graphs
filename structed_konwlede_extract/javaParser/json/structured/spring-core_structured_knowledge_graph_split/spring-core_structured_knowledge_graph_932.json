[
  {
    "head": "org.springframework.core.env.MapPropertySource#getPropertyNames()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String[] getPropertyNames() {\r\n    return StringUtils.toStringArray(this.source.keySet());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.MapPropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.MapPropertySource#getPropertyNames()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.MapPropertySource#getPropertyNames()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.MapPropertySource",
    "headType": "class",
    "relation": "extend",
    "tail": "EnumerablePropertySource",
    "tailType": "class"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.env",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.env",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.env.MissingRequiredPropertiesException",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.env;\n\nimport java.util.LinkedHashSet;\nimport java.util.Set;\n\n/**\n * Exception thrown when required properties are not found.\n *\n * @author Chris Beams\n * @since 3.1\n * @see ConfigurablePropertyResolver#setRequiredProperties(String...)\n * @see ConfigurablePropertyResolver#validateRequiredProperties()\n * @see org.springframework.context.support.AbstractApplicationContext#prepareRefresh()\n */\n@SuppressWarnings(\"serial\")\npublic class MissingRequiredPropertiesException extends IllegalStateException {\n\n\tprivate final Set<String> missingRequiredProperties = new LinkedHashSet<>();\n\n\n\tvoid addMissingRequiredProperty(String key) {\n\t\tthis.missingRequiredProperties.add(key);\n\t}\n\n\t@Override\n\tpublic String getMessage() {\n\t\treturn \"The following properties were declared as required but could not be resolved: \" +\n\t\t\t\tgetMissingRequiredProperties();\n\t}\n\n\t/**\n\t * Return the set of properties marked as required but not present\n\t * upon validation.\n\t * @see ConfigurablePropertyResolver#setRequiredProperties(String...)\n\t * @see ConfigurablePropertyResolver#validateRequiredProperties()\n\t */\n\tpublic Set<String> getMissingRequiredProperties() {\n\t\treturn this.missingRequiredProperties;\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.env.MissingRequiredPropertiesException#missingRequiredProperties",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException#missingRequiredProperties",
    "headType": "field",
    "relation": "haveType",
    "tail": "Set<String>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException#addMissingRequiredProperty(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "void addMissingRequiredProperty(String key) {\r\n    this.missingRequiredProperties.add(key);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.MissingRequiredPropertiesException#addMissingRequiredProperty(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException#getMessage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String getMessage() {\r\n    return \"The following properties were declared as required but could not be resolved: \" + getMissingRequiredProperties();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.MissingRequiredPropertiesException#getMessage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException#getMessage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException#getMissingRequiredProperties()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the set of properties marked as required but not present\r\n * upon validation.\r\n * @see ConfigurablePropertyResolver#setRequiredProperties(String...)\r\n * @see ConfigurablePropertyResolver#validateRequiredProperties()\r\n */\r\npublic Set<String> getMissingRequiredProperties() {\r\n    return this.missingRequiredProperties;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.MissingRequiredPropertiesException#getMissingRequiredProperties()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.MissingRequiredPropertiesException",
    "headType": "class",
    "relation": "extend",
    "tail": "IllegalStateException",
    "tailType": "class"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.env",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.env",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.env.MutablePropertySources",
    "tailType": "class"
  }
]