[
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithInputStreamSourceAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithCharSequenceAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addResourceFileWithCharSequenceAddsFile() throws Exception {\r\n    this.generatedFiles.addResourceFile(\"META-INF/file\", \"test\");\r\n    assertThatFileAdded(Kind.RESOURCE, \"META-INF/file\").isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithCharSequenceAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithCharSequenceAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithConsumedAppendableAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addResourceFileWithConsumedAppendableAddsFile() throws Exception {\r\n    this.generatedFiles.addResourceFile(\"META-INF/file\", appendable -> appendable.append(\"test\"));\r\n    assertThatFileAdded(Kind.RESOURCE, \"META-INF/file\").isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithConsumedAppendableAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithConsumedAppendableAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithInputStreamSourceAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addResourceFileWithInputStreamSourceAddsFile() throws IOException {\r\n    Resource resource = new ByteArrayResource(\"test\".getBytes(StandardCharsets.UTF_8));\r\n    this.generatedFiles.addResourceFile(\"META-INF/file\", resource);\r\n    assertThatFileAdded(Kind.RESOURCE, \"META-INF/file\").isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithInputStreamSourceAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addResourceFileWithInputStreamSourceAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addClassFileWithInputStreamSourceAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addClassFileWithInputStreamSourceAddsFile() throws IOException {\r\n    Resource resource = new ByteArrayResource(\"test\".getBytes(StandardCharsets.UTF_8));\r\n    this.generatedFiles.addClassFile(\"com/example/HelloWorld.class\", resource);\r\n    assertThatFileAdded(Kind.CLASS, \"com/example/HelloWorld.class\").isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addClassFileWithInputStreamSourceAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addClassFileWithInputStreamSourceAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addFileWithCharSequenceAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addFileWithCharSequenceAddsFile() throws Exception {\r\n    this.generatedFiles.addFile(Kind.RESOURCE, \"META-INF/file\", \"test\");\r\n    assertThatFileAdded(Kind.RESOURCE, \"META-INF/file\").isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addFileWithCharSequenceAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addFileWithCharSequenceAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addFileWithConsumedAppendableAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addFileWithConsumedAppendableAddsFile() throws IOException {\r\n    this.generatedFiles.addFile(Kind.SOURCE, \"com/example/HelloWorld.java\", appendable -> appendable.append(\";\"));\r\n    assertThatFileAdded(Kind.SOURCE, \"com/example/HelloWorld.java\").isEqualTo(\";\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addFileWithConsumedAppendableAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addFileWithConsumedAppendableAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#handleFileWhenFileDoesNotExist()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid handleFileWhenFileDoesNotExist() throws IOException {\r\n    this.generatedFiles.setFileHandler(new TestFileHandler());\r\n    AtomicBoolean called = new AtomicBoolean(false);\r\n    this.generatedFiles.handleFile(Kind.RESOURCE, \"META-INF/test\", handler -> {\r\n        called.set(true);\r\n        handler.create(createSource(\"content\"));\r\n    });\r\n    assertThat(called).isTrue();\r\n    assertThatFileAdded(Kind.RESOURCE, \"META-INF/test\").isEqualTo(\"content\").hasOverride(false);\r\n}",
    "tailType": "method_code"
  }
]