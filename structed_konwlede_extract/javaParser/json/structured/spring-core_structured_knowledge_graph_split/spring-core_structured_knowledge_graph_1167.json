[
  {
    "head": "org.springframework.core.style.DefaultValueStyler#style(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String style(@Nullable Object value) {\r\n    if (value == null) {\r\n        return styleNull();\r\n    } else if (value instanceof String str) {\r\n        return styleString(str);\r\n    } else if (value instanceof Class<?> clazz) {\r\n        return styleClass(clazz);\r\n    } else if (value instanceof Method method) {\r\n        return styleMethod(method);\r\n    } else if (value instanceof Map<?, ?> map) {\r\n        return styleMap(map);\r\n    } else if (value instanceof Map.Entry<?, ?> entry) {\r\n        return styleMapEntry(entry);\r\n    } else if (value instanceof Collection<?> collection) {\r\n        return styleCollection(collection);\r\n    } else if (value.getClass().isArray()) {\r\n        return styleArray(ObjectUtils.toObjectArray(value));\r\n    } else {\r\n        return styleObject(value);\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#style(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#style(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of {@code null}.\r\n * <p>The default implementation returns {@code \"[null]\"}.\r\n * @return a styled version of {@code null}\r\n * @since 6.0\r\n */\r\nprotected String styleNull() {\r\n    return NULL;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleString(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link String}.\r\n * <p>The default implementation returns the supplied string wrapped in\r\n * single quotes.\r\n * @return a styled version of the supplied string\r\n * @since 6.0\r\n */\r\nprotected String styleString(String str) {\r\n    return \"\\'\" + str + \"\\'\";\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleString(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleClass(Class<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link Class}.\r\n * <p>The default implementation delegates to {@link ClassUtils#getShortName(Class)}.\r\n * @return a styled version of the supplied class\r\n * @since 6.0\r\n */\r\nprotected String styleClass(Class<?> clazz) {\r\n    return ClassUtils.getShortName(clazz);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleClass(Class<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleMethod(Method)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link Method}.\r\n * <p>The default implementation returns the method's {@linkplain Method#getName()\r\n * name} and the {@linkplain ClassUtils#getShortName(Class) short name} of the\r\n * method's {@linkplain Method#getDeclaringClass() declaring class}, separated by\r\n * the {@code \"@\"} symbol.\r\n * @return a styled version of the supplied method\r\n * @since 6.0\r\n */\r\nprotected String styleMethod(Method method) {\r\n    return method.getName() + \"@\" + ClassUtils.getShortName(method.getDeclaringClass());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleMethod(Method)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleMap(Map<K,V>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link Map}.\r\n * @return a styled version of the supplied map\r\n * @since 6.0\r\n */\r\nprotected <K, V> String styleMap(Map<K, V> map) {\r\n    if (map.isEmpty()) {\r\n        return EMPTY_MAP;\r\n    }\r\n    StringJoiner result = new StringJoiner(\", \", \"[\", \"]\");\r\n    for (Map.Entry<K, V> entry : map.entrySet()) {\r\n        result.add(styleMapEntry(entry));\r\n    }\r\n    return MAP + result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleMap(Map<K,V>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleMapEntry(Map.Entry<?,?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link Map.Entry}.\r\n * @return a styled version of the supplied map entry\r\n * @since 6.0\r\n */\r\nprotected String styleMapEntry(Map.Entry<?, ?> entry) {\r\n    return style(entry.getKey()) + \" -> \" + style(entry.getValue());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleMapEntry(Map.Entry<?,?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleCollection(Collection<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link Collection}.\r\n * @return a styled version of the supplied collection\r\n * @since 6.0\r\n */\r\nprotected String styleCollection(Collection<?> collection) {\r\n    String collectionType = getCollectionTypeString(collection);\r\n    if (collection.isEmpty()) {\r\n        return collectionType + EMPTY;\r\n    }\r\n    StringJoiner result = new StringJoiner(\", \", \"[\", \"]\");\r\n    for (Object element : collection) {\r\n        result.add(style(element));\r\n    }\r\n    return collectionType + result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleCollection(Collection<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleArray(Object[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied array.\r\n * @return a styled version of the supplied array\r\n * @since 6.0\r\n */\r\nprotected String styleArray(Object[] array) {\r\n    if (array.length == 0) {\r\n        return ARRAY + '<' + ClassUtils.getShortName(array.getClass().componentType()) + '>' + EMPTY;\r\n    }\r\n    StringJoiner result = new StringJoiner(\", \", \"[\", \"]\");\r\n    for (Object element : array) {\r\n        result.add(style(element));\r\n    }\r\n    return ARRAY + '<' + ClassUtils.getShortName(array.getClass().componentType()) + '>' + result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.DefaultValueStyler#styleArray(Object[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.DefaultValueStyler#styleObject(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Generate a styled version of the supplied {@link Object}.\r\n * <p>This method is only invoked by {@link #style(Object)} as a fallback,\r\n * if none of the other {@code style*()} methods is suitable for the object's\r\n * type.\r\n * <p>The default implementation delegates to {@link String#valueOf(Object)}.\r\n * @return a styled version of the supplied object\r\n * @since 6.0\r\n */\r\nprotected String styleObject(Object obj) {\r\n    return String.valueOf(obj);\r\n}",
    "tailType": "method_code"
  }
]