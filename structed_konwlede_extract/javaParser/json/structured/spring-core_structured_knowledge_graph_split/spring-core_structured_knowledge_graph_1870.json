[
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToCharacterInvalidString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToCharacterInvalidString() {\r\n    assertThatExceptionOfType(ConversionFailedException.class).isThrownBy(() -> conversionService.convert(\"invalid\", Character.class));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToCharacterInvalidString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToCharacterInvalidString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#characterToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid characterToString() {\r\n    assertThat(conversionService.convert('3', String.class)).isEqualTo(\"3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#characterToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#characterToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToBooleanTrue() {\r\n    assertThat(conversionService.convert(\"true\", Boolean.class)).isTrue();\r\n    assertThat(conversionService.convert(\"on\", Boolean.class)).isTrue();\r\n    assertThat(conversionService.convert(\"yes\", Boolean.class)).isTrue();\r\n    assertThat(conversionService.convert(\"1\", Boolean.class)).isTrue();\r\n    assertThat(conversionService.convert(\"TRUE\", Boolean.class)).isTrue();\r\n    assertThat(conversionService.convert(\"ON\", Boolean.class)).isTrue();\r\n    assertThat(conversionService.convert(\"YES\", Boolean.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToBooleanFalse() {\r\n    assertThat(conversionService.convert(\"false\", Boolean.class)).isFalse();\r\n    assertThat(conversionService.convert(\"off\", Boolean.class)).isFalse();\r\n    assertThat(conversionService.convert(\"no\", Boolean.class)).isFalse();\r\n    assertThat(conversionService.convert(\"0\", Boolean.class)).isFalse();\r\n    assertThat(conversionService.convert(\"FALSE\", Boolean.class)).isFalse();\r\n    assertThat(conversionService.convert(\"OFF\", Boolean.class)).isFalse();\r\n    assertThat(conversionService.convert(\"NO\", Boolean.class)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanEmptyString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToBooleanEmptyString() {\r\n    assertThat(conversionService.convert(\"\", Boolean.class)).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanEmptyString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanEmptyString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanInvalidString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToBooleanInvalidString() {\r\n    assertThatExceptionOfType(ConversionFailedException.class).isThrownBy(() -> conversionService.convert(\"invalid\", Boolean.class));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanInvalidString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToBooleanInvalidString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#booleanToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid booleanToString() {\r\n    assertThat(conversionService.convert(true, String.class)).isEqualTo(\"true\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#booleanToString()",
    "tailType": "method"
  }
]