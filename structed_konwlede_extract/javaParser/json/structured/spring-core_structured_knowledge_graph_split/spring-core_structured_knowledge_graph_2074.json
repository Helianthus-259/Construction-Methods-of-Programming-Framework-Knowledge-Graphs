[
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableWithField()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNullableWithField() throws NoSuchFieldException {\r\n    var field = NullnessFields.class.getDeclaredField(\"jspecifyNullableField\");\r\n    var nullness = Nullness.forField(field);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNullableWithField()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableWithField()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullWithField()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNonNullWithField() throws NoSuchFieldException {\r\n    var field = NullnessFields.class.getDeclaredField(\"jspecifyNonNullField\");\r\n    var nullness = Nullness.forField(field);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNonNullWithField()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullWithField()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedUnspecifiedReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "// JSpecify with method-level @NullMarked\r\n@Test\r\nvoid jspecifyMethodMarkedUnspecifiedReturnType() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyMethodMarkedUnspecifiedReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedUnspecifiedReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNullableReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyMethodMarkedNullableReturnType() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"nullableMarkedProcess\");\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNullableReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNullableReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNonNullReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyMethodMarkedNonNullReturnType() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"nonNullMarkedProcess\");\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNonNullReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNonNullReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedUnspecifiedParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyMethodMarkedUnspecifiedParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[0]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyMethodMarkedUnspecifiedParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedUnspecifiedParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNullableParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyMethodMarkedNullableParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[1]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyMethodMarkedNullableParameter()",
    "tailType": "method"
  }
]