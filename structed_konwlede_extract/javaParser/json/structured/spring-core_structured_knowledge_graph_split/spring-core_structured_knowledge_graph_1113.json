[
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup#currentSteps",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup#currentSteps",
    "headType": "field",
    "relation": "haveType",
    "tail": "Deque<Long>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup#start(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic StartupStep start(String name) {\r\n    Long parentId = this.currentSteps.getFirst();\r\n    long sequenceId = this.currentSequenceId.incrementAndGet();\r\n    this.currentSteps.offerFirst(sequenceId);\r\n    return new FlightRecorderStartupStep(sequenceId, name, parentId, committedStep -> this.currentSteps.removeFirstOccurrence(sequenceId));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup#start(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup#start(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.metrics.jfr",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.metrics.jfr",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "use",
    "tail": "@Category",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "use",
    "tail": "@Label",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "use",
    "tail": "@Description",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2020 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.metrics.jfr;\n\nimport jdk.jfr.Category;\nimport jdk.jfr.Description;\nimport jdk.jfr.Event;\nimport jdk.jfr.Label;\n\n/**\n * {@link Event} extension for recording {@link FlightRecorderStartupStep}\n * in Java Flight Recorder.\n *\n * <p>{@link org.springframework.core.metrics.StartupStep.Tags} are serialized\n * as a single {@code String}, since Flight Recorder events do not support complex types.\n *\n * @author Brian Clozel\n * @since 5.3\n */\n@Category(\"Spring Application\")\n@Label(\"Startup Step\")\n@Description(\"Spring Application Startup\")\nclass FlightRecorderStartupEvent extends Event {\n\n\tpublic final long eventId;\n\n\tpublic final long parentId;\n\n\t@Label(\"Name\")\n\tpublic final String name;\n\n\t@Label(\"Tags\")\n\tString tags = \"\";\n\n\tpublic FlightRecorderStartupEvent(long eventId, String name, long parentId) {\n\t\tthis.name = name;\n\t\tthis.eventId = eventId;\n\t\tthis.parentId = parentId;\n\t}\n\n\tpublic void setTags(String tags) {\n\t\tthis.tags = tags;\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#eventId",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#eventId",
    "headType": "field",
    "relation": "haveType",
    "tail": "long",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#parentId",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#parentId",
    "headType": "field",
    "relation": "haveType",
    "tail": "long",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#name",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#name",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#tags",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#tags",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.metrics.jfr.FlightRecorderStartupEvent#setTags(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "public void setTags(String tags) {\r\n    this.tags = tags;\r\n}",
    "tailType": "method_code"
  }
]