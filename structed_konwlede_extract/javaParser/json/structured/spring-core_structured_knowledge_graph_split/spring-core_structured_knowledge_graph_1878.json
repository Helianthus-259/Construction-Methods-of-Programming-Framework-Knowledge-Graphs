[
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToCollectionGenericTypeConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToCollectionGenericTypeConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToStream()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertArrayToStream() throws Exception {\r\n    String[] source = { \"1\", \"3\", \"4\" };\r\n    @SuppressWarnings(\"unchecked\")\r\n    Stream<Integer> result = (Stream<Integer>) this.conversionService.convert(source, TypeDescriptor.valueOf(String[].class), new TypeDescriptor(getClass().getDeclaredField(\"genericStream\")));\r\n    assertThat(result).containsExactly(1, 3, 4);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToStream()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToStream()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#spr7766()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid spr7766() throws Exception {\r\n    conversionService.addConverter(new ColorConverter());\r\n    @SuppressWarnings(\"unchecked\")\r\n    List<Color> colors = (List<Color>) conversionService.convert(new String[] { \"ffffff\", \"#000000\" }, TypeDescriptor.valueOf(String[].class), new TypeDescriptor(new MethodParameter(getClass().getMethod(\"handlerMethod\", List.class), 0)));\r\n    assertThat(colors).containsExactly(Color.WHITE, Color.BLACK);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#spr7766()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#spr7766()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToCollectionImpl()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertArrayToCollectionImpl() {\r\n    @SuppressWarnings(\"unchecked\")\r\n    ArrayList<String> result = conversionService.convert(new String[] { \"1\", \"2\", \"3\" }, ArrayList.class);\r\n    assertThat(result).isExactlyInstanceOf(ArrayList.class).containsExactly(\"1\", \"2\", \"3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToCollectionImpl()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToCollectionImpl()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToAbstractCollection()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertArrayToAbstractCollection() {\r\n    assertThatExceptionOfType(ConversionFailedException.class).isThrownBy(() -> conversionService.convert(new String[] { \"1\", \"2\", \"3\" }, AbstractList.class));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToAbstractCollection()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToAbstractCollection()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertArrayToString() {\r\n    String result = conversionService.convert(new String[] { \"1\", \"2\", \"3\" }, String.class);\r\n    assertThat(result).isEqualTo(\"1,2,3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToStringWithElementConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertArrayToStringWithElementConversion() {\r\n    String result = conversionService.convert(new Integer[] { 1, 2, 3 }, String.class);\r\n    assertThat(result).isEqualTo(\"1,2,3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToStringWithElementConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToStringWithElementConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]