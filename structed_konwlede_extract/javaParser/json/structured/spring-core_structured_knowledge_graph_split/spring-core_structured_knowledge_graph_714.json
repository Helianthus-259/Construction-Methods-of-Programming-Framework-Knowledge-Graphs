[
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMethodInsn(int,String,String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMethodInsn(int,String,String,String,boolean)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf) {\r\n    mv1.visitMethodInsn(opcode, owner, name, desc, itf);\r\n    mv2.visitMethodInsn(opcode, owner, name, desc, itf);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitMethodInsn(int,String,String,String,boolean)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMethodInsn(int,String,String,String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitJumpInsn(int,Label)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitJumpInsn(int opcode, Label label) {\r\n    mv1.visitJumpInsn(opcode, label);\r\n    mv2.visitJumpInsn(opcode, label);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitJumpInsn(int,Label)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitJumpInsn(int,Label)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLabel(Label)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitLabel(Label label) {\r\n    mv1.visitLabel(label);\r\n    mv2.visitLabel(label);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitLabel(Label)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLabel(Label)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLdcInsn(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitLdcInsn(Object cst) {\r\n    mv1.visitLdcInsn(cst);\r\n    mv2.visitLdcInsn(cst);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitLdcInsn(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLdcInsn(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitIincInsn(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitIincInsn(int var, int increment) {\r\n    mv1.visitIincInsn(var, increment);\r\n    mv2.visitIincInsn(var, increment);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitIincInsn(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitIincInsn(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitTableSwitchInsn(int,int,Label,Label)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitTableSwitchInsn(int min, int max, Label dflt, Label... labels) {\r\n    mv1.visitTableSwitchInsn(min, max, dflt, labels);\r\n    mv2.visitTableSwitchInsn(min, max, dflt, labels);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitTableSwitchInsn(int,int,Label,Label)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitTableSwitchInsn(int,int,Label,Label)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLookupSwitchInsn(Label,int[],Label[])",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitLookupSwitchInsn(Label dflt, int[] keys, Label[] labels) {\r\n    mv1.visitLookupSwitchInsn(dflt, keys, labels);\r\n    mv2.visitLookupSwitchInsn(dflt, keys, labels);\r\n}",
    "tailType": "method_code"
  }
]