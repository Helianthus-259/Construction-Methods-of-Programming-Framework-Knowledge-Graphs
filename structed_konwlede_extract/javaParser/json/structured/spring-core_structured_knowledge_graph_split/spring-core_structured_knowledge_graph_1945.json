[
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#getComplexProperty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#getProperty()",
    "headType": "method",
    "relation": "provide",
    "tail": "@MethodAnnotation1\r\npublic Map<List<Integer>, List<Long>> getProperty() {\r\n    return property;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#getProperty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#getProperty()",
    "headType": "method",
    "relation": "use",
    "tail": "@MethodAnnotation1",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#setProperty(Map<List<Integer>,List<Long>>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@MethodAnnotation2\r\npublic void setProperty(Map<List<Integer>, List<Long>> property) {\r\n    this.property = property;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#setProperty(Map<List<Integer>,List<Long>>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#setProperty(Map<List<Integer>,List<Long>>)",
    "headType": "method",
    "relation": "use",
    "tail": "@MethodAnnotation2",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#methodWithLocalAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@MethodAnnotation1\r\npublic void methodWithLocalAnnotation() ;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#methodWithLocalAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#methodWithLocalAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@MethodAnnotation1",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#methodWithComposedAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@ComposedMethodAnnotation1\r\npublic void methodWithComposedAnnotation() ;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#methodWithComposedAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#methodWithComposedAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@ComposedMethodAnnotation1",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#methodWithComposedComposedAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@ComposedComposedMethodAnnotation1\r\npublic void methodWithComposedComposedAnnotation() ;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#methodWithComposedComposedAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#methodWithComposedComposedAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@ComposedComposedMethodAnnotation1",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#setComplexProperty(Map<String,List<List<Integer>>>)",
    "headType": "method",
    "relation": "provide",
    "tail": "public void setComplexProperty(Map<String, List<List<Integer>>> complexProperty) ;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#setComplexProperty(Map<String,List<List<Integer>>>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests#testAnnotatedMethod(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "public void testAnnotatedMethod(@ParameterAnnotation(123) String parameter) ;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.TypeDescriptorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.TypeDescriptorTests#testAnnotatedMethod(String)",
    "tailType": "method"
  }
]