[
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithObjectArrayEqualToNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeToStringWithShortArray() {\r\n    short[] array = { 7, 9 };\r\n    assertThat(ObjectUtils.nullSafeToString(array)).isEqualTo(\"{7, 9}\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArrayBeingEmpty()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeToStringWithShortArrayBeingEmpty() {\r\n    short[] array = ;;\r\n    assertThat(ObjectUtils.nullSafeToString(array)).isEqualTo(\";\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArrayBeingEmpty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArrayBeingEmpty()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArrayEqualToNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeToStringWithShortArrayEqualToNull() {\r\n    assertThat(ObjectUtils.nullSafeToString((short[]) null)).isEqualTo(\"null\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArrayEqualToNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithShortArrayEqualToNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeToStringWithStringArray() {\r\n    String[] array = { \"Luke\", \"Anakin\" };\r\n    assertThat(ObjectUtils.nullSafeToString(array)).isEqualTo(\"{Luke, Anakin}\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArrayBeingEmpty()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeToStringWithStringArrayBeingEmpty() {\r\n    String[] array = ;;\r\n    assertThat(ObjectUtils.nullSafeToString(array)).isEqualTo(\";\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArrayBeingEmpty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArrayBeingEmpty()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArrayEqualToNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeToStringWithStringArrayEqualToNull() {\r\n    assertThat(ObjectUtils.nullSafeToString((String[]) null)).isEqualTo(\"null\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArrayEqualToNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeToStringWithStringArrayEqualToNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#containsConstant()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid containsConstant() {\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"FOO\")).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"foo\")).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"BaR\")).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"bar\")).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"BAZ\")).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"baz\")).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"BOGUS\")).isFalse();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"FOO\", true)).isTrue();\r\n    assertThat(ObjectUtils.containsConstant(Tropes.values(), \"foo\", true)).isFalse();\r\n}",
    "tailType": "method_code"
  }
]