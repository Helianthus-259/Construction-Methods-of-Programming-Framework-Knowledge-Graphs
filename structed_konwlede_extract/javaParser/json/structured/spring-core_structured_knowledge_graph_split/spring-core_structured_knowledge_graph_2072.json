[
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2025 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core;\n\nimport org.assertj.core.api.Assertions;\nimport org.junit.jupiter.api.Test;\n\nimport org.springframework.core.testfixture.nullness.ClassMarkedJSpecifyProcessor;\nimport org.springframework.core.testfixture.nullness.CustomNullableProcessor;\nimport org.springframework.core.testfixture.nullness.JSpecifyProcessor;\nimport org.springframework.core.testfixture.nullness.NullnessFields;\nimport org.springframework.core.testfixture.nullness.marked.PackageMarkedJSpecifyProcessor;\nimport org.springframework.core.testfixture.nullness.marked.unmarked.PackageUnmarkedJSpecifyProcessor;\n\n/**\n * Tests for {@link Nullness}.\n *\n * @author Sebastien Deleuze\n */\npublic class NullnessTests {\n\n\t// JSpecify without @NullMarked and @NullUnmarked\n\n\t@Test\n\tvoid jspecifyUnspecifiedReturnType() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyNullableReturnType() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"nullableProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyNonNullReturnType() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"nonNullProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyUnspecifiedParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyNullableParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[1]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyNonNullParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[2]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// JSpecify with MethodParameter without @NullMarked and @NullUnmarked\n\n\t@Test\n\tvoid jspecifyUnspecifiedReturnTypeWithMethodParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar methodParameter = MethodParameter.forExecutable(method, -1);\n\t\tvar nullness = Nullness.forMethodParameter(methodParameter);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyNullableReturnTypeWithMethodParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"nullableProcess\");\n\t\tvar methodParameter = MethodParameter.forExecutable(method, -1);\n\t\tvar nullness = Nullness.forMethodParameter(methodParameter);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyNonNullReturnTypeWithMethodParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"nonNullProcess\");\n\t\tvar methodParameter = MethodParameter.forExecutable(method, -1);\n\t\tvar nullness = Nullness.forMethodParameter(methodParameter);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyUnspecifiedParameterWithMethodParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar methodParameter = MethodParameter.forExecutable(method, 0);\n\t\tvar nullness = Nullness.forMethodParameter(methodParameter);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyNullableParameterWithMethodParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar methodParameter = MethodParameter.forExecutable(method, 1);\n\t\tvar nullness = Nullness.forMethodParameter(methodParameter);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyNonNullParameterWithMethodParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar methodParameter = MethodParameter.forExecutable(method, 2);\n\t\tvar nullness = Nullness.forMethodParameter(methodParameter);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// JSpecify with Field without @NullMarked and @NullUnmarked\n\n\t@Test\n\tvoid jspecifyUnspecifiedWithField() throws NoSuchFieldException {\n\t\tvar field = NullnessFields.class.getDeclaredField(\"unannotatedField\");\n\t\tvar nullness = Nullness.forField(field);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyNullableWithField() throws NoSuchFieldException {\n\t\tvar field = NullnessFields.class.getDeclaredField(\"jspecifyNullableField\");\n\t\tvar nullness = Nullness.forField(field);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyNonNullWithField() throws NoSuchFieldException {\n\t\tvar field = NullnessFields.class.getDeclaredField(\"jspecifyNonNullField\");\n\t\tvar nullness = Nullness.forField(field);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// JSpecify with method-level @NullMarked\n\n\t@Test\n\tvoid jspecifyMethodMarkedUnspecifiedReturnType() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyMethodMarkedNullableReturnType() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"nullableMarkedProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyMethodMarkedNonNullReturnType() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"nonNullMarkedProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyMethodMarkedUnspecifiedParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyMethodMarkedNullableParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[1]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyMethodMarkedNonNullParameter() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"markedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[2]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// JSpecify with class-level @NullMarked\n\n\t@Test\n\tvoid jspecifyClassMarkedUnspecifiedReturnType() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedNullableReturnType() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"nullableProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedNonNullReturnType() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"nonNullProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedUnspecifiedParameter() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedNullableParameter() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[1]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedNonNullParameter() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[2]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedMethodUnmarkedUnspecifiedReturnType() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"unmarkedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedMethodUnmarkedUnspecifiedParameter() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"unmarkedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedMethodUnmarkedNullableParameter() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"unmarkedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[1]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyClassMarkedMethodUnmarkedNonNullParameter() throws NoSuchMethodException {\n\t\tvar method = ClassMarkedJSpecifyProcessor.class.getMethod(\"unmarkedProcess\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[2]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// JSpecify with package-level @NullMarked\n\n\t@Test\n\tvoid jspecifyPackageMarkedUnspecifiedReturnType() throws NoSuchMethodException {\n\t\tvar method = PackageMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageMarkedNullableReturnType() throws NoSuchMethodException {\n\t\tvar method = PackageMarkedJSpecifyProcessor.class.getMethod(\"nullableProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageMarkedNonNullReturnType() throws NoSuchMethodException {\n\t\tvar method = PackageMarkedJSpecifyProcessor.class.getMethod(\"nonNullProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageMarkedUnspecifiedParameter() throws NoSuchMethodException {\n\t\tvar method = PackageMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageMarkedNullableParameter() throws NoSuchMethodException {\n\t\tvar method = PackageMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[1]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageMarkedNonNullParameter() throws NoSuchMethodException {\n\t\tvar method = PackageMarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[2]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// JSpecify with package-level @NullUnmarked\n\n\t@Test\n\tvoid jspecifyPackageUnmarkedUnspecifiedReturnType() throws NoSuchMethodException {\n\t\tvar method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageUnmarkedNullableReturnType() throws NoSuchMethodException {\n\t\tvar method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"nullableProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageUnmarkedNonNullReturnType() throws NoSuchMethodException {\n\t\tvar method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"nonNullProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageUnmarkedUnspecifiedParameter() throws NoSuchMethodException {\n\t\tvar method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageUnmarkedNullableParameter() throws NoSuchMethodException {\n\t\tvar method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[1]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid jspecifyPackageUnmarkedNonNullParameter() throws NoSuchMethodException {\n\t\tvar method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[2]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t// Custom @Nullable\n\n\t@Test\n\tvoid customNullableReturnType() throws NoSuchMethodException {\n\t\tvar method = CustomNullableProcessor.class.getMethod(\"process\", String.class);\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid customNullableParameter() throws NoSuchMethodException {\n\t\tvar method = CustomNullableProcessor.class.getMethod(\"process\", String.class);\n\t\tvar nullness = Nullness.forParameter(method.getParameters()[0]);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t@Test\n\tvoid customNullableField() throws NoSuchFieldException {\n\t\tvar field = NullnessFields.class.getDeclaredField(\"customNullableField\");\n\t\tvar nullness = Nullness.forField(field);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\n\t}\n\n\t// Primitive types\n\n\t@Test\n\tvoid primitiveField() throws NoSuchFieldException {\n\t\tvar field = NullnessFields.class.getDeclaredField(\"primitiveField\");\n\t\tvar nullness = Nullness.forField(field);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\n\t}\n\n\t@Test\n\tvoid voidMethod() throws NoSuchMethodException {\n\t\tvar method = JSpecifyProcessor.class.getMethod(\"voidProcess\");\n\t\tvar nullness = Nullness.forMethodReturnType(method);\n\t\tAssertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "// JSpecify without @NullMarked and @NullUnmarked\r\n@Test\r\nvoid jspecifyUnspecifiedReturnType() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyUnspecifiedReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNullableReturnType() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"nullableProcess\");\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNullableReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNonNullReturnType() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"nonNullProcess\");\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNonNullReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyUnspecifiedParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[0]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyUnspecifiedParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNullableParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[1]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNullableParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNonNullParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[2]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNonNullParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedReturnTypeWithMethodParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "// JSpecify with MethodParameter without @NullMarked and @NullUnmarked\r\n@Test\r\nvoid jspecifyUnspecifiedReturnTypeWithMethodParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var methodParameter = MethodParameter.forExecutable(method, -1);\r\n    var nullness = Nullness.forMethodParameter(methodParameter);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\r\n}",
    "tailType": "method_code"
  }
]