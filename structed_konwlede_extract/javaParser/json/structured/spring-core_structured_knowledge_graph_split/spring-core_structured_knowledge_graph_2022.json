[
  {
    "head": "org.springframework.core.io.GetDescription#withStringConstructor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withStringConstructorAndLeadingSlash()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withStringConstructorAndLeadingSlash() {\r\n    assertDescription(new ClassPathResource(ABSOLUTE_PATH_TO_NONEXISTENT_RESOURCE_WITH_LEADING_SLASH));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.GetDescription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.GetDescription#withStringConstructorAndLeadingSlash()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withStringConstructorAndLeadingSlash()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLiteralConstructor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withClassLiteralConstructor() {\r\n    assertDescription(new ClassPathResource(NONEXISTENT_RESOURCE_NAME, getClass()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.GetDescription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.GetDescription#withClassLiteralConstructor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLiteralConstructor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLiteralConstructorAndLeadingSlash()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withClassLiteralConstructorAndLeadingSlash() {\r\n    assertDescription(new ClassPathResource(ABSOLUTE_PATH_TO_NONEXISTENT_RESOURCE_WITH_LEADING_SLASH, getClass()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.GetDescription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.GetDescription#withClassLiteralConstructorAndLeadingSlash()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLiteralConstructorAndLeadingSlash()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLoaderConstructor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withClassLoaderConstructor() {\r\n    assertDescription(new ClassPathResource(ABSOLUTE_PATH_TO_NONEXISTENT_RESOURCE, getClass().getClassLoader()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.GetDescription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.GetDescription#withClassLoaderConstructor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLoaderConstructor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLoaderConstructorAndLeadingSlash()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withClassLoaderConstructorAndLeadingSlash() {\r\n    assertDescription(new ClassPathResource(ABSOLUTE_PATH_TO_NONEXISTENT_RESOURCE_WITH_LEADING_SLASH, getClass().getClassLoader()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.GetDescription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.GetDescription#withClassLoaderConstructorAndLeadingSlash()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.GetDescription#withClassLoaderConstructorAndLeadingSlash()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.GetDescription#assertDescription(ClassPathResource)",
    "headType": "method",
    "relation": "provide",
    "tail": "private static void assertDescription(ClassPathResource resource) {\r\n    assertThat(resource.getDescription()).isEqualTo(\"class path resource [%s]\", ABSOLUTE_PATH_TO_NONEXISTENT_RESOURCE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.GetDescription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.GetDescription#assertDescription(ClassPathResource)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.io.GetPath",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.io.GetPath",
    "headType": "class",
    "relation": "use",
    "tail": "@Nested",
    "tailType": "annotation"
  }
]