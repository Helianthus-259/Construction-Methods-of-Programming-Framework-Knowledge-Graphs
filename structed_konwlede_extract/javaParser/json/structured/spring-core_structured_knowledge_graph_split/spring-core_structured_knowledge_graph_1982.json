[
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#ps",
    "headType": "field",
    "relation": "haveType",
    "tail": "PropertySource<?>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#setUp()",
    "headType": "method",
    "relation": "provide",
    "tail": "@BeforeEach\r\nvoid setUp() {\r\n    envMap = new HashMap<>();\r\n    ps = new SystemEnvironmentPropertySource(\"sysEnv\", envMap);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#setUp()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#setUp()",
    "headType": "method",
    "relation": "use",
    "tail": "@BeforeEach",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#none()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid none() {\r\n    assertThat(ps.containsProperty(\"a.key\")).isFalse();\r\n    assertThat(ps.getProperty(\"a.key\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#none()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#none()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#normalWithoutPeriod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid normalWithoutPeriod() {\r\n    envMap.put(\"akey\", \"avalue\");\r\n    assertThat(ps.containsProperty(\"akey\")).isTrue();\r\n    assertThat(ps.getProperty(\"akey\")).isEqualTo(\"avalue\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#normalWithoutPeriod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#normalWithoutPeriod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#normalWithPeriod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid normalWithPeriod() {\r\n    envMap.put(\"a.key\", \"a.value\");\r\n    assertThat(ps.containsProperty(\"a.key\")).isTrue();\r\n    assertThat(ps.getProperty(\"a.key\")).isEqualTo(\"a.value\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#normalWithPeriod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#normalWithPeriod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withUnderscore()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withUnderscore() {\r\n    envMap.put(\"a_key\", \"a_value\");\r\n    assertThat(ps.containsProperty(\"a_key\")).isTrue();\r\n    assertThat(ps.containsProperty(\"a.key\")).isTrue();\r\n    assertThat(ps.getProperty(\"a_key\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"a.key\")).isEqualTo(\"a_value\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withUnderscore()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withUnderscore()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withBothPeriodAndUnderscore()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withBothPeriodAndUnderscore() {\r\n    envMap.put(\"a_key\", \"a_value\");\r\n    envMap.put(\"a.key\", \"a.value\");\r\n    assertThat(ps.getProperty(\"a_key\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"a.key\")).isEqualTo(\"a.value\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withBothPeriodAndUnderscore()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withBothPeriodAndUnderscore()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SystemEnvironmentPropertySourceTests#withUppercase()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withUppercase() {\r\n    envMap.put(\"A_KEY\", \"a_value\");\r\n    envMap.put(\"A_LONG_KEY\", \"a_long_value\");\r\n    envMap.put(\"A_DOT.KEY\", \"a_dot_value\");\r\n    envMap.put(\"A_HYPHEN-KEY\", \"a_hyphen_value\");\r\n    assertThat(ps.containsProperty(\"A_KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"a_key\")).isTrue();\r\n    assertThat(ps.containsProperty(\"a.key\")).isTrue();\r\n    assertThat(ps.containsProperty(\"a-key\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A_LONG_KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.LONG.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-LONG-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.LONG-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-LONG.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A_long_KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.long.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-long-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.long-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-long.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A_DOT.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-DOT.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A_dot.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A-dot.KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A_HYPHEN-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.HYPHEN-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A_hyphen-KEY\")).isTrue();\r\n    assertThat(ps.containsProperty(\"A.hyphen-KEY\")).isTrue();\r\n    assertThat(ps.getProperty(\"A_KEY\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"A.KEY\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"A-KEY\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"a_key\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"a.key\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"a-key\")).isEqualTo(\"a_value\");\r\n    assertThat(ps.getProperty(\"A_LONG_KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A.LONG.KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A-LONG-KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A.LONG-KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A-LONG.KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A_long_KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A.long.KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A-long-KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A.long-KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A-long.KEY\")).isEqualTo(\"a_long_value\");\r\n    assertThat(ps.getProperty(\"A_DOT.KEY\")).isEqualTo(\"a_dot_value\");\r\n    assertThat(ps.getProperty(\"A-DOT.KEY\")).isEqualTo(\"a_dot_value\");\r\n    assertThat(ps.getProperty(\"A_dot.KEY\")).isEqualTo(\"a_dot_value\");\r\n    assertThat(ps.getProperty(\"A-dot.KEY\")).isEqualTo(\"a_dot_value\");\r\n    assertThat(ps.getProperty(\"A_HYPHEN-KEY\")).isEqualTo(\"a_hyphen_value\");\r\n    assertThat(ps.getProperty(\"A.HYPHEN-KEY\")).isEqualTo(\"a_hyphen_value\");\r\n    assertThat(ps.getProperty(\"A_hyphen-KEY\")).isEqualTo(\"a_hyphen_value\");\r\n    assertThat(ps.getProperty(\"A.hyphen-KEY\")).isEqualTo(\"a_hyphen_value\");\r\n}",
    "tailType": "method_code"
  }
]