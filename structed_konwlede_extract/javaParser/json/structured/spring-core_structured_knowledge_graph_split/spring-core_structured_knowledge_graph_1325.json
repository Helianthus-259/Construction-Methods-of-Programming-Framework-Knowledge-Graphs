[
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#entrySet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#forEach(BiConsumer<? super String,? super V>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void forEach(BiConsumer<? super String, ? super V> action) {\r\n    this.targetMap.forEach(action);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#forEach(BiConsumer<? super String,? super V>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#forEach(BiConsumer<? super String,? super V>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#clone()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic LinkedCaseInsensitiveMap<V> clone() {\r\n    return new LinkedCaseInsensitiveMap<>(this);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#clone()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#clone()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean equals(@Nullable Object other) {\r\n    return (this == other || this.targetMap.equals(other));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#equals(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#equals(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#hashCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int hashCode() {\r\n    return this.targetMap.hashCode();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#hashCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#hashCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#toString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString() {\r\n    return this.targetMap.toString();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#toString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#toString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#getLocale()",
    "headType": "method",
    "relation": "provide",
    "tail": "// Specific to LinkedCaseInsensitiveMap\r\n/**\r\n * Return the locale used by this {@code LinkedCaseInsensitiveMap}.\r\n * Used for case-insensitive key conversion.\r\n * @since 4.3.10\r\n * @see #LinkedCaseInsensitiveMap(Locale)\r\n * @see #convertKey(String)\r\n */\r\npublic Locale getLocale() {\r\n    return this.locale;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#getLocale()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap#convertKey(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Convert the given key to a case-insensitive key.\r\n * <p>The default implementation converts the key\r\n * to lower-case according to this Map's Locale.\r\n * @param key the user-specified key\r\n * @return the key to use for storing\r\n * @see String#toLowerCase(Locale)\r\n */\r\nprotected String convertKey(String key) {\r\n    return key.toLowerCase(getLocale());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedCaseInsensitiveMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedCaseInsensitiveMap#convertKey(String)",
    "tailType": "method"
  }
]