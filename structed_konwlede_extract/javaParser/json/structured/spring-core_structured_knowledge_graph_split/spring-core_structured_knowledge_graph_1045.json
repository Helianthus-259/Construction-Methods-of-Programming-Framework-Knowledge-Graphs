[
  {
    "head": "org.springframework.core.io.InputStreamResource#description",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.InputStreamResource#equality",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#equality",
    "headType": "field",
    "relation": "haveType",
    "tail": "Object",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.InputStreamResource#read",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#read",
    "headType": "field",
    "relation": "haveType",
    "tail": "boolean",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#exists()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation always returns {@code true}.\r\n */\r\n@Override\r\npublic boolean exists() {\r\n    return true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.InputStreamResource#exists()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#exists()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#isOpen()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation always returns {@code true}.\r\n */\r\n@Override\r\npublic boolean isOpen() {\r\n    return true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.InputStreamResource#isOpen()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#isOpen()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#getInputStream()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation throws IllegalStateException if attempting to\r\n * read the underlying stream multiple times.\r\n */\r\n@Override\r\npublic InputStream getInputStream() throws IOException, IllegalStateException {\r\n    if (this.read) {\r\n        throw new IllegalStateException(\"InputStream has already been read (possibly for early content length \" + \"determination) - do not use InputStreamResource if a stream needs to be read multiple times\");\r\n    }\r\n    this.read = true;\r\n    return this.inputStreamSource.getInputStream();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.InputStreamResource#getInputStream()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#getInputStream()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#getDescription()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation returns a description that includes the passed-in\r\n * description, if any.\r\n */\r\n@Override\r\npublic String getDescription() {\r\n    return \"InputStream resource [\" + this.description + \"]\";\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.InputStreamResource#getDescription()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#getDescription()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation compares the underlying InputStream.\r\n */\r\n@Override\r\npublic boolean equals(@Nullable Object other) {\r\n    return (this == other || (other instanceof InputStreamResource that && this.equality.equals(that.equality)));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.InputStreamResource#equals(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.InputStreamResource#equals(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]