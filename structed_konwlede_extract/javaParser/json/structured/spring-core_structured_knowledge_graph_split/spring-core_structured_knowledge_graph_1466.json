[
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getPIData()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getTextStart()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int getTextStart() {\r\n    return 0;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamReader#getTextStart()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getTextStart()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getText()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String getText() {\r\n    if (this.event.isCharacters()) {\r\n        return this.event.asCharacters().getData();\r\n    } else if (this.event.getEventType() == XMLStreamConstants.COMMENT) {\r\n        return ((Comment) this.event).getText();\r\n    } else {\r\n        throw new IllegalStateException();\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamReader#getText()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getText()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeCount()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@SuppressWarnings(\"rawtypes\")\r\npublic int getAttributeCount() {\r\n    if (!this.event.isStartElement()) {\r\n        throw new IllegalStateException();\r\n    }\r\n    Iterator attributes = this.event.asStartElement().getAttributes();\r\n    return countIterator(attributes);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamReader#getAttributeCount()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeCount()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeCount()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#isAttributeSpecified(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isAttributeSpecified(int index) {\r\n    return getAttribute(index).isSpecified();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamReader#isAttributeSpecified(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#isAttributeSpecified(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeName(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic QName getAttributeName(int index) {\r\n    return getAttribute(index).getName();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamReader#getAttributeName(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeName(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeType(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String getAttributeType(int index) {\r\n    return getAttribute(index).getDTDType();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamReader#getAttributeType(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamReader#getAttributeType(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]