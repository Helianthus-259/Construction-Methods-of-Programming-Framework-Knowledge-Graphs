[
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToObjectWithElementConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToObjectAssignableTargetType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertArrayToObjectAssignableTargetType() {\r\n    Long[] array = new Long[] { 3L };\r\n    Long[] result = (Long[]) conversionService.convert(array, Object.class);\r\n    assertThat(result).isEqualTo(array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToObjectAssignableTargetType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertArrayToObjectAssignableTargetType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToArray() {\r\n    Object[] result = conversionService.convert(3L, Object[].class);\r\n    assertThat(result).containsExactly(3L);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToArrayWithElementConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToArrayWithElementConversion() {\r\n    Integer[] result = conversionService.convert(3L, Integer[].class);\r\n    assertThat(result).containsExactly(3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToArrayWithElementConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToArrayWithElementConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertCollectionToArray() {\r\n    List<String> list = List.of(\"1\", \"2\", \"3\");\r\n    String[] result = conversionService.convert(list, String[].class);\r\n    assertThat(result).containsExactly(\"1\", \"2\", \"3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToArrayWithElementConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertCollectionToArrayWithElementConversion() {\r\n    List<String> list = List.of(\"1\", \"2\", \"3\");\r\n    Integer[] result = conversionService.convert(list, Integer[].class);\r\n    assertThat(result).containsExactly(1, 2, 3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToArrayWithElementConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToArrayWithElementConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertCollectionToString() {\r\n    List<String> list = List.of(\"foo\", \"bar\");\r\n    String result = conversionService.convert(list, String.class);\r\n    assertThat(result).isEqualTo(\"foo,bar\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToStringWithElementConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertCollectionToStringWithElementConversion() throws Exception {\r\n    List<Integer> list = List.of(3, 5);\r\n    String result = (String) conversionService.convert(list, new TypeDescriptor(getClass().getField(\"genericList\")), TypeDescriptor.valueOf(String.class));\r\n    assertThat(result).isEqualTo(\"3,5\");\r\n}",
    "tailType": "method_code"
  }
]