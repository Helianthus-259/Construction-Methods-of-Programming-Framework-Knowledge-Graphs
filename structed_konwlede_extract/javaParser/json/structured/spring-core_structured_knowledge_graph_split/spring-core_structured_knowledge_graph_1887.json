[
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectUsingValueOfMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringUsingToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToStringUsingToString() {\r\n    SSN.reset();\r\n    assertThat(conversionService.convert(new SSN(\"123456789\"), String.class)).isEqualTo(\"123456789\");\r\n    assertThat(SSN.constructorCount).as(\"constructor invocations\").isEqualTo(1);\r\n    assertThat(SSN.toStringCount).as(\"toString() invocations\").isEqualTo(1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringUsingToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringUsingToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectUsingObjectConstructor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToObjectUsingObjectConstructor() {\r\n    SSN.reset();\r\n    assertThat(conversionService.convert(\"123456789\", SSN.class)).isEqualTo(new SSN(\"123456789\"));\r\n    assertThat(SSN.constructorCount).as(\"constructor invocations\").isEqualTo(2);\r\n    assertThat(SSN.toStringCount).as(\"toString() invocations\").isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectUsingObjectConstructor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectUsingObjectConstructor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringToTimezone()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertStringToTimezone() {\r\n    assertThat(conversionService.convert(\"GMT+2\", TimeZone.class).getID()).isEqualTo(\"GMT+02:00\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringToTimezone()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringToTimezone()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringWithJavaTimeOfMethodPresent()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToStringWithJavaTimeOfMethodPresent() {\r\n    assertThat(conversionService.convert(ZoneId.of(\"GMT+1\"), String.class)).startsWith(\"GMT+\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringWithJavaTimeOfMethodPresent()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringWithJavaTimeOfMethodPresent()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringNotSupported()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToStringNotSupported() {\r\n    assertThat(conversionService.canConvert(TestEntity.class, String.class)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringNotSupported()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToStringNotSupported()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectWithJavaTimeOfMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToObjectWithJavaTimeOfMethod() {\r\n    assertThat(conversionService.convert(\"GMT+1\", ZoneId.class)).isEqualTo(ZoneId.of(\"GMT+1\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectWithJavaTimeOfMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectWithJavaTimeOfMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToObjectNoValueOfMethodOrConstructor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToObjectNoValueOfMethodOrConstructor() {\r\n    assertThatExceptionOfType(ConverterNotFoundException.class).isThrownBy(() -> conversionService.convert(3L, SSN.class));\r\n}",
    "tailType": "method_code"
  }
]