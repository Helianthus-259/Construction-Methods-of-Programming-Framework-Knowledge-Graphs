[
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#IMAGE_PNG_VALUE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#IMAGE_PNG_VALUE",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#TEXT_HTML",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#TEXT_HTML",
    "headType": "field",
    "relation": "haveType",
    "tail": "MimeType",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#TEXT_HTML_VALUE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#TEXT_HTML_VALUE",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#TEXT_PLAIN",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#TEXT_PLAIN",
    "headType": "field",
    "relation": "haveType",
    "tail": "MimeType",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#TEXT_PLAIN_VALUE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#TEXT_PLAIN_VALUE",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#TEXT_XML",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#TEXT_XML",
    "headType": "field",
    "relation": "haveType",
    "tail": "MimeType",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#TEXT_XML_VALUE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#TEXT_XML_VALUE",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#cachedMimeTypes",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#cachedMimeTypes",
    "headType": "field",
    "relation": "haveType",
    "tail": "ConcurrentLruCache<String, MimeType>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.MimeTypeUtils#random",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#random",
    "headType": "field",
    "relation": "haveType",
    "tail": "Random",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils#parseMimeType(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Parse the given String into a single {@code MimeType}.\r\n * Recently parsed {@code MimeType} are cached for further retrieval.\r\n * @param mimeType the string to parse\r\n * @return the mime type\r\n * @throws InvalidMimeTypeException if the string cannot be parsed\r\n */\r\npublic static MimeType parseMimeType(String mimeType) {\r\n    if (!StringUtils.hasLength(mimeType)) {\r\n        throw new InvalidMimeTypeException(mimeType, \"'mimeType' must not be empty\");\r\n    }\r\n    // do not cache multipart mime types with random boundaries\r\n    if (mimeType.startsWith(\"multipart\")) {\r\n        return parseMimeTypeInternal(mimeType);\r\n    }\r\n    return cachedMimeTypes.get(mimeType);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeUtils#parseMimeType(String)",
    "tailType": "method"
  }
]