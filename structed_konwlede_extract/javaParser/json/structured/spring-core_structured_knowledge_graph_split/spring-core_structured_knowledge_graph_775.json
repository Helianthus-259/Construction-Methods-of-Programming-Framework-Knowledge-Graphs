[
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getRoot()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getMetaTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get the complete list of annotation types within the annotation hierarchy\r\n * from this annotation to the {@link #getRoot() root}.\r\n * <p>Provides a useful way to uniquely identify a merged annotation instance.\r\n * @return the meta types for the annotation\r\n * @see MergedAnnotationPredicates#unique(Function)\r\n * @see #getRoot()\r\n * @see #getMetaSource()\r\n */\r\nList<Class<? extends Annotation>> getMetaTypes();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getMetaTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#hasNonDefaultValue(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Determine if the specified attribute name has a non-default value when\r\n * compared to the annotation declaration.\r\n * @param attributeName the attribute name\r\n * @return {@code true} if the attribute value is different from the default\r\n * value\r\n */\r\nboolean hasNonDefaultValue(String attributeName);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#hasNonDefaultValue(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#hasDefaultValue(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Determine if the specified attribute name has a default value when compared\r\n * to the annotation declaration.\r\n * @param attributeName the attribute name\r\n * @return {@code true} if the attribute value is the same as the default\r\n * value\r\n */\r\nboolean hasDefaultValue(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#hasDefaultValue(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getByte(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required byte attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a byte\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nbyte getByte(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getByte(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getByteArray(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required byte array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a byte array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nbyte[] getByteArray(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getByteArray(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getBoolean(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required boolean attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a boolean\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nboolean getBoolean(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getBoolean(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getBooleanArray(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required boolean array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a boolean array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nboolean[] getBooleanArray(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getBooleanArray(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getChar(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required char attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a char\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nchar getChar(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getChar(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getCharArray(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required char array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a char array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nchar[] getCharArray(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getCharArray(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getShort(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required short attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a short\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nshort getShort(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  }
]