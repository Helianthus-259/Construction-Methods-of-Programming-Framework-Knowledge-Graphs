[
  {
    "head": "org.springframework.core.MethodParameterTests#nestedWithTypeIndexReturnsNewInstance()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nestedWithTypeIndexReturnsNewInstance() throws Exception {\r\n    Method method = ArrayList.class.getMethod(\"get\", int.class);\r\n    MethodParameter m1 = MethodParameter.forExecutable(method, -1);\r\n    MethodParameter m2 = m1.nested(2);\r\n    MethodParameter m3 = m1.nested(3);\r\n    assertThat(m1).isNotSameAs(m2).isNotSameAs(m3);\r\n    assertThat(m1.getTypeIndexForCurrentLevel()).isNull();\r\n    assertThat(m2.getTypeIndexForCurrentLevel()).isEqualTo(2);\r\n    assertThat(m3.getTypeIndexForCurrentLevel()).isEqualTo(3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#nestedWithTypeIndexReturnsNewInstance()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#nestedWithTypeIndexReturnsNewInstance()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNullableParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNullableParameter() {\r\n    assertThat(jspecifyNullableParameter.isOptional()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#jspecifyNullableParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNullableParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNonNullParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNonNullParameter() {\r\n    assertThat(jspecifyNonNullParameter.isOptional()).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#jspecifyNonNullParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNonNullParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#springNullableParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid springNullableParameter() {\r\n    assertThat(springNullableParameter.isOptional()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#springNullableParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#springNullableParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#springNonNullParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid springNonNullParameter() {\r\n    assertThat(springNonNullParameter.isOptional()).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#springNonNullParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#springNonNullParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#method(String,long)",
    "headType": "method",
    "relation": "provide",
    "tail": "public int method(String p1, long p2) {\r\n    return 42;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#method(String,long)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNullableMethod(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@org.jspecify.annotations.Nullable\r\npublic String jspecifyNullableMethod(@org.jspecify.annotations.Nullable String nullableParameter, String nonNullParameter) {\r\n    return nullableParameter;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#jspecifyNullableMethod(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNullableMethod(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@org.jspecify.annotations.Nullable",
    "tailType": "annotation"
  }
]