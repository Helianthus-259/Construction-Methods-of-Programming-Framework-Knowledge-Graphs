[
  {
    "head": "org.springframework.core.MethodParameter#containingClass",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class<?>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameter#parameterType",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameter#parameterType",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class<?>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameter#genericParameterType",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameter#genericParameterType",
    "headType": "field",
    "relation": "haveType",
    "tail": "Type",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameter#parameterAnnotations",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameter#parameterAnnotations",
    "headType": "field",
    "relation": "haveType",
    "tail": "Annotation",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameter#parameterNameDiscoverer",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameter#parameterNameDiscoverer",
    "headType": "field",
    "relation": "haveType",
    "tail": "ParameterNameDiscoverer",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameter#parameterName",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameter#parameterName",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameter#nestedMethodParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameter#nestedMethodParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameter#getMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the wrapped Method, if any.\r\n * <p>Note: Either Method or Constructor is available.\r\n * @return the Method, or {@code null} if none\r\n */\r\n@Nullable\r\npublic Method getMethod() {\r\n    return (this.executable instanceof Method method ? method : null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameter#getMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameter#getMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameter#getConstructor()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the wrapped Constructor, if any.\r\n * <p>Note: Either Method or Constructor is available.\r\n * @return the Constructor, or {@code null} if none\r\n */\r\n@Nullable\r\npublic Constructor<?> getConstructor() {\r\n    return (this.executable instanceof Constructor<?> constructor ? constructor : null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameter#getConstructor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameter#getConstructor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameter#getDeclaringClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the class that declares the underlying Method or Constructor.\r\n */\r\npublic Class<?> getDeclaringClass() {\r\n    return this.executable.getDeclaringClass();\r\n}",
    "tailType": "method_code"
  }
]