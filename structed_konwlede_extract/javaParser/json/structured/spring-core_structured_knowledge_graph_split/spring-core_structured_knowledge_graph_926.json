[
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.env.CompositePropertySource#propertySources",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#propertySources",
    "headType": "field",
    "relation": "haveType",
    "tail": "Set<PropertySource<?>>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#getProperty(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic Object getProperty(String name) {\r\n    for (PropertySource<?> propertySource : this.propertySources) {\r\n        Object candidate = propertySource.getProperty(name);\r\n        if (candidate != null) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return null;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#getProperty(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#getProperty(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#getProperty(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#containsProperty(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean containsProperty(String name) {\r\n    for (PropertySource<?> propertySource : this.propertySources) {\r\n        if (propertySource.containsProperty(name)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#containsProperty(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#containsProperty(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#getPropertyNames()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String[] getPropertyNames() {\r\n    List<String[]> namesList = new ArrayList<>(this.propertySources.size());\r\n    int total = 0;\r\n    for (PropertySource<?> propertySource : this.propertySources) {\r\n        if (!(propertySource instanceof EnumerablePropertySource<?> enumerablePropertySource)) {\r\n            throw new IllegalStateException(\"Failed to enumerate property names due to non-enumerable property source: \" + propertySource);\r\n        }\r\n        String[] names = enumerablePropertySource.getPropertyNames();\r\n        namesList.add(names);\r\n        total += names.length;\r\n    }\r\n    Set<String> allNames = CollectionUtils.newLinkedHashSet(total);\r\n    namesList.forEach(names -> Collections.addAll(allNames, names));\r\n    return StringUtils.toStringArray(allNames);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#getPropertyNames()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#getPropertyNames()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#addPropertySource(PropertySource<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Add the given {@link PropertySource} to the end of the chain.\r\n * @param propertySource the PropertySource to add\r\n */\r\npublic void addPropertySource(PropertySource<?> propertySource) {\r\n    this.propertySources.add(propertySource);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#addPropertySource(PropertySource<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#addFirstPropertySource(PropertySource<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Add the given {@link PropertySource} to the start of the chain.\r\n * @param propertySource the PropertySource to add\r\n * @since 4.1\r\n */\r\npublic void addFirstPropertySource(PropertySource<?> propertySource) {\r\n    List<PropertySource<?>> existing = new ArrayList<>(this.propertySources);\r\n    this.propertySources.clear();\r\n    this.propertySources.add(propertySource);\r\n    this.propertySources.addAll(existing);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#addFirstPropertySource(PropertySource<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#getPropertySources()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return all property sources that this composite source holds.\r\n * @since 4.1.1\r\n */\r\npublic Collection<PropertySource<?>> getPropertySources() {\r\n    return this.propertySources;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#getPropertySources()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource#toString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString() {\r\n    return getClass().getSimpleName() + \" {name='\" + this.name + \"', propertySources=\" + this.propertySources + \"}\";\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.CompositePropertySource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.CompositePropertySource#toString()",
    "tailType": "method"
  }
]