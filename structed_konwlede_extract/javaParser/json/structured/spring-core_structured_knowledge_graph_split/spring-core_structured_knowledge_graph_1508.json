[
  {
    "head": "org.springframework.aot.generate.GeneratedTypeReferenceTests#equalsWithIdenticalCanonicalNameIsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.aot.generate",
    "tailType": "package"
  },
  {
    "head": "org.springframework.aot.generate",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "tailType": "class"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2023 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.aot.generate;\n\nimport org.junit.jupiter.api.Test;\n\nimport org.springframework.aot.generate.GeneratedFiles.Kind;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.assertj.core.api.Assertions.assertThatIllegalStateException;\n\n/**\n * Tests for {@link InMemoryGeneratedFiles}.\n *\n * @author Phillip Webb\n */\nclass InMemoryGeneratedFilesTests {\n\n\tprivate final InMemoryGeneratedFiles generatedFiles = new InMemoryGeneratedFiles();\n\n\t@Test\n\tvoid addFileAddsInMemoryFile() throws Exception {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\n\t\tassertThat(this.generatedFiles.getGeneratedFileContent(Kind.RESOURCE,\n\t\t\t\t\"META-INF/test\")).isEqualTo(\"test\");\n\t}\n\n\t@Test\n\tvoid addFileWhenFileAlreadyAddedThrowsException() {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\n\t\tassertThatIllegalStateException().isThrownBy(\n\t\t\t\t() -> this.generatedFiles.addResourceFile(\"META-INF/test\", \"test\"))\n\t\t\t\t.withMessage(\"META-INF/test already exists\");\n\t}\n\n\t@Test\n\tvoid getGeneratedFilesReturnsFiles() {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test1\", \"test1\");\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test2\", \"test2\");\n\t\tassertThat(this.generatedFiles.getGeneratedFiles(Kind.RESOURCE))\n\t\t\t\t.containsKeys(\"META-INF/test1\", \"META-INF/test2\");\n\t}\n\n\t@Test\n\tvoid getGeneratedFileContentWhenFileExistsReturnsContent() throws Exception {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\n\t\tassertThat(this.generatedFiles.getGeneratedFileContent(Kind.RESOURCE,\n\t\t\t\t\"META-INF/test\")).isEqualTo(\"test\");\n\t}\n\n\t@Test\n\tvoid getGeneratedFileContentWhenFileIsMissingReturnsNull() throws Exception {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\n\t\tassertThat(this.generatedFiles.getGeneratedFileContent(Kind.RESOURCE,\n\t\t\t\t\"META-INF/missing\")).isNull();\n\t}\n\n\t@Test\n\tvoid getGeneratedFileWhenFileExistsReturnsInputStreamSource() {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\n\t\tassertThat(this.generatedFiles.getGeneratedFile(Kind.RESOURCE, \"META-INF/test\"))\n\t\t\t\t.isNotNull();\n\t}\n\n\t@Test\n\tvoid getGeneratedFileWhenFileIsMissingReturnsNull() {\n\t\tthis.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\n\t\tassertThat(\n\t\t\t\tthis.generatedFiles.getGeneratedFile(Kind.RESOURCE, \"META-INF/missing\"))\n\t\t\t\t\t\t.isNull();\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#generatedFiles",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#generatedFiles",
    "headType": "field",
    "relation": "haveType",
    "tail": "InMemoryGeneratedFiles",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#addFileAddsInMemoryFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addFileAddsInMemoryFile() throws Exception {\r\n    this.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\r\n    assertThat(this.generatedFiles.getGeneratedFileContent(Kind.RESOURCE, \"META-INF/test\")).isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#addFileAddsInMemoryFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#addFileAddsInMemoryFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#addFileWhenFileAlreadyAddedThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addFileWhenFileAlreadyAddedThrowsException() {\r\n    this.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\r\n    assertThatIllegalStateException().isThrownBy(() -> this.generatedFiles.addResourceFile(\"META-INF/test\", \"test\")).withMessage(\"META-INF/test already exists\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#addFileWhenFileAlreadyAddedThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#addFileWhenFileAlreadyAddedThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFilesReturnsFiles()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getGeneratedFilesReturnsFiles() {\r\n    this.generatedFiles.addResourceFile(\"META-INF/test1\", \"test1\");\r\n    this.generatedFiles.addResourceFile(\"META-INF/test2\", \"test2\");\r\n    assertThat(this.generatedFiles.getGeneratedFiles(Kind.RESOURCE)).containsKeys(\"META-INF/test1\", \"META-INF/test2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFilesReturnsFiles()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFilesReturnsFiles()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFileContentWhenFileExistsReturnsContent()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getGeneratedFileContentWhenFileExistsReturnsContent() throws Exception {\r\n    this.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\r\n    assertThat(this.generatedFiles.getGeneratedFileContent(Kind.RESOURCE, \"META-INF/test\")).isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFileContentWhenFileExistsReturnsContent()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFileContentWhenFileExistsReturnsContent()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFileContentWhenFileIsMissingReturnsNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getGeneratedFileContentWhenFileIsMissingReturnsNull() throws Exception {\r\n    this.generatedFiles.addResourceFile(\"META-INF/test\", \"test\");\r\n    assertThat(this.generatedFiles.getGeneratedFileContent(Kind.RESOURCE, \"META-INF/missing\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.InMemoryGeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.InMemoryGeneratedFilesTests#getGeneratedFileContentWhenFileIsMissingReturnsNull()",
    "tailType": "method"
  }
]