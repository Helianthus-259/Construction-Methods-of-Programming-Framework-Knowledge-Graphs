[
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#noneReturnValues()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#noneReturnValues()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid forClass() {\r\n    ResolvableType type = ResolvableType.forClass(ExtendsList.class);\r\n    assertThat(type.getType()).isEqualTo(ExtendsList.class);\r\n    assertThat(type.getRawClass()).isEqualTo(ExtendsList.class);\r\n    assertThat(type.isAssignableFrom(ExtendsList.class)).isTrue();\r\n    assertThat(type.isAssignableFrom(ArrayList.class)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#forClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forClassWithNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid forClassWithNull() {\r\n    ResolvableType type = ResolvableType.forClass(null);\r\n    assertThat(type.getType()).isEqualTo(Object.class);\r\n    assertThat(type.getRawClass()).isEqualTo(Object.class);\r\n    assertThat(type.isAssignableFrom(Object.class)).isTrue();\r\n    assertThat(type.isAssignableFrom(String.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#forClassWithNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forClassWithNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forRawClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid forRawClass() {\r\n    ResolvableType type = ResolvableType.forRawClass(ExtendsList.class);\r\n    assertThat(type.getType()).isEqualTo(ExtendsList.class);\r\n    assertThat(type.getRawClass()).isEqualTo(ExtendsList.class);\r\n    assertThat(type.isAssignableFrom(ExtendsList.class)).isTrue();\r\n    assertThat(type.isAssignableFrom(ArrayList.class)).isFalse();\r\n    assertThat(type).isNotEqualTo(ResolvableType.forClass(ExtendsList.class));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#forRawClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forRawClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forRawClassWithNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid forRawClassWithNull() {\r\n    ResolvableType type = ResolvableType.forRawClass(null);\r\n    assertThat(type.getType()).isEqualTo(Object.class);\r\n    assertThat(type.getRawClass()).isEqualTo(Object.class);\r\n    assertThat(type.isAssignableFrom(Object.class)).isTrue();\r\n    assertThat(type.isAssignableFrom(String.class)).isTrue();\r\n    assertThat(type).isNotEqualTo(ResolvableType.forClass(null));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#forRawClassWithNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forRawClassWithNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forRawClassAssignableFromTypeVariable()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-23321\r\n@Test\r\nvoid forRawClassAssignableFromTypeVariable() {\r\n    ResolvableType typeVariable = ResolvableType.forClass(ExtendsList.class).as(List.class).getGeneric();\r\n    ResolvableType raw = ResolvableType.forRawClass(CharSequence.class);\r\n    assertThat(raw.resolve()).isEqualTo(CharSequence.class);\r\n    assertThat(typeVariable.resolve()).isEqualTo(CharSequence.class);\r\n    assertThat(raw.resolve().isAssignableFrom(typeVariable.resolve())).isTrue();\r\n    assertThat(typeVariable.resolve().isAssignableFrom(raw.resolve())).isTrue();\r\n    assertThat(raw.isAssignableFrom(typeVariable)).isTrue();\r\n    assertThat(typeVariable.isAssignableFrom(raw)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#forRawClassAssignableFromTypeVariable()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forRawClassAssignableFromTypeVariable()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forInstanceNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "// gh-28776\r\n@Test\r\nvoid forInstanceNull() {\r\n    assertThat(ResolvableType.forInstance(null)).isEqualTo(ResolvableType.NONE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.ResolvableTypeTests#forInstanceNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.ResolvableTypeTests#forInstanceNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]