[
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalSubtype()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMimeTypeIllegalSubtype() {\r\n    assertThatExceptionOfType(InvalidMimeTypeException.class).isThrownBy(() -> MimeTypeUtils.parseMimeType(\"audio/basic)\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalSubtype()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalSubtype()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeMissingTypeAndSubtype()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMimeTypeMissingTypeAndSubtype() {\r\n    assertThatExceptionOfType(InvalidMimeTypeException.class).isThrownBy(() -> MimeTypeUtils.parseMimeType(\"     ;a=b\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeMissingTypeAndSubtype()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeMissingTypeAndSubtype()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeEmptyParameterAttribute()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMimeTypeEmptyParameterAttribute() {\r\n    assertThatExceptionOfType(InvalidMimeTypeException.class).isThrownBy(() -> MimeTypeUtils.parseMimeType(\"audio/*;=value\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeEmptyParameterAttribute()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeEmptyParameterAttribute()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeEmptyParameterValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMimeTypeEmptyParameterValue() {\r\n    assertThatExceptionOfType(InvalidMimeTypeException.class).isThrownBy(() -> MimeTypeUtils.parseMimeType(\"audio/*;attr=\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeEmptyParameterValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeEmptyParameterValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalParameterAttribute()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMimeTypeIllegalParameterAttribute() {\r\n    assertThatExceptionOfType(InvalidMimeTypeException.class).isThrownBy(() -> MimeTypeUtils.parseMimeType(\"audio/*;attr<=value\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalParameterAttribute()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalParameterAttribute()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalParameterValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMimeTypeIllegalParameterValue() {\r\n    assertThatExceptionOfType(InvalidMimeTypeException.class).isThrownBy(() -> MimeTypeUtils.parseMimeType(\"audio/*;attr=v>alue\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MimeTypeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalParameterValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MimeTypeTests#parseMimeTypeIllegalParameterValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]