[
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(byte[],int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Netty5DataBuffer write(byte[] source, int offset, int length) {\r\n    this.buffer.writeBytes(source, offset, length);\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#write(byte[],int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(byte[],int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(DataBuffer)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Netty5DataBuffer write(DataBuffer... dataBuffers) {\r\n    if (!ObjectUtils.isEmpty(dataBuffers)) {\r\n        if (hasNetty5DataBuffers(dataBuffers)) {\r\n            Buffer[] nativeBuffers = new Buffer[dataBuffers.length];\r\n            for (int i = 0; i < dataBuffers.length; i++) {\r\n                nativeBuffers[i] = ((Netty5DataBuffer) dataBuffers[i]).getNativeBuffer();\r\n            }\r\n            return write(nativeBuffers);\r\n        } else {\r\n            ByteBuffer[] byteBuffers = new ByteBuffer[dataBuffers.length];\r\n            for (int i = 0; i < dataBuffers.length; i++) {\r\n                byteBuffers[i] = ByteBuffer.allocate(dataBuffers[i].readableByteCount());\r\n                dataBuffers[i].toByteBuffer(byteBuffers[i]);\r\n            }\r\n            return write(byteBuffers);\r\n        }\r\n    }\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#write(DataBuffer)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(DataBuffer)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#hasNetty5DataBuffers(DataBuffer[])",
    "headType": "method",
    "relation": "provide",
    "tail": "private static boolean hasNetty5DataBuffers(DataBuffer[] buffers) {\r\n    for (DataBuffer buffer : buffers) {\r\n        if (!(buffer instanceof Netty5DataBuffer)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#hasNetty5DataBuffers(DataBuffer[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(ByteBuffer)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Netty5DataBuffer write(ByteBuffer... buffers) {\r\n    if (!ObjectUtils.isEmpty(buffers)) {\r\n        for (ByteBuffer buffer : buffers) {\r\n            this.buffer.writeBytes(buffer);\r\n        }\r\n    }\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#write(ByteBuffer)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(ByteBuffer)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(Buffer)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Writes one or more Netty 5 {@link Buffer Buffers} to this buffer,\r\n * starting at the current writing position.\r\n * @param buffers the buffers to write into this buffer\r\n * @return this buffer\r\n */\r\npublic Netty5DataBuffer write(Buffer... buffers) {\r\n    if (!ObjectUtils.isEmpty(buffers)) {\r\n        for (Buffer buffer : buffers) {\r\n            this.buffer.writeBytes(buffer);\r\n        }\r\n    }\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#write(Buffer)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(CharSequence,Charset)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer write(CharSequence charSequence, Charset charset) {\r\n    Assert.notNull(charSequence, \"CharSequence must not be null\");\r\n    Assert.notNull(charset, \"Charset must not be null\");\r\n    this.buffer.writeCharSequence(charSequence, charset);\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#write(CharSequence,Charset)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#write(CharSequence,Charset)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#slice(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * {@inheritDoc}\r\n * <p><strong>Note</strong> that due to the lack of a {@code slice} method\r\n * in Netty 5's {@link Buffer}, this implementation returns a copy that\r\n * does <strong>not</strong> share its contents with this buffer.\r\n */\r\n@Override\r\n@Deprecated\r\npublic DataBuffer slice(int index, int length) {\r\n    Buffer copy = this.buffer.copy(index, length);\r\n    return new Netty5DataBuffer(copy, this.dataBufferFactory);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#slice(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#slice(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#slice(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  }
]