[
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_TO_URL",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_TO_URI",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_TO_URI",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_NAME",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_NAME",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_PATH_NAME",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_PATH_NAME",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_PHYSICAL_FILE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_PHYSICAL_FILE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_CHILD",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_GET_CHILD",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_VISITOR_INTERFACE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_VISITOR_INTERFACE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class<?>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_VISIT",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VIRTUAL_FILE_METHOD_VISIT",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.VfsUtils#VISITOR_ATTRIBUTES_FIELD_RECURSE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#VISITOR_ATTRIBUTES_FIELD_RECURSE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Field",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#invokeVfsMethod(Method,Object,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "protected static Object invokeVfsMethod(Method method, @Nullable Object target, Object... args) throws IOException {\r\n    try {\r\n        return method.invoke(target, args);\r\n    } catch (InvocationTargetException ex) {\r\n        Throwable targetEx = ex.getTargetException();\r\n        if (targetEx instanceof IOException ioException) {\r\n            throw ioException;\r\n        }\r\n        ReflectionUtils.handleInvocationTargetException(ex);\r\n    } catch (Exception ex) {\r\n        ReflectionUtils.handleReflectionException(ex);\r\n    }\r\n    throw new IllegalStateException(\"Invalid code path reached\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.VfsUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.VfsUtils#invokeVfsMethod(Method,Object,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.VfsUtils#exists(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "static boolean exists(Object vfsResource) {\r\n    try {\r\n        return (Boolean) invokeVfsMethod(VIRTUAL_FILE_METHOD_EXISTS, vfsResource);\r\n    } catch (IOException ex) {\r\n        return false;\r\n    }\r\n}",
    "tailType": "method_code"
  }
]