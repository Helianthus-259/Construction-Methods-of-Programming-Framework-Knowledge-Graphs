[
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isCompatibleWithThrowsClause()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isCompatibleWithThrowsClause()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmptyNull() {\r\n    assertThat(isEmpty(null)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isEmptyNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmptyArray() {\r\n    assertThat(isEmpty(new char[0])).isTrue();\r\n    assertThat(isEmpty(new Object[0])).isTrue();\r\n    assertThat(isEmpty(new Integer[0])).isTrue();\r\n    assertThat(isEmpty(new int[] { 42 })).isFalse();\r\n    assertThat(isEmpty(new Integer[] { 42 })).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isEmptyArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyCollection()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmptyCollection() {\r\n    assertThat(isEmpty(Collections.emptyList())).isTrue();\r\n    assertThat(isEmpty(Collections.emptySet())).isTrue();\r\n    Set<String> set = new HashSet<>();\r\n    set.add(\"foo\");\r\n    assertThat(isEmpty(set)).isFalse();\r\n    assertThat(isEmpty(Collections.singletonList(\"foo\"))).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isEmptyCollection()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyCollection()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmptyMap() {\r\n    assertThat(isEmpty(Collections.emptyMap())).isTrue();\r\n    HashMap<String, Object> map = new HashMap<>();\r\n    map.put(\"foo\", 42L);\r\n    assertThat(isEmpty(map)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isEmptyMap()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyMap()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyCharSequence()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmptyCharSequence() {\r\n    assertThat(isEmpty(new StringBuilder())).isTrue();\r\n    assertThat(isEmpty(\"\")).isTrue();\r\n    assertThat(isEmpty(new StringBuilder(\"foo\"))).isFalse();\r\n    assertThat(isEmpty(\"   \")).isFalse();\r\n    assertThat(isEmpty(\"\\t\")).isFalse();\r\n    assertThat(isEmpty(\"foo\")).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isEmptyCharSequence()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyCharSequence()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyUnsupportedObjectType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmptyUnsupportedObjectType() {\r\n    assertThat(isEmpty(42L)).isFalse();\r\n    assertThat(isEmpty(new Object())).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isEmptyUnsupportedObjectType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isEmptyUnsupportedObjectType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]