[
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardAtTheBeginningPattern()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardAtTheBeginningPattern()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardInTheMiddlePattern()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWildcardInTheMiddlePattern() throws JSONException {\r\n    RuntimeHints hints = new RuntimeHints();\r\n    hints.resources().registerPattern(\"com/example/*.properties\");\r\n    assertEquals(\"\"\"\r\n        {\r\n        \t\"resources\": [\r\n        \t\t{ \"glob\": \"/\" },\r\n        \t\t{ \"glob\": \"com\"},\r\n        \t\t{ \"glob\": \"com/example\"},\r\n        \t\t{ \"glob\": \"com/example/*.properties\"}\r\n        \t]\r\n        }\"\"\", hints);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardInTheMiddlePattern()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardInTheMiddlePattern()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardAtTheEndPattern()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWildcardAtTheEndPattern() throws JSONException {\r\n    RuntimeHints hints = new RuntimeHints();\r\n    hints.resources().registerPattern(\"static/*\");\r\n    assertEquals(\"\"\"\r\n        {\r\n        \t\"resources\": [\r\n        \t\t{ \"glob\": \"/\" },\r\n        \t\t{ \"glob\": \"static\"},\r\n        \t\t{ \"glob\": \"static/*\"}\r\n        \t]\r\n        }\"\"\", hints);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardAtTheEndPattern()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWildcardAtTheEndPattern()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerPatternWithIncludesAndExcludes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerPatternWithIncludesAndExcludes() throws JSONException {\r\n    RuntimeHints hints = new RuntimeHints();\r\n    hints.resources().registerPattern(hint -> hint.includes(\"com/example/*.properties\"));\r\n    hints.resources().registerPattern(hint -> hint.includes(\"org/other/*.properties\"));\r\n    assertEquals(\"\"\"\r\n        {\r\n        \t\"resources\": [\r\n        \t\t{ \"glob\": \"/\"},\r\n        \t\t{ \"glob\": \"com\"},\r\n        \t\t{ \"glob\": \"com/example\"},\r\n        \t\t{ \"glob\": \"com/example/*.properties\"},\r\n        \t\t{ \"glob\": \"org\"},\r\n        \t\t{ \"glob\": \"org/other\"},\r\n        \t\t{ \"glob\": \"org/other/*.properties\"}\r\n        \t]\r\n        }\"\"\", hints);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerPatternWithIncludesAndExcludes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerPatternWithIncludesAndExcludes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWithReachableTypeCondition()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithReachableTypeCondition() throws JSONException {\r\n    RuntimeHints hints = new RuntimeHints();\r\n    hints.resources().registerPattern(builder -> builder.includes(TypeReference.of(\"com.example.Test\"), \"com/example/test.properties\"));\r\n    assertEquals(\"\"\"\r\n        {\r\n        \t\"resources\": [\r\n        \t\t{ \"condition\": { \"typeReached\": \"com.example.Test\"}, \"glob\": \"/\"},\r\n        \t\t{ \"condition\": { \"typeReached\": \"com.example.Test\"}, \"glob\": \"com\"},\r\n        \t\t{ \"condition\": { \"typeReached\": \"com.example.Test\"}, \"glob\": \"com/example\"},\r\n        \t\t{ \"condition\": { \"typeReached\": \"com.example.Test\"}, \"glob\": \"com/example/test.properties\"}\r\n        \t]\r\n        }\"\"\", hints);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerWithReachableTypeCondition()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerWithReachableTypeCondition()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerType() throws JSONException {\r\n    RuntimeHints hints = new RuntimeHints();\r\n    hints.resources().registerType(String.class);\r\n    assertEquals(\"\"\"\r\n        {\r\n        \t\"resources\": [\r\n        \t\t{ \"glob\": \"/\" },\r\n        \t\t{ \"glob\": \"java\" },\r\n        \t\t{ \"glob\": \"java/lang\" },\r\n        \t\t{ \"glob\": \"java/lang/String.class\" }\r\n        \t]\r\n        }\"\"\", hints);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerResourceBundle()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerResourceBundle() throws JSONException {\r\n    RuntimeHints hints = new RuntimeHints();\r\n    hints.resources().registerResourceBundle(\"com.example.message2\");\r\n    hints.resources().registerResourceBundle(\"com.example.message\");\r\n    assertEquals(\"\"\"\r\n        {\r\n        \t\"bundles\": [\r\n        \t\t{ \"name\": \"com.example.message\"},\r\n        \t\t{ \"name\": \"com.example.message2\"}\r\n        \t]\r\n        }\"\"\", hints);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.ResourceHintsTests#registerResourceBundle()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.ResourceHintsTests#registerResourceBundle()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]