[
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DefaultDataBuffer#split(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#split(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic ByteBuffer asByteBuffer() {\r\n    return asByteBuffer(this.readPosition, readableByteCount());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic ByteBuffer asByteBuffer(int index, int length) {\r\n    checkIndex(index, length);\r\n    ByteBuffer duplicate = this.byteBuffer.duplicate();\r\n    duplicate.position(index);\r\n    duplicate.limit(index + length);\r\n    return duplicate.slice();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#asByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic ByteBuffer toByteBuffer(int index, int length) {\r\n    checkIndex(index, length);\r\n    ByteBuffer copy = allocate(length, this.byteBuffer.isDirect());\r\n    ByteBuffer readOnly = this.byteBuffer.asReadOnlyBuffer();\r\n    readOnly.clear().position(index).limit(index + length);\r\n    copy.put(readOnly);\r\n    return copy.flip();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void toByteBuffer(int srcPos, ByteBuffer dest, int destPos, int length) {\r\n    checkIndex(srcPos, length);\r\n    Assert.notNull(dest, \"Dest must not be null\");\r\n    dest = dest.duplicate().clear();\r\n    dest.put(destPos, this.byteBuffer, srcPos, length);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#readableByteBuffers()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer.ByteBufferIterator readableByteBuffers() {\r\n    ByteBuffer readOnly = this.byteBuffer.slice(this.readPosition, readableByteCount()).asReadOnlyBuffer();\r\n    return new ByteBufferIterator(readOnly);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DefaultDataBuffer#readableByteBuffers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DefaultDataBuffer#readableByteBuffers()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]