[
  {
    "head": "org.springframework.core.testfixture.TimeStamped",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.testfixture;\n\n/**\n * This interface can be implemented by cacheable objects or cache entries,\n * to enable the freshness of objects to be checked.\n *\n * @author Rod Johnson\n */\npublic interface TimeStamped {\n\n\t/**\n\t * Return the timestamp for this object.\n\t * @return long the timestamp for this object,\n\t * as returned by System.currentTimeMillis()\n\t */\n\tlong getTimeStamp();\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.testfixture.TimeStamped#getTimeStamp()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the timestamp for this object.\r\n * @return long the timestamp for this object,\r\n * as returned by System.currentTimeMillis()\r\n */\r\nlong getTimeStamp();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TimeStamped",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TimeStamped#getTimeStamp()",
    "tailType": "method"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.cglib.beans",
    "tailType": "package"
  },
  {
    "head": "org.springframework.cglib.beans",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.cglib.beans.BulkBeanException",
    "tailType": "class"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.testfixture.xml",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.testfixture.xml",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.testfixture.xml.XmlContent",
    "tailType": "class"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2003 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.cglib.beans;\n\n@SuppressWarnings({\"rawtypes\", \"unchecked\", \"serial\"})\npublic class BulkBeanException extends RuntimeException\n{\n    private int index;\n    private Throwable cause;\n\n    public BulkBeanException(String message, int index) {\n        super(message);\n        this.index = index;\n    }\n\n    public BulkBeanException(Throwable cause, int index) {\n        super(cause.getMessage());\n        this.index = index;\n        this.cause = cause;\n    }\n\n    public int getIndex() {\n        return index;\n    }\n\n    @Override\n\tpublic Throwable getCause() {\n        return cause;\n    }\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.beans.BulkBeanException#index",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException#index",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.beans.BulkBeanException#cause",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException#cause",
    "headType": "field",
    "relation": "haveType",
    "tail": "Throwable",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException#getIndex()",
    "headType": "method",
    "relation": "provide",
    "tail": "public int getIndex() {\r\n    return index;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BulkBeanException#getIndex()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException#getCause()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Throwable getCause() {\r\n    return cause;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BulkBeanException#getCause()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException#getCause()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BulkBeanException",
    "headType": "class",
    "relation": "extend",
    "tail": "RuntimeException",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.testfixture.xml.XmlContent",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.testfixture.xml;\n\nimport java.io.StringWriter;\n\nimport org.assertj.core.api.AssertProvider;\nimport org.xmlunit.assertj.XmlAssert;\n\n/**\n * {@link AssertProvider} to allow XML content assertions. Ultimately delegates\n * to {@link XmlAssert}.\n *\n * @author Phillip Webb\n */\npublic class XmlContent implements AssertProvider<XmlContentAssert> {\n\n\tprivate final Object source;\n\n\tprivate XmlContent(Object source) {\n\t\tthis.source = source;\n\t}\n\n\t@Override\n\tpublic XmlContentAssert assertThat() {\n\t\treturn new XmlContentAssert(this.source);\n\t}\n\n\tpublic static XmlContent from(Object source) {\n\t\treturn of(source);\n\t}\n\n\tpublic static XmlContent of(Object source) {\n\t\tif (source instanceof StringWriter) {\n\t\t\treturn of(source.toString());\n\t\t}\n\t\treturn new XmlContent(source);\n\t}\n\n}\n",
    "tailType": "class_code"
  }
]