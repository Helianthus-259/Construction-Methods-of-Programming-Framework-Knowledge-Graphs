[
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2003 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.cglib.reflect;\n\nimport java.lang.reflect.Member;\n\n@SuppressWarnings({\"rawtypes\", \"unchecked\"})\nabstract public class FastMember\n{\n    protected FastClass fc;\n    protected Member member;\n    protected int index;\n\n    protected FastMember(FastClass fc, Member member, int index) {\n        this.fc = fc;\n        this.member = member;\n        this.index = index;\n    }\n\n    abstract public Class[] getParameterTypes();\n    abstract public Class[] getExceptionTypes();\n\n    public int getIndex() {\n        return index;\n    }\n\n    public String getName() {\n        return member.getName();\n    }\n\n    public Class getDeclaringClass() {\n        return fc.getJavaClass();\n    }\n\n    public int getModifiers() {\n        return member.getModifiers();\n    }\n\n    @Override\n    public String toString() {\n        return member.toString();\n    }\n\n    @Override\n    public int hashCode() {\n        return member.hashCode();\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (o == null || !(o instanceof FastMember other)) {\n            return false;\n        }\n        return member.equals(other.member);\n    }\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.FastMember#fc",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#fc",
    "headType": "field",
    "relation": "haveType",
    "tail": "FastClass",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.FastMember#member",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#member",
    "headType": "field",
    "relation": "haveType",
    "tail": "Member",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.FastMember#index",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#index",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#getParameterTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "abstract public Class[] getParameterTypes();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.FastMember#getParameterTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#getExceptionTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "abstract public Class[] getExceptionTypes();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.FastMember#getExceptionTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#getIndex()",
    "headType": "method",
    "relation": "provide",
    "tail": "public int getIndex() {\r\n    return index;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.FastMember#getIndex()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#getName()",
    "headType": "method",
    "relation": "provide",
    "tail": "public String getName() {\r\n    return member.getName();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.FastMember#getName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#getDeclaringClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "public Class getDeclaringClass() {\r\n    return fc.getJavaClass();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.FastMember#getDeclaringClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#getModifiers()",
    "headType": "method",
    "relation": "provide",
    "tail": "public int getModifiers() {\r\n    return member.getModifiers();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.FastMember#getModifiers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.FastMember#toString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString() {\r\n    return member.toString();\r\n}",
    "tailType": "method_code"
  }
]