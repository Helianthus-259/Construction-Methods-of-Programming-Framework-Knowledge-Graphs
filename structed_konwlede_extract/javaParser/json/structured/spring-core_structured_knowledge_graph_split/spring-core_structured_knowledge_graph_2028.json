[
  {
    "head": "org.springframework.core.io.PathResourceTests#contentLength()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid contentLength() throws IOException {\r\n    PathResource resource = new PathResource(TEST_FILE);\r\n    File file = new File(TEST_FILE);\r\n    assertThat(resource.contentLength()).isEqualTo(file.length());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#contentLength()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#contentLength()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#contentLengthForDirectory()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid contentLengthForDirectory() throws IOException {\r\n    PathResource resource = new PathResource(TEST_DIR);\r\n    File file = new File(TEST_DIR);\r\n    assertThat(resource.contentLength()).isEqualTo(file.length());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#contentLengthForDirectory()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#contentLengthForDirectory()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#lastModified()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid lastModified() throws IOException {\r\n    PathResource resource = new PathResource(TEST_FILE);\r\n    File file = new File(TEST_FILE);\r\n    assertThat(resource.lastModified() / 1000).isEqualTo(file.lastModified() / 1000);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#lastModified()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#lastModified()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#createRelativeFromDir()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createRelativeFromDir() {\r\n    Resource resource = new PathResource(TEST_DIR).createRelative(\"example.properties\");\r\n    assertThat(resource).isEqualTo(new PathResource(TEST_FILE));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#createRelativeFromDir()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#createRelativeFromDir()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#createRelativeFromFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createRelativeFromFile() {\r\n    Resource resource = new PathResource(TEST_FILE).createRelative(\"../example.properties\");\r\n    assertThat(resource).isEqualTo(new PathResource(TEST_FILE));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#createRelativeFromFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#createRelativeFromFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#filename()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid filename() {\r\n    Resource resource = new PathResource(TEST_FILE);\r\n    assertThat(resource.getFilename()).isEqualTo(\"example.properties\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#filename()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#filename()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#description()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid description() {\r\n    Resource resource = new PathResource(TEST_FILE);\r\n    assertThat(resource.getDescription()).contains(\"path [\");\r\n    assertThat(resource.getDescription()).contains(TEST_FILE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#description()",
    "tailType": "method"
  }
]