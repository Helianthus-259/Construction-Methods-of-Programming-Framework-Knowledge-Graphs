[
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resources",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resources",
    "headType": "field",
    "relation": "haveType",
    "tail": "ResourceHintsPredicates",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#runtimeHints",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#runtimeHints",
    "headType": "field",
    "relation": "haveType",
    "tail": "RuntimeHints",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesResourceName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid resourcePatternMatchesResourceName() {\r\n    this.runtimeHints.resources().registerPattern(\"test/*\");\r\n    assertPredicateMatches(resources.forResource(\"/test/spring.properties\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesResourceName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesResourceName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternDoesNotMatchResourceName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid resourcePatternDoesNotMatchResourceName() {\r\n    this.runtimeHints.resources().registerPattern(\"test/spring.*\");\r\n    assertPredicateDoesNotMatch(resources.forResource(\"/test/other.properties\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternDoesNotMatchResourceName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternDoesNotMatchResourceName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeAndResourceName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid resourcePatternMatchesTypeAndResourceName() {\r\n    this.runtimeHints.resources().registerPattern(\"org/springframework/aot/hint/predicate/spring.*\");\r\n    assertPredicateMatches(resources.forResource(TypeReference.of(getClass()), \"spring.properties\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeAndResourceName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeAndResourceName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeAndAbsoluteResourceName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid resourcePatternMatchesTypeAndAbsoluteResourceName() {\r\n    this.runtimeHints.resources().registerPattern(\"spring.*\");\r\n    assertPredicateMatches(resources.forResource(TypeReference.of(getClass()), \"/spring.properties\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeAndAbsoluteResourceName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeAndAbsoluteResourceName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeInDefaultPackageAndResourceName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid resourcePatternMatchesTypeInDefaultPackageAndResourceName() {\r\n    this.runtimeHints.resources().registerPattern(\"spring.*\");\r\n    assertPredicateMatches(resources.forResource(TypeReference.of(\"DummyClass\"), \"spring.properties\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeInDefaultPackageAndResourceName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeInDefaultPackageAndResourceName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.predicate.ResourceHintsPredicatesTests#resourcePatternMatchesTypeInDefaultPackageAndAbsoluteResourceName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid resourcePatternMatchesTypeInDefaultPackageAndAbsoluteResourceName() {\r\n    this.runtimeHints.resources().registerPattern(\"spring.*\");\r\n    assertPredicateMatches(resources.forResource(TypeReference.of(\"DummyClass\"), \"/spring.properties\"));\r\n}",
    "tailType": "method_code"
  }
]