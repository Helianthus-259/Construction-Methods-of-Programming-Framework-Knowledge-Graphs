[
  {
    "head": "org.springframework.util.SimpleRouteMatcher#getPathMatcher()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the underlying {@link PathMatcher} delegate.\r\n */\r\npublic PathMatcher getPathMatcher() {\r\n    return this.pathMatcher;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#getPathMatcher()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#parseRoute(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Route parseRoute(String route) {\r\n    return new DefaultRoute(route);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#parseRoute(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#parseRoute(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#isPattern(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isPattern(String route) {\r\n    return this.pathMatcher.isPattern(route);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#isPattern(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#isPattern(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#combine(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String combine(String pattern1, String pattern2) {\r\n    return this.pathMatcher.combine(pattern1, pattern2);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#combine(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#combine(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#match(String,Route)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean match(String pattern, Route route) {\r\n    return this.pathMatcher.match(pattern, route.value());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#match(String,Route)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#match(String,Route)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#matchAndExtract(String,Route)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic Map<String, String> matchAndExtract(String pattern, Route route) {\r\n    if (!match(pattern, route)) {\r\n        return null;\r\n    }\r\n    return this.pathMatcher.extractUriTemplateVariables(pattern, route.value());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#matchAndExtract(String,Route)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#matchAndExtract(String,Route)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#matchAndExtract(String,Route)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher#getPatternComparator(Route)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Comparator<String> getPatternComparator(Route route) {\r\n    return this.pathMatcher.getPatternComparator(route.value());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SimpleRouteMatcher",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SimpleRouteMatcher#getPatternComparator(Route)",
    "tailType": "method"
  }
]