[
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedCacheOnInterfaceAndLocalCacheOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleComposedAnnotationsOnMethod() throws Exception {\r\n    assertTypeHierarchyStrategyBehavior(getClass().getDeclaredMethod(\"multipleComposedCachesMethod\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedPlusLocalAnnotationsOnMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyComposedPlusLocalAnnotationsOnMethod() throws Exception {\r\n    assertTypeHierarchyStrategyBehavior(getClass().getDeclaredMethod(\"composedPlusLocalCachesMethod\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedPlusLocalAnnotationsOnMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedPlusLocalAnnotationsOnMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnBridgeMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleComposedAnnotationsOnBridgeMethod() {\r\n    assertTypeHierarchyStrategyBehavior(getBridgeMethod());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnBridgeMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnBridgeMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#assertTypeHierarchyStrategyBehavior(AnnotatedElement)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void assertTypeHierarchyStrategyBehavior(AnnotatedElement element) {\r\n    MergedAnnotations annotations = MergedAnnotations.from(element, SearchStrategy.TYPE_HIERARCHY);\r\n    assertThat(stream(annotations, \"key\")).containsExactly(\"fooKey\", \"barKey\");\r\n    assertThat(stream(annotations, \"value\")).containsExactly(\"fooCache\", \"barCache\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#assertTypeHierarchyStrategyBehavior(AnnotatedElement)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#getBridgeMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "Method getBridgeMethod() {\r\n    List<Method> methods = new ArrayList<>();\r\n    ReflectionUtils.doWithLocalMethods(StringGenericParameter.class, method -> {\r\n        if (\"getFor\".equals(method.getName())) {\r\n            methods.add(method);\r\n        }\r\n    });\r\n    Method bridgeMethod = methods.get(0).getReturnType() == Object.class ? methods.get(0) : methods.get(1);\r\n    assertThat(bridgeMethod.isBridge()).isTrue();\r\n    return bridgeMethod;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#getBridgeMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#stream(MergedAnnotations,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "private Stream<String> stream(MergedAnnotations annotations, String attributeName) {\r\n    return annotations.stream(Cacheable.class).map(annotation -> annotation.getString(attributeName));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#stream(MergedAnnotations,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#multipleComposedCachesMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@FooCache(key = \"fooKey\")\r\n@BarCache(key = \"barKey\")\r\nprivate void multipleComposedCachesMethod() ;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#multipleComposedCachesMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#multipleComposedCachesMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@FooCache",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#multipleComposedCachesMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@BarCache",
    "tailType": "annotation"
  }
]