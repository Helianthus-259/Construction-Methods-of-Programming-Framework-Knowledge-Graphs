[
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readChar(Object,String,char)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readChar(Object,String,char)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readByte(Object,String,byte)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic byte readByte(Object obj, String name, byte oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readByte(Object,String,byte)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readByte(Object,String,byte)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readBoolean(Object,String,boolean)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean readBoolean(Object obj, String name, boolean oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readBoolean(Object,String,boolean)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readBoolean(Object,String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readShort(Object,String,short)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic short readShort(Object obj, String name, short oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readShort(Object,String,short)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readShort(Object,String,short)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readFloat(Object,String,float)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic float readFloat(Object obj, String name, float oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readFloat(Object,String,float)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readFloat(Object,String,float)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readDouble(Object,String,double)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic double readDouble(Object obj, String name, double oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readDouble(Object,String,double)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readDouble(Object,String,double)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readLong(Object,String,long)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic long readLong(Object obj, String name, long oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readLong(Object,String,long)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readLong(Object,String,long)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]