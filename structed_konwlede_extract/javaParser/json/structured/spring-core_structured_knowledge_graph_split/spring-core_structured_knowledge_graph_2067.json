[
  {
    "head": "org.springframework.core.MethodParameterTests#method",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#stringParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#stringParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#longParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#longParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#intReturnType",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#intReturnType",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#jspecifyNullableParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNullableParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#jspecifyNonNullParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#jspecifyNonNullParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#springNullableParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#springNullableParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.MethodParameterTests#springNonNullParameter",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#springNonNullParameter",
    "headType": "field",
    "relation": "haveType",
    "tail": "MethodParameter",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#setup()",
    "headType": "method",
    "relation": "provide",
    "tail": "@BeforeEach\r\nvoid setup() throws NoSuchMethodException {\r\n    method = getClass().getMethod(\"method\", String.class, long.class);\r\n    stringParameter = new MethodParameter(method, 0);\r\n    longParameter = new MethodParameter(method, 1);\r\n    intReturnType = new MethodParameter(method, -1);\r\n    Method jspecifyNullableMethod = getClass().getMethod(\"jspecifyNullableMethod\", String.class, String.class);\r\n    jspecifyNullableParameter = new MethodParameter(jspecifyNullableMethod, 0);\r\n    jspecifyNonNullParameter = new MethodParameter(jspecifyNullableMethod, 1);\r\n    Method springNullableMethod = getClass().getMethod(\"springNullableMethod\", String.class, String.class);\r\n    springNullableParameter = new MethodParameter(springNullableMethod, 0);\r\n    springNonNullParameter = new MethodParameter(springNullableMethod, 1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#setup()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#setup()",
    "headType": "method",
    "relation": "use",
    "tail": "@BeforeEach",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.MethodParameterTests#equals()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid equals() throws NoSuchMethodException {\r\n    assertThat(stringParameter).isEqualTo(stringParameter);\r\n    assertThat(longParameter).isEqualTo(longParameter);\r\n    assertThat(intReturnType).isEqualTo(intReturnType);\r\n    assertThat(stringParameter).isNotEqualTo(longParameter);\r\n    assertThat(stringParameter).isNotEqualTo(intReturnType);\r\n    assertThat(longParameter).isNotEqualTo(stringParameter);\r\n    assertThat(longParameter).isNotEqualTo(intReturnType);\r\n    assertThat(intReturnType).isNotEqualTo(stringParameter);\r\n    assertThat(intReturnType).isNotEqualTo(longParameter);\r\n    Method method = getClass().getMethod(\"method\", String.class, long.class);\r\n    MethodParameter methodParameter = new MethodParameter(method, 0);\r\n    assertThat(methodParameter).isEqualTo(stringParameter);\r\n    assertThat(stringParameter).isEqualTo(methodParameter);\r\n    assertThat(methodParameter).isNotEqualTo(longParameter);\r\n    assertThat(longParameter).isNotEqualTo(methodParameter);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.MethodParameterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.MethodParameterTests#equals()",
    "tailType": "method"
  }
]