[
  {
    "head": "org.springframework.util.CollectionUtilsTests#findValueOfTypeWithMoreThanOneValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#hasUniqueObject()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid hasUniqueObject() {\r\n    List<String> list = new ArrayList<>();\r\n    list.add(\"myElement\");\r\n    list.add(\"myOtherElement\");\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isFalse();\r\n    list = new ArrayList<>();\r\n    list.add(\"myElement\");\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isTrue();\r\n    list = new ArrayList<>();\r\n    list.add(\"myElement\");\r\n    list.add(null);\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isFalse();\r\n    list = new ArrayList<>();\r\n    list.add(null);\r\n    list.add(\"myElement\");\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isFalse();\r\n    list = new ArrayList<>();\r\n    list.add(null);\r\n    list.add(null);\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isTrue();\r\n    list = new ArrayList<>();\r\n    list.add(null);\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isTrue();\r\n    list = new ArrayList<>();\r\n    assertThat(CollectionUtils.hasUniqueObject(list)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CollectionUtilsTests#hasUniqueObject()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#hasUniqueObject()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#findCommonElementType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findCommonElementType() {\r\n    List<Integer> integerList = new ArrayList<>();\r\n    integerList.add(1);\r\n    integerList.add(2);\r\n    assertThat(CollectionUtils.findCommonElementType(integerList)).isEqualTo(Integer.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CollectionUtilsTests#findCommonElementType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#findCommonElementType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#findCommonElementTypeWithEmptyCollection()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findCommonElementTypeWithEmptyCollection() {\r\n    List<Integer> emptyList = new ArrayList<>();\r\n    assertThat(CollectionUtils.findCommonElementType(emptyList)).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CollectionUtilsTests#findCommonElementTypeWithEmptyCollection()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#findCommonElementTypeWithEmptyCollection()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#findCommonElementTypeWithDifferentElementType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findCommonElementTypeWithDifferentElementType() {\r\n    List<Object> list = new ArrayList<>();\r\n    list.add(1);\r\n    list.add(\"foo\");\r\n    assertThat(CollectionUtils.findCommonElementType(list)).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CollectionUtilsTests#findCommonElementTypeWithDifferentElementType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#findCommonElementTypeWithDifferentElementType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#firstElementWithSet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid firstElementWithSet() {\r\n    Set<Integer> set = new HashSet<>();\r\n    set.add(17);\r\n    set.add(3);\r\n    set.add(2);\r\n    set.add(1);\r\n    assertThat(CollectionUtils.firstElement(set)).isEqualTo(17);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CollectionUtilsTests#firstElementWithSet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#firstElementWithSet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#firstElementWithSortedSet()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid firstElementWithSortedSet() {\r\n    SortedSet<Integer> sortedSet = new TreeSet<>();\r\n    sortedSet.add(17);\r\n    sortedSet.add(3);\r\n    sortedSet.add(2);\r\n    sortedSet.add(1);\r\n    assertThat(CollectionUtils.firstElement(sortedSet)).isEqualTo(1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CollectionUtilsTests#firstElementWithSortedSet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#firstElementWithSortedSet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CollectionUtilsTests#firstElementWithList()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid firstElementWithList() {\r\n    List<Integer> list = new ArrayList<>();\r\n    list.add(1);\r\n    list.add(2);\r\n    list.add(3);\r\n    assertThat(CollectionUtils.firstElement(list)).isEqualTo(1);\r\n}",
    "tailType": "method_code"
  }
]