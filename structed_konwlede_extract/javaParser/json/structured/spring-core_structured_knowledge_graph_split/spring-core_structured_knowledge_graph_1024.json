[
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#byteMapper",
    "headType": "field",
    "relation": "haveType",
    "tail": "ByteMapper<T>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#chunkSize",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#chunkSize",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#requested",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#requested",
    "headType": "field",
    "relation": "haveType",
    "tail": "AtomicLong",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#parkedThread",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#parkedThread",
    "headType": "field",
    "relation": "haveType",
    "tail": "AtomicReference<Object>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#error",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#error",
    "headType": "field",
    "relation": "haveType",
    "tail": "Throwable",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#produced",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#produced",
    "headType": "field",
    "relation": "haveType",
    "tail": "long",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#write(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void write(int b) throws IOException {\r\n    checkDemandAndAwaitIfNeeded();\r\n    T next = this.byteMapper.map(b);\r\n    this.actual.onNext(next);\r\n    this.produced++;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#write(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#write(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#write(byte[])",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void write(byte[] b) throws IOException {\r\n    write(b, 0, b.length);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#write(byte[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#write(byte[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#write(byte[],int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void write(byte[] b, int off, int len) throws IOException {\r\n    checkDemandAndAwaitIfNeeded();\r\n    T next = this.byteMapper.map(b, off, len);\r\n    this.actual.onNext(next);\r\n    this.produced++;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.OutputStreamSubscription#write(byte[],int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.OutputStreamSubscription#write(byte[],int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]