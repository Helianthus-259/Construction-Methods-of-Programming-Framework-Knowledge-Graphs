[
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToObjectWithCustomConverter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertCollectionToObjectWithCustomConverter() {\r\n    List<String> source = List.of(\"A\", \"B\");\r\n    conversionService.addConverter(List.class, ListWrapper.class, ListWrapper::new);\r\n    ListWrapper result = conversionService.convert(source, ListWrapper.class);\r\n    assertThat(result.getList()).isSameAs(source);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToObjectWithCustomConverter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertCollectionToObjectWithCustomConverter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToCollection()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToCollection() {\r\n    @SuppressWarnings(\"unchecked\")\r\n    List<Long> result = conversionService.convert(3L, List.class);\r\n    assertThat(result).containsExactly(3L);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToCollection()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToCollection()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToCollectionWithElementConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertObjectToCollectionWithElementConversion() throws Exception {\r\n    @SuppressWarnings(\"unchecked\")\r\n    List<Integer> result = (List<Integer>) conversionService.convert(3L, TypeDescriptor.valueOf(Long.class), new TypeDescriptor(getClass().getField(\"genericList\")));\r\n    assertThat(result).containsExactly(3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToCollectionWithElementConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertObjectToCollectionWithElementConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringArrayToIntegerArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertStringArrayToIntegerArray() {\r\n    Integer[] result = conversionService.convert(new String[] { \"1\", \"2\", \"3\" }, Integer[].class);\r\n    assertThat(result).containsExactly(1, 2, 3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringArrayToIntegerArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringArrayToIntegerArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringArrayToIntArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertStringArrayToIntArray() {\r\n    int[] result = conversionService.convert(new String[] { \"1\", \"2\", \"3\" }, int[].class);\r\n    assertThat(result).containsExactly(1, 2, 3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringArrayToIntArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertStringArrayToIntArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertIntArrayToStringArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertIntArrayToStringArray() {\r\n    String[] result = conversionService.convert(new int[] { 1, 2, 3 }, String[].class);\r\n    assertThat(result).containsExactly(\"1\", \"2\", \"3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertIntArrayToStringArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertIntArrayToStringArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertIntegerArrayToIntegerArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid convertIntegerArrayToIntegerArray() {\r\n    Integer[] result = conversionService.convert(new Integer[] { 1, 2, 3 }, Integer[].class);\r\n    assertThat(result).containsExactly(1, 2, 3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#convertIntegerArrayToIntegerArray()",
    "tailType": "method"
  }
]