[
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#splitArrayElementsIntoProperties()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#splitArrayElementsIntoProperties()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#splitArrayElementsIntoPropertiesAndDeletedChars()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid splitArrayElementsIntoPropertiesAndDeletedChars() {\r\n    String[] input = new String[] { \"key1=value1 \", \"key2 =\\\"value2\\\"\" };\r\n    Properties result = StringUtils.splitArrayElementsIntoProperties(input, \"=\", \"\\\"\");\r\n    assertThat(result.getProperty(\"key1\")).isEqualTo(\"value1\");\r\n    assertThat(result.getProperty(\"key2\")).isEqualTo(\"value2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#splitArrayElementsIntoPropertiesAndDeletedChars()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#splitArrayElementsIntoPropertiesAndDeletedChars()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#tokenizeToStringArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid tokenizeToStringArray() {\r\n    String[] sa = StringUtils.tokenizeToStringArray(\"a,b , ,c\", \",\");\r\n    assertThat(sa).hasSize(3);\r\n    assertThat(sa[0].equals(\"a\") && sa[1].equals(\"b\") && sa[2].equals(\"c\")).as(\"components are correct\").isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#tokenizeToStringArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#tokenizeToStringArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#tokenizeToStringArrayWithNotIgnoreEmptyTokens()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid tokenizeToStringArrayWithNotIgnoreEmptyTokens() {\r\n    String[] sa = StringUtils.tokenizeToStringArray(\"a,b , ,c\", \",\", true, false);\r\n    assertThat(sa).hasSize(4);\r\n    assertThat(sa[0].equals(\"a\") && sa[1].equals(\"b\") && sa[2].isEmpty() && sa[3].equals(\"c\")).as(\"components are correct\").isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#tokenizeToStringArrayWithNotIgnoreEmptyTokens()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#tokenizeToStringArrayWithNotIgnoreEmptyTokens()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#tokenizeToStringArrayWithNotTrimTokens()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid tokenizeToStringArrayWithNotTrimTokens() {\r\n    String[] sa = StringUtils.tokenizeToStringArray(\"a,b ,c\", \",\", false, true);\r\n    assertThat(sa).hasSize(3);\r\n    assertThat(sa[0].equals(\"a\") && sa[1].equals(\"b \") && sa[2].equals(\"c\")).as(\"components are correct\").isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#tokenizeToStringArrayWithNotTrimTokens()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#tokenizeToStringArrayWithNotTrimTokens()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayWithNullProducesEmptyArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid commaDelimitedListToStringArrayWithNullProducesEmptyArray() {\r\n    String[] sa = StringUtils.commaDelimitedListToStringArray(null);\r\n    assertThat(sa).as(\"String array isn't null with null input\").isNotNull();\r\n    assertThat(sa.length).as(\"String array length == 0 with null input\").isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayWithNullProducesEmptyArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayWithNullProducesEmptyArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayWithEmptyStringProducesEmptyArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid commaDelimitedListToStringArrayWithEmptyStringProducesEmptyArray() {\r\n    String[] sa = StringUtils.commaDelimitedListToStringArray(\"\");\r\n    assertThat(sa).as(\"String array isn't null with null input\").isNotNull();\r\n    assertThat(sa.length).as(\"String array length == 0 with null input\").isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayWithEmptyStringProducesEmptyArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayWithEmptyStringProducesEmptyArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]