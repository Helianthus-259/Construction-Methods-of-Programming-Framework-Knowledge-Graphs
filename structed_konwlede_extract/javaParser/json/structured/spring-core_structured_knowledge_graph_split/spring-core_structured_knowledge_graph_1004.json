[
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#buffer",
    "headType": "field",
    "relation": "haveType",
    "tail": "Buffer",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#dataBufferFactory",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#dataBufferFactory",
    "headType": "field",
    "relation": "haveType",
    "tail": "Netty5DataBufferFactory",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#getNativeBuffer()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Directly exposes the native {@code Buffer} that this buffer is based on.\r\n * @return the wrapped buffer\r\n */\r\npublic Buffer getNativeBuffer() {\r\n    return this.buffer;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#getNativeBuffer()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#factory()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBufferFactory factory() {\r\n    return this.dataBufferFactory;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#factory()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#factory()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#indexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int indexOf(IntPredicate predicate, int fromIndex) {\r\n    Assert.notNull(predicate, \"IntPredicate must not be null\");\r\n    if (fromIndex < 0) {\r\n        fromIndex = 0;\r\n    } else if (fromIndex >= this.buffer.writerOffset()) {\r\n        return -1;\r\n    }\r\n    int length = this.buffer.writerOffset() - fromIndex;\r\n    int bytes = this.buffer.openCursor(fromIndex, length).process(predicate.negate()::test);\r\n    return bytes == -1 ? -1 : fromIndex + bytes;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#indexOf(IntPredicate,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#indexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#lastIndexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int lastIndexOf(IntPredicate predicate, int fromIndex) {\r\n    Assert.notNull(predicate, \"IntPredicate must not be null\");\r\n    if (fromIndex < 0) {\r\n        return -1;\r\n    }\r\n    fromIndex = Math.min(fromIndex, this.buffer.writerOffset() - 1);\r\n    return this.buffer.openCursor(0, fromIndex + 1).process(predicate.negate()::test);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#lastIndexOf(IntPredicate,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#lastIndexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#readableByteCount()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int readableByteCount() {\r\n    return this.buffer.readableBytes();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#readableByteCount()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#readableByteCount()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#writableByteCount()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int writableByteCount() {\r\n    return this.buffer.writableBytes();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.Netty5DataBuffer#writableByteCount()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.Netty5DataBuffer#writableByteCount()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]