[
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#targetType",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class<?>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#getTargetType()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the {@code type} that this instance is using to filter candidates.\r\n * @since 5.0\r\n */\r\npublic final Class<?> getTargetType() {\r\n    return this.targetType;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.filter.AssignableTypeFilter#getTargetType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchClassName(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected boolean matchClassName(String className) {\r\n    return this.targetType.getName().equals(className);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.filter.AssignableTypeFilter#matchClassName(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchClassName(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchSuperClass(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\nprotected Boolean matchSuperClass(String superClassName) {\r\n    return matchTargetType(superClassName);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.filter.AssignableTypeFilter#matchSuperClass(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchSuperClass(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchSuperClass(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchInterface(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\nprotected Boolean matchInterface(String interfaceName) {\r\n    return matchTargetType(interfaceName);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.filter.AssignableTypeFilter#matchInterface(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchInterface(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchInterface(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchTargetType(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Nullable\r\nprotected Boolean matchTargetType(String typeName) {\r\n    if (this.targetType.getName().equals(typeName)) {\r\n        return true;\r\n    } else if (Object.class.getName().equals(typeName)) {\r\n        return false;\r\n    } else if (typeName.startsWith(\"java\")) {\r\n        try {\r\n            Class<?> clazz = ClassUtils.forName(typeName, getClass().getClassLoader());\r\n            return this.targetType.isAssignableFrom(clazz);\r\n        } catch (Throwable ex) {\r\n            // Class not regularly loadable - can't determine a match that way.\r\n        }\r\n    }\r\n    return null;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.filter.AssignableTypeFilter#matchTargetType(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter#matchTargetType(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.filter.AssignableTypeFilter",
    "headType": "class",
    "relation": "extend",
    "tail": "AbstractTypeHierarchyTraversingFilter",
    "tailType": "class"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.type.filter",
    "tailType": "package"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.type.filter",
    "tailType": "package"
  }
]