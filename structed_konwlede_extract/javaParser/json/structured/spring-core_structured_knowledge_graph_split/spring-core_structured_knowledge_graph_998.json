[
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#asByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#asByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic ByteBuffer toByteBuffer(int index, int length) {\r\n    return this.delegate.toByteBuffer(index, length);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void toByteBuffer(int srcPos, ByteBuffer dest, int destPos, int length) {\r\n    this.delegate.toByteBuffer(srcPos, dest, destPos, length);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#readableByteBuffers()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic ByteBufferIterator readableByteBuffers() {\r\n    ByteBufferIterator delegateIterator = this.delegate.readableByteBuffers();\r\n    if (this.chunk != null) {\r\n        return new JettyByteBufferIterator(delegateIterator, this.chunk);\r\n    } else {\r\n        return delegateIterator;\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.JettyDataBuffer#readableByteBuffers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#readableByteBuffers()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#writableByteBuffers()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic ByteBufferIterator writableByteBuffers() {\r\n    ByteBufferIterator delegateIterator = this.delegate.writableByteBuffers();\r\n    if (this.chunk != null) {\r\n        return new JettyByteBufferIterator(delegateIterator, this.chunk);\r\n    } else {\r\n        return delegateIterator;\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.JettyDataBuffer#writableByteBuffers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#writableByteBuffers()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toString(int,int,Charset)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString(int index, int length, Charset charset) {\r\n    return this.delegate.toString(index, length, charset);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.JettyDataBuffer#toString(int,int,Charset)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#toString(int,int,Charset)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean equals(Object other) {\r\n    return (this == other || (other instanceof JettyDataBuffer otherBuffer && this.delegate.equals(otherBuffer.delegate)));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.JettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.JettyDataBuffer#equals(Object)",
    "tailType": "method"
  }
]