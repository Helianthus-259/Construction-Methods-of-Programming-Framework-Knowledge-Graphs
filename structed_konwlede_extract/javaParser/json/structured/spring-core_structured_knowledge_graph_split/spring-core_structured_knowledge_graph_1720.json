[
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromImplicitAliasesInMetaAnnotationOnComposedAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromImplicitAliasesInMetaAnnotationOnComposedAnnotation() {\r\n    MergedAnnotation<?> annotation = MergedAnnotations.from(ComposedImplicitAliasesContextConfigurationClass.class, SearchStrategy.INHERITED_ANNOTATIONS).get(ImplicitAliasesContextConfiguration.class);\r\n    assertThat(annotation.getStringArray(\"groovyScripts\")).containsExactly(\"A.xml\", \"B.xml\");\r\n    assertThat(annotation.getStringArray(\"xmlFiles\")).containsExactly(\"A.xml\", \"B.xml\");\r\n    assertThat(annotation.getStringArray(\"locations\")).containsExactly(\"A.xml\", \"B.xml\");\r\n    assertThat(annotation.getStringArray(\"value\")).containsExactly(\"A.xml\", \"B.xml\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromImplicitAliasesInMetaAnnotationOnComposedAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromImplicitAliasesInMetaAnnotationOnComposedAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromAliasedValueComposedAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromAliasedValueComposedAnnotation() {\r\n    testGetWithInherited(AliasedValueComposedContextConfigurationClass.class, \"test.xml\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromAliasedValueComposedAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromAliasedValueComposedAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromImplicitAliasesForSameAttributeInComposedAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromImplicitAliasesForSameAttributeInComposedAnnotation() {\r\n    testGetWithInherited(ImplicitAliasesContextConfigurationClass1.class, \"foo.xml\");\r\n    testGetWithInherited(ImplicitAliasesContextConfigurationClass2.class, \"bar.xml\");\r\n    testGetWithInherited(ImplicitAliasesContextConfigurationClass3.class, \"baz.xml\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromImplicitAliasesForSameAttributeInComposedAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromImplicitAliasesForSameAttributeInComposedAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliases()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromTransitiveImplicitAliases() {\r\n    testGetWithInherited(TransitiveImplicitAliasesContextConfigurationClass.class, \"test.groovy\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliases()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliases()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSingleElementOverridingAnArrayViaAliasFor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSingleElementOverridingAnArrayViaAliasFor() {\r\n    testGetWithInherited(SingleLocationTransitiveImplicitAliasesContextConfigurationClass.class, \"test.groovy\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSingleElementOverridingAnArrayViaAliasFor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSingleElementOverridingAnArrayViaAliasFor()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevel()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevel() {\r\n    testGetWithInherited(TransitiveImplicitAliasesWithSkippedLevelContextConfigurationClass.class, \"test.xml\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevel()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevel()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevelWithSingleElementOverridingAnArrayViaAliasFor()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevelWithSingleElementOverridingAnArrayViaAliasFor() {\r\n    testGetWithInherited(SingleLocationTransitiveImplicitAliasesWithSkippedLevelContextConfigurationClass.class, \"test.xml\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsTests#getWithInheritedAnnotationsFromTransitiveImplicitAliasesWithSkippedLevelWithSingleElementOverridingAnArrayViaAliasFor()",
    "tailType": "method"
  }
]