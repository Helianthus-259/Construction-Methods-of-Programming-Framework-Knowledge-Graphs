[
  {
    "head": "org.springframework.cglib.beans.BeanMap#REQUIRE_SETTER",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.beans.BeanMap#bean",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#bean",
    "headType": "field",
    "relation": "haveType",
    "tail": "Object",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#create(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Helper method to create a new <code>BeanMap</code>.  For finer\r\n * control over the generated instance, use a new instance of\r\n * <code>BeanMap.Generator</code> instead of this static method.\r\n * @param bean the JavaBean underlying the map\r\n * @return a new <code>BeanMap</code> instance\r\n */\r\npublic static BeanMap create(Object bean) {\r\n    Generator gen = new Generator();\r\n    gen.setBean(bean);\r\n    return gen.create();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#create(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#newInstance(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a new <code>BeanMap</code> instance using the specified bean.\r\n * This is faster than using the {@link #create} static method.\r\n * @param bean the JavaBean underlying the map\r\n * @return a new <code>BeanMap</code> instance\r\n */\r\nabstract public BeanMap newInstance(Object bean);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#newInstance(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#getPropertyType(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get the type of a property.\r\n * @param name the name of the JavaBean property\r\n * @return the type of the property, or null if the property does not exist\r\n */\r\nabstract public Class getPropertyType(String name);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#getPropertyType(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#get(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Object get(Object key) {\r\n    return get(bean, key);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#get(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#get(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#put(Object,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Object put(Object key, Object value) {\r\n    return put(bean, key, value);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#put(Object,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#put(Object,Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#get(Object,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get the property of a bean. This allows a <code>BeanMap</code>\r\n * to be used statically for multiple beans--the bean instance tied to the\r\n * map is ignored and the bean passed to this method is used instead.\r\n * @param bean the bean to query; must be compatible with the type of\r\n * this <code>BeanMap</code>\r\n * @param key must be a String\r\n * @return the current value, or null if there is no matching property\r\n */\r\nabstract public Object get(Object bean, Object key);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#get(Object,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#put(Object,Object,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the property of a bean. This allows a <code>BeanMap</code>\r\n * to be used statically for multiple beans--the bean instance tied to the\r\n * map is ignored and the bean passed to this method is used instead.\r\n * @param key must be a String\r\n * @return the old value, if there was one, or null\r\n */\r\nabstract public Object put(Object bean, Object key, Object value);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#put(Object,Object,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#setBean(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Change the underlying bean this map should use.\r\n * @param bean the new JavaBean\r\n * @see #getBean\r\n */\r\npublic void setBean(Object bean) {\r\n    this.bean = bean;\r\n}",
    "tailType": "method_code"
  }
]