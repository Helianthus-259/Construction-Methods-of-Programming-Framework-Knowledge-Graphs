[
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithComma()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid delimitedListToStringArrayWithComma() {\r\n    String[] sa = StringUtils.delimitedListToStringArray(\"a,b\", \",\");\r\n    assertThat(sa).hasSize(2);\r\n    assertThat(sa[0]).isEqualTo(\"a\");\r\n    assertThat(sa[1]).isEqualTo(\"b\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithComma()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithComma()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithSemicolon()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid delimitedListToStringArrayWithSemicolon() {\r\n    String[] sa = StringUtils.delimitedListToStringArray(\"a;b\", \";\");\r\n    assertThat(sa).hasSize(2);\r\n    assertThat(sa[0]).isEqualTo(\"a\");\r\n    assertThat(sa[1]).isEqualTo(\"b\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithSemicolon()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithSemicolon()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithEmptyDelimiter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid delimitedListToStringArrayWithEmptyDelimiter() {\r\n    String[] sa = StringUtils.delimitedListToStringArray(\"a,b\", \"\");\r\n    assertThat(sa).hasSize(3);\r\n    assertThat(sa[0]).isEqualTo(\"a\");\r\n    assertThat(sa[1]).isEqualTo(\",\");\r\n    assertThat(sa[2]).isEqualTo(\"b\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithEmptyDelimiter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithEmptyDelimiter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithNullDelimiter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid delimitedListToStringArrayWithNullDelimiter() {\r\n    String[] sa = StringUtils.delimitedListToStringArray(\"a,b\", null);\r\n    assertThat(sa).hasSize(1);\r\n    assertThat(sa[0]).isEqualTo(\"a,b\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithNullDelimiter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithNullDelimiter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithCharacterToDelete()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid delimitedListToStringArrayWithCharacterToDelete() {\r\n    String[] sa = StringUtils.delimitedListToStringArray(\"a,b,c\", \",\", \"a\");\r\n    assertThat(sa).containsExactly(\"\", \"b\", \"c\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithCharacterToDelete()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithCharacterToDelete()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithCharacterToDeleteEqualsToDelimiter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid delimitedListToStringArrayWithCharacterToDeleteEqualsToDelimiter() {\r\n    String[] sa = StringUtils.delimitedListToStringArray(\"a,b,c\", \",\", \",\");\r\n    assertThat(sa).containsExactly(\"a\", \"b\", \"c\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithCharacterToDeleteEqualsToDelimiter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#delimitedListToStringArrayWithCharacterToDeleteEqualsToDelimiter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayMatchWords()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid commaDelimitedListToStringArrayMatchWords() {\r\n    // Could read these from files\r\n    String[] sa = new String[] { \"foo\", \"bar\", \"big\" };\r\n    doTestCommaDelimitedListToStringArrayLegalMatch(sa);\r\n    doTestStringArrayReverseTransformationMatches(sa);\r\n    sa = new String[] { \"a\", \"b\", \"c\" };\r\n    doTestCommaDelimitedListToStringArrayLegalMatch(sa);\r\n    doTestStringArrayReverseTransformationMatches(sa);\r\n    // Test same words\r\n    sa = new String[] { \"AA\", \"AA\", \"AA\", \"AA\", \"AA\" };\r\n    doTestCommaDelimitedListToStringArrayLegalMatch(sa);\r\n    doTestStringArrayReverseTransformationMatches(sa);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StringUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StringUtilsTests#commaDelimitedListToStringArrayMatchWords()",
    "tailType": "method"
  }
]