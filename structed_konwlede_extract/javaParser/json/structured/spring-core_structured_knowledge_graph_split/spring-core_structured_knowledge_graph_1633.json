[
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#typeHierarchyStrategyOnClassWhenHasSingleInterfaceScansInterfaces()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#typeHierarchyStrategyOnClassWhenHasSingleInterfaceScansInterfaces()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#typeHierarchyStrategyOnClassHierarchyScansInCorrectOrder()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyOnClassHierarchyScansInCorrectOrder() {\r\n    Class<?> source = WithHierarchy.class;\r\n    assertThat(scan(source, SearchStrategy.TYPE_HIERARCHY)).containsExactly(\"0:TestAnnotation1\", \"1:TestAnnotation5\", \"1:TestInheritedAnnotation5\", \"2:TestAnnotation6\", \"3:TestAnnotation2\", \"3:TestInheritedAnnotation2\", \"4:TestAnnotation3\", \"4:TestInheritedAnnotation3\", \"5:TestAnnotation4\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#typeHierarchyStrategyOnClassHierarchyScansInCorrectOrder()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#typeHierarchyStrategyOnClassHierarchyScansInCorrectOrder()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenNotAnnotatedScansNone()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnMethodWhenNotAnnotatedScansNone() {\r\n    Method source = methodFrom(WithNoAnnotations.class);\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenNotAnnotatedScansNone()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenNotAnnotatedScansNone()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodScansAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnMethodScansAnnotations() {\r\n    Method source = methodFrom(WithSingleAnnotation.class);\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).containsExactly(\"0:TestAnnotation1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodScansAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodScansAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenMultipleAnnotationsScansAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnMethodWhenMultipleAnnotationsScansAnnotations() {\r\n    Method source = methodFrom(WithMultipleAnnotations.class);\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).containsExactly(\"0:TestAnnotation1\", \"0:TestAnnotation2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenMultipleAnnotationsScansAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenMultipleAnnotationsScansAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenHasSuperclassScansOnlyDirect()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnMethodWhenHasSuperclassScansOnlyDirect() {\r\n    Method source = methodFrom(WithSingleSuperclass.class);\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).containsExactly(\"0:TestAnnotation1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenHasSuperclassScansOnlyDirect()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenHasSuperclassScansOnlyDirect()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenHasInterfaceScansOnlyDirect()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnMethodWhenHasInterfaceScansOnlyDirect() {\r\n    Method source = methodFrom(WithSingleInterface.class);\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).containsExactly(\"0:TestAnnotation1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenHasInterfaceScansOnlyDirect()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnMethodWhenHasInterfaceScansOnlyDirect()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]