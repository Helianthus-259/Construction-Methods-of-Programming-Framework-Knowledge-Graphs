[
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#getDefaultValueReturnsEmpty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#getDefaultValueReturnsEmpty()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeThrowsNoSuchElementException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid synthesizeThrowsNoSuchElementException() {\r\n    assertThatNoSuchElementException().isThrownBy(this.missing::synthesize);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeThrowsNoSuchElementException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeThrowsNoSuchElementException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeWithPredicateWhenPredicateMatchesThrowsNoSuchElementException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid synthesizeWithPredicateWhenPredicateMatchesThrowsNoSuchElementException() {\r\n    assertThatNoSuchElementException().isThrownBy(() -> this.missing.synthesize(annotation -> true));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeWithPredicateWhenPredicateMatchesThrowsNoSuchElementException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeWithPredicateWhenPredicateMatchesThrowsNoSuchElementException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeWithPredicateWhenPredicateDoesNotMatchReturnsEmpty()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid synthesizeWithPredicateWhenPredicateDoesNotMatchReturnsEmpty() {\r\n    assertThat(this.missing.synthesize(annotation -> false)).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeWithPredicateWhenPredicateDoesNotMatchReturnsEmpty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#synthesizeWithPredicateWhenPredicateDoesNotMatchReturnsEmpty()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#toStringReturnsString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid toStringReturnsString() {\r\n    assertThat(this.missing.toString()).isEqualTo(\"(missing)\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#toStringReturnsString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#toStringReturnsString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#asAnnotationAttributesReturnsNewAnnotationAttributes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid asAnnotationAttributesReturnsNewAnnotationAttributes() {\r\n    AnnotationAttributes attributes = this.missing.asAnnotationAttributes();\r\n    assertThat(attributes).isEmpty();\r\n    assertThat(this.missing.asAnnotationAttributes()).isNotSameAs(attributes);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#asAnnotationAttributesReturnsNewAnnotationAttributes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#asAnnotationAttributesReturnsNewAnnotationAttributes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#asMapReturnsEmptyMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid asMapReturnsEmptyMap() {\r\n    Map<String, Object> map = this.missing.asMap();\r\n    assertThat(map).isSameAs(Collections.EMPTY_MAP);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MissingMergedAnnotationTests#asMapReturnsEmptyMap()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MissingMergedAnnotationTests#asMapReturnsEmptyMap()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]