[
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#setup()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#setup()",
    "headType": "method",
    "relation": "use",
    "tail": "@BeforeEach",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#scalarList()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid scalarList() throws Exception {\r\n    List<String> list = List.of(\"9\", \"37\");\r\n    TypeDescriptor sourceType = TypeDescriptor.forObject(list);\r\n    TypeDescriptor targetType = new TypeDescriptor(getClass().getField(\"scalarListTarget\"));\r\n    assertThat(conversionService.canConvert(sourceType, targetType)).isTrue();\r\n    assertThatExceptionOfType(ConversionFailedException.class).isThrownBy(() -> conversionService.convert(list, sourceType, targetType)).withCauseInstanceOf(ConverterNotFoundException.class);\r\n    conversionService.addConverterFactory(new StringToNumberConverterFactory());\r\n    assertThat(conversionService.canConvert(sourceType, targetType)).isTrue();\r\n    @SuppressWarnings(\"unchecked\")\r\n    List<Integer> result = (List<Integer>) conversionService.convert(list, sourceType, targetType);\r\n    assertThat(result).isNotEqualTo(list).containsExactly(9, 37);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#scalarList()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#scalarList()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#emptyListToList()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid emptyListToList() throws Exception {\r\n    conversionService.addConverter(new CollectionToCollectionConverter(conversionService));\r\n    conversionService.addConverterFactory(new StringToNumberConverterFactory());\r\n    List<String> list = new ArrayList<>();\r\n    TypeDescriptor sourceType = TypeDescriptor.forObject(list);\r\n    TypeDescriptor targetType = new TypeDescriptor(getClass().getField(\"emptyListTarget\"));\r\n    assertThat(conversionService.canConvert(sourceType, targetType)).isTrue();\r\n    assertThat(conversionService.convert(list, sourceType, targetType)).isEqualTo(list);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#emptyListToList()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#emptyListToList()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#emptyListToListDifferentTargetType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid emptyListToListDifferentTargetType() throws Exception {\r\n    conversionService.addConverter(new CollectionToCollectionConverter(conversionService));\r\n    conversionService.addConverterFactory(new StringToNumberConverterFactory());\r\n    List<String> list = new ArrayList<>();\r\n    TypeDescriptor sourceType = TypeDescriptor.forObject(list);\r\n    TypeDescriptor targetType = new TypeDescriptor(getClass().getField(\"emptyListDifferentTarget\"));\r\n    assertThat(conversionService.canConvert(sourceType, targetType)).isTrue();\r\n    @SuppressWarnings(\"unchecked\")\r\n    ArrayList<Integer> result = (ArrayList<Integer>) conversionService.convert(list, sourceType, targetType);\r\n    assertThat(result.getClass()).isEqualTo(ArrayList.class);\r\n    assertThat(result).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#emptyListToListDifferentTargetType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#emptyListToListDifferentTargetType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#collectionToObjectInteraction()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid collectionToObjectInteraction() {\r\n    List<List<String>> list = new ArrayList<>();\r\n    list.add(Arrays.asList(\"9\", \"12\"));\r\n    list.add(Arrays.asList(\"37\", \"23\"));\r\n    conversionService.addConverter(new CollectionToObjectConverter(conversionService));\r\n    assertThat(conversionService.canConvert(List.class, List.class)).isTrue();\r\n    assertThat((Object) conversionService.convert(list, List.class)).isSameAs(list);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#collectionToObjectInteraction()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#collectionToObjectInteraction()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#arrayCollectionToObjectInteraction()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"unchecked\")\r\nvoid arrayCollectionToObjectInteraction() {\r\n    List<String>[] array = new List[2];\r\n    array[0] = Arrays.asList(\"9\", \"12\");\r\n    array[1] = Arrays.asList(\"37\", \"23\");\r\n    conversionService.addConverter(new ArrayToCollectionConverter(conversionService));\r\n    conversionService.addConverter(new CollectionToObjectConverter(conversionService));\r\n    assertThat(conversionService.canConvert(String[].class, List.class)).isTrue();\r\n    assertThat(conversionService.convert(array, List.class)).isEqualTo(Arrays.asList(array));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#arrayCollectionToObjectInteraction()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#arrayCollectionToObjectInteraction()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#arrayCollectionToObjectInteraction()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#objectToCollection()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"unchecked\")\r\nvoid objectToCollection() throws Exception {\r\n    List<List<String>> list = new ArrayList<>();\r\n    list.add(Arrays.asList(\"9\", \"12\"));\r\n    list.add(Arrays.asList(\"37\", \"23\"));\r\n    conversionService.addConverterFactory(new StringToNumberConverterFactory());\r\n    conversionService.addConverter(new ObjectToCollectionConverter(conversionService));\r\n    conversionService.addConverter(new CollectionToObjectConverter(conversionService));\r\n    TypeDescriptor sourceType = TypeDescriptor.forObject(list);\r\n    TypeDescriptor targetType = new TypeDescriptor(getClass().getField(\"objectToCollection\"));\r\n    assertThat(conversionService.canConvert(sourceType, targetType)).isTrue();\r\n    List<List<List<Integer>>> result = (List<List<List<Integer>>>) conversionService.convert(list, sourceType, targetType);\r\n    assertThat(result).hasSize(2);\r\n    assertThat(result.get(0).get(0)).singleElement().isEqualTo(9);\r\n    assertThat(result.get(0).get(1)).singleElement().isEqualTo(12);\r\n    assertThat(result.get(1).get(0)).singleElement().isEqualTo(37);\r\n    assertThat(result.get(1).get(1)).singleElement().isEqualTo(23);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.CollectionToCollectionConverterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.CollectionToCollectionConverterTests#objectToCollection()",
    "tailType": "method"
  }
]