[
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithShortPrimitiveClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithShortPrimitiveClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithShortWrapperClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithShortWrapperClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(Short.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithShortWrapperClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithShortWrapperClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashWithNull()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeHashWithNull() {\r\n    assertThat(ObjectUtils.nullSafeHash((Object[]) null)).isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashWithNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashWithNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashWithIntermediateNullElements()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid nullSafeHashWithIntermediateNullElements() {\r\n    assertThat(ObjectUtils.nullSafeHash(3, null, 5)).isEqualTo(Objects.hash(3, null, 5));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashWithIntermediateNullElements()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashWithIntermediateNullElements()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullBooleanArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithNullBooleanArray() {\r\n    boolean[] array = null;\r\n    assertThat(ObjectUtils.nullSafeHashCode(array)).isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullBooleanArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullBooleanArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullBooleanArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithBooleanArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithBooleanArray() {\r\n    boolean[] array = { true, false };\r\n    int actual = ObjectUtils.nullSafeHashCode(array);\r\n    assertThat(actual).isEqualTo(Arrays.hashCode(array));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithBooleanArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithBooleanArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithBooleanArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithObjectBeingBooleanArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithObjectBeingBooleanArray() {\r\n    Object array = new boolean[] { true, false };\r\n    int expected = ObjectUtils.nullSafeHashCode((boolean[]) array);\r\n    assertEqualHashCodes(expected, array);\r\n}",
    "tailType": "method_code"
  }
]