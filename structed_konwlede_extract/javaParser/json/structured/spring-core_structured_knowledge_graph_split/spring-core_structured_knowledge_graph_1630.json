[
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassWhenHasSuperclassScansOnlyDirect()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassWhenHasSuperclassScansOnlyDirect()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassWhenHasInterfaceScansOnlyDirect()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnClassWhenHasInterfaceScansOnlyDirect() {\r\n    Class<?> source = WithSingleInterface.class;\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).containsExactly(\"0:TestAnnotation1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassWhenHasInterfaceScansOnlyDirect()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassWhenHasInterfaceScansOnlyDirect()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassHierarchyScansInCorrectOrder()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid directStrategyOnClassHierarchyScansInCorrectOrder() {\r\n    Class<?> source = WithHierarchy.class;\r\n    assertThat(scan(source, SearchStrategy.DIRECT)).containsExactly(\"0:TestAnnotation1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassHierarchyScansInCorrectOrder()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#directStrategyOnClassHierarchyScansInCorrectOrder()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenNotAnnotatedScansNone()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid inheritedAnnotationsStrategyOnClassWhenNotAnnotatedScansNone() {\r\n    Class<?> source = WithNoAnnotations.class;\r\n    assertThat(scan(source, SearchStrategy.INHERITED_ANNOTATIONS)).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenNotAnnotatedScansNone()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenNotAnnotatedScansNone()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassScansAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid inheritedAnnotationsStrategyOnClassScansAnnotations() {\r\n    Class<?> source = WithSingleAnnotation.class;\r\n    assertThat(scan(source, SearchStrategy.INHERITED_ANNOTATIONS)).containsExactly(\"0:TestAnnotation1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassScansAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassScansAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenMultipleAnnotationsScansAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid inheritedAnnotationsStrategyOnClassWhenMultipleAnnotationsScansAnnotations() {\r\n    Class<?> source = WithMultipleAnnotations.class;\r\n    assertThat(scan(source, SearchStrategy.INHERITED_ANNOTATIONS)).containsExactly(\"0:TestAnnotation1\", \"0:TestAnnotation2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenMultipleAnnotationsScansAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenMultipleAnnotationsScansAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenHasSuperclassScansOnlyInherited()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid inheritedAnnotationsStrategyOnClassWhenHasSuperclassScansOnlyInherited() {\r\n    Class<?> source = WithSingleSuperclass.class;\r\n    assertThat(scan(source, SearchStrategy.INHERITED_ANNOTATIONS)).containsExactly(\"0:TestAnnotation1\", \"1:TestInheritedAnnotation2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenHasSuperclassScansOnlyInherited()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationsScannerTests#inheritedAnnotationsStrategyOnClassWhenHasSuperclassScansOnlyInherited()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]