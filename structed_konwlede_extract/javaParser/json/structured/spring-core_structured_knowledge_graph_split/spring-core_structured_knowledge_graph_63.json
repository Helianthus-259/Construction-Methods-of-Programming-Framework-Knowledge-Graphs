[
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#verifyHashCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid verifyHashCode() {\r\n    MethodMetadata withMethod1 = getTagged(WithMethod.class);\r\n    MethodMetadata withMethod2 = getTagged(WithMethod.class);\r\n    MethodMetadata withMethodWithTwoArguments1 = getTagged(WithMethodWithTwoArguments.class);\r\n    MethodMetadata withMethodWithTwoArguments2 = getTagged(WithMethodWithTwoArguments.class);\r\n    assertThat(withMethod1).hasSameHashCodeAs(withMethod2);\r\n    assertThat(withMethodWithTwoArguments1).hasSameHashCodeAs(withMethodWithTwoArguments2);\r\n    assertThat(withMethod1).doesNotHaveSameHashCodeAs(withMethodWithTwoArguments1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#verifyHashCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#verifyHashCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#verifyToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid verifyToString() {\r\n    assertThat(getTagged(WithMethod.class).toString()).endsWith(WithMethod.class.getName() + \".test()\");\r\n    assertThat(getTagged(WithMethodWithOneArgument.class).toString()).endsWith(WithMethodWithOneArgument.class.getName() + \".test(java.lang.String)\");\r\n    assertThat(getTagged(WithMethodWithTwoArguments.class).toString()).endsWith(WithMethodWithTwoArguments.class.getName() + \".test(java.lang.String,java.lang.Integer)\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#verifyToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#verifyToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#getMethodNameReturnsMethodName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getMethodNameReturnsMethodName() {\r\n    assertThat(getTagged(WithMethod.class).getMethodName()).isEqualTo(\"test\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#getMethodNameReturnsMethodName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#getMethodNameReturnsMethodName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#getDeclaringClassReturnsDeclaringClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getDeclaringClassReturnsDeclaringClass() {\r\n    assertThat(getTagged(WithMethod.class).getDeclaringClassName()).isEqualTo(WithMethod.class.getName());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#getDeclaringClassReturnsDeclaringClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#getDeclaringClassReturnsDeclaringClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#getReturnTypeReturnsReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getReturnTypeReturnsReturnType() {\r\n    assertThat(getTagged(WithMethod.class).getReturnTypeName()).isEqualTo(String.class.getName());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#getReturnTypeReturnsReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#getReturnTypeReturnsReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#isAbstractWhenAbstractReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAbstractWhenAbstractReturnsTrue() {\r\n    assertThat(getTagged(WithAbstractMethod.class).isAbstract()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#isAbstractWhenAbstractReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#isAbstractWhenAbstractReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests#isAbstractWhenNotAbstractReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAbstractWhenNotAbstractReturnsFalse() {\r\n    assertThat(getTagged(WithMethod.class).isAbstract()).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractMethodMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractMethodMetadataTests#isAbstractWhenNotAbstractReturnsFalse()",
    "tailType": "method"
  }
]