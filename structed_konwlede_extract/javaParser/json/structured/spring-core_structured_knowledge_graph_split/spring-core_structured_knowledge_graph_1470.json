[
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#getProperty(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Object getProperty(String name) throws IllegalArgumentException {\r\n    throw new IllegalArgumentException();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#getProperty(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#getProperty(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeStartDocument() throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createStartDocument());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeStartDocument(String version) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createStartDocument(DEFAULT_ENCODING, version));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeStartDocument(String encoding, String version) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    this.eventWriter.add(this.eventFactory.createStartDocument(encoding, version));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartDocument(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeStartElement(String localName) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    doWriteStartElement(this.eventFactory.createStartElement(new QName(localName), null, null));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeStartElement(String namespaceURI, String localName) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    doWriteStartElement(this.eventFactory.createStartElement(new QName(namespaceURI, localName), null, null));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String,String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeStartElement(String prefix, String localName, String namespaceURI) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    doWriteStartElement(this.eventFactory.createStartElement(new QName(namespaceURI, localName, prefix), null, null));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String,String,String)",
    "tailType": "method"
  }
]