[
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#listToIterableConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#listToIterableConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#listToObjectConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid listToObjectConversion() {\r\n    List<Object> raw = List.of(\"one\", \"two\");\r\n    Object converted = conversionService.convert(raw, Object.class);\r\n    assertThat(converted).isSameAs(raw);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#listToObjectConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#listToObjectConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#mapToObjectConversion()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid mapToObjectConversion() {\r\n    Map<Object, Object> raw = Map.of(\"key\", \"value\");\r\n    Object converted = conversionService.convert(raw, Object.class);\r\n    assertThat(converted).isSameAs(raw);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#mapToObjectConversion()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#mapToObjectConversion()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#interfaceToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid interfaceToString() {\r\n    conversionService.addConverter(new MyBaseInterfaceToStringConverter());\r\n    conversionService.addConverter(new ObjectToStringConverter());\r\n    Object converted = conversionService.convert(new MyInterfaceImplementer(), String.class);\r\n    assertThat(converted).isEqualTo(\"RESULT\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#interfaceToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#interfaceToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#interfaceArrayToStringArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid interfaceArrayToStringArray() {\r\n    conversionService.addConverter(new MyBaseInterfaceToStringConverter());\r\n    conversionService.addConverter(new ArrayToArrayConverter(conversionService));\r\n    String[] converted = conversionService.convert(new MyInterface[] { new MyInterfaceImplementer() }, String[].class);\r\n    assertThat(converted[0]).isEqualTo(\"RESULT\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#interfaceArrayToStringArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#interfaceArrayToStringArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#objectArrayToStringArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid objectArrayToStringArray() {\r\n    conversionService.addConverter(new MyBaseInterfaceToStringConverter());\r\n    conversionService.addConverter(new ArrayToArrayConverter(conversionService));\r\n    String[] converted = conversionService.convert(new MyInterfaceImplementer[] { new MyInterfaceImplementer() }, String[].class);\r\n    assertThat(converted[0]).isEqualTo(\"RESULT\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#objectArrayToStringArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#objectArrayToStringArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#stringArrayToResourceArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringArrayToResourceArray() {\r\n    conversionService.addConverter(new MyStringArrayToResourceArrayConverter());\r\n    Resource[] converted = conversionService.convert(new String[] { \"x1\", \"z3\" }, Resource[].class);\r\n    List<String> descriptions = Arrays.stream(converted).map(Resource::getDescription).sorted(naturalOrder()).collect(toList());\r\n    assertThat(descriptions).isEqualTo(Arrays.asList(\"1\", \"3\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.support.GenericConversionServiceTests#stringArrayToResourceArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.support.GenericConversionServiceTests#stringArrayToResourceArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]