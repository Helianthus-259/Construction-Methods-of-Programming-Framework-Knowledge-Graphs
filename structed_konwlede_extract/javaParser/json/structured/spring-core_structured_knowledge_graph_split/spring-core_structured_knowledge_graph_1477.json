[
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "example.type",
    "tailType": "package"
  },
  {
    "head": "example.type",
    "headType": "package",
    "relation": "haveClass",
    "tail": "example.type.AnnotatedComponent",
    "tailType": "class"
  },
  {
    "head": "example.type.AnnotatedComponent",
    "headType": "class",
    "relation": "use",
    "tail": "@EnclosingAnnotation",
    "tailType": "annotation"
  },
  {
    "head": "example.type.AnnotatedComponent",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2020 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage example.type;\n\n@EnclosingAnnotation(nested2 = @NestedAnnotation)\npublic class AnnotatedComponent {\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "example.type",
    "tailType": "package"
  },
  {
    "head": "example.type",
    "headType": "package",
    "relation": "haveClass",
    "tail": "example.type.AnnotationTypeFilterTestsTypes",
    "tailType": "class"
  },
  {
    "head": "example.type.AnnotationTypeFilterTestsTypes",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage example.type;\n\n/**\n * We must use a standalone set of types to ensure that no one else is loading\n * them and interfering with\n * {@link org.springframework.core.type.ClassloadingAssertions#assertClassNotLoaded(String)}.\n *\n * @author Ramnivas Laddad\n * @author Juergen Hoeller\n * @author Oliver Gierke\n * @author Sam Brannen\n * @see org.springframework.core.type.AnnotationTypeFilterTests\n */\npublic class AnnotationTypeFilterTestsTypes {\n\n\t@InheritedAnnotation\n\tpublic static class SomeComponent {\n\t}\n\n\n\t@InheritedAnnotation\n\tpublic interface SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeClassWithSomeComponentInterface implements Cloneable, SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeComponent extends SomeComponent {\n\t}\n\n\t@NonInheritedAnnotation\n\tpublic static class SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeClassMarkedWithNonInheritedAnnotation extends SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeNonCandidateClass {\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "example.type",
    "headType": "package",
    "relation": "haveClass",
    "tail": "example.type.SomeComponent",
    "tailType": "class"
  },
  {
    "head": "example.type.SomeComponent",
    "headType": "class",
    "relation": "use",
    "tail": "@InheritedAnnotation",
    "tailType": "annotation"
  },
  {
    "head": "example.type.SomeComponent",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage example.type;\n\n/**\n * We must use a standalone set of types to ensure that no one else is loading\n * them and interfering with\n * {@link org.springframework.core.type.ClassloadingAssertions#assertClassNotLoaded(String)}.\n *\n * @author Ramnivas Laddad\n * @author Juergen Hoeller\n * @author Oliver Gierke\n * @author Sam Brannen\n * @see org.springframework.core.type.AnnotationTypeFilterTests\n */\npublic class AnnotationTypeFilterTestsTypes {\n\n\t@InheritedAnnotation\n\tpublic static class SomeComponent {\n\t}\n\n\n\t@InheritedAnnotation\n\tpublic interface SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeClassWithSomeComponentInterface implements Cloneable, SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeComponent extends SomeComponent {\n\t}\n\n\t@NonInheritedAnnotation\n\tpublic static class SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeClassMarkedWithNonInheritedAnnotation extends SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeNonCandidateClass {\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "example.type",
    "headType": "package",
    "relation": "haveClass",
    "tail": "example.type.SomeComponentInterface",
    "tailType": "class"
  },
  {
    "head": "example.type.SomeComponentInterface",
    "headType": "class",
    "relation": "use",
    "tail": "@InheritedAnnotation",
    "tailType": "annotation"
  },
  {
    "head": "example.type.SomeComponentInterface",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage example.type;\n\n/**\n * We must use a standalone set of types to ensure that no one else is loading\n * them and interfering with\n * {@link org.springframework.core.type.ClassloadingAssertions#assertClassNotLoaded(String)}.\n *\n * @author Ramnivas Laddad\n * @author Juergen Hoeller\n * @author Oliver Gierke\n * @author Sam Brannen\n * @see org.springframework.core.type.AnnotationTypeFilterTests\n */\npublic class AnnotationTypeFilterTestsTypes {\n\n\t@InheritedAnnotation\n\tpublic static class SomeComponent {\n\t}\n\n\n\t@InheritedAnnotation\n\tpublic interface SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeClassWithSomeComponentInterface implements Cloneable, SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeComponent extends SomeComponent {\n\t}\n\n\t@NonInheritedAnnotation\n\tpublic static class SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeClassMarkedWithNonInheritedAnnotation extends SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeNonCandidateClass {\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "example.type",
    "headType": "package",
    "relation": "haveClass",
    "tail": "example.type.SomeClassWithSomeComponentInterface",
    "tailType": "class"
  },
  {
    "head": "example.type.SomeClassWithSomeComponentInterface",
    "headType": "class",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "example.type.SomeClassWithSomeComponentInterface",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage example.type;\n\n/**\n * We must use a standalone set of types to ensure that no one else is loading\n * them and interfering with\n * {@link org.springframework.core.type.ClassloadingAssertions#assertClassNotLoaded(String)}.\n *\n * @author Ramnivas Laddad\n * @author Juergen Hoeller\n * @author Oliver Gierke\n * @author Sam Brannen\n * @see org.springframework.core.type.AnnotationTypeFilterTests\n */\npublic class AnnotationTypeFilterTestsTypes {\n\n\t@InheritedAnnotation\n\tpublic static class SomeComponent {\n\t}\n\n\n\t@InheritedAnnotation\n\tpublic interface SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeClassWithSomeComponentInterface implements Cloneable, SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeComponent extends SomeComponent {\n\t}\n\n\t@NonInheritedAnnotation\n\tpublic static class SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeClassMarkedWithNonInheritedAnnotation extends SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeNonCandidateClass {\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "example.type",
    "headType": "package",
    "relation": "haveClass",
    "tail": "example.type.SomeSubclassOfSomeComponent",
    "tailType": "class"
  },
  {
    "head": "example.type.SomeSubclassOfSomeComponent",
    "headType": "class",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "example.type.SomeSubclassOfSomeComponent",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage example.type;\n\n/**\n * We must use a standalone set of types to ensure that no one else is loading\n * them and interfering with\n * {@link org.springframework.core.type.ClassloadingAssertions#assertClassNotLoaded(String)}.\n *\n * @author Ramnivas Laddad\n * @author Juergen Hoeller\n * @author Oliver Gierke\n * @author Sam Brannen\n * @see org.springframework.core.type.AnnotationTypeFilterTests\n */\npublic class AnnotationTypeFilterTestsTypes {\n\n\t@InheritedAnnotation\n\tpublic static class SomeComponent {\n\t}\n\n\n\t@InheritedAnnotation\n\tpublic interface SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeClassWithSomeComponentInterface implements Cloneable, SomeComponentInterface {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeComponent extends SomeComponent {\n\t}\n\n\t@NonInheritedAnnotation\n\tpublic static class SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeSubclassOfSomeClassMarkedWithNonInheritedAnnotation extends SomeClassMarkedWithNonInheritedAnnotation {\n\t}\n\n\n\t@SuppressWarnings(\"unused\")\n\tpublic static class SomeNonCandidateClass {\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "example.type.SomeSubclassOfSomeComponent",
    "headType": "class",
    "relation": "extend",
    "tail": "SomeComponent",
    "tailType": "class"
  }
]