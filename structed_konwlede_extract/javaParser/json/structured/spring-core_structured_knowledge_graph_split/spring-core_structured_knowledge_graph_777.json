[
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getString(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getStringArray(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required string array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a string array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nString[] getStringArray(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getStringArray(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getClass(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required class attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a class\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nClass<?> getClass(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getClass(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getClassArray(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required class array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return the value as a class array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\nClass<?>[] getClassArray(String attributeName) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getClassArray(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getEnum(String,Class<E>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required enum attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @param type the enum type\r\n * @return the value as an enum\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\n<E extends Enum<E>> E getEnum(String attributeName, Class<E> type) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getEnum(String,Class<E>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getEnumArray(String,Class<E>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required enum array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @param type the enum type\r\n * @return the value as an enum array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\n<E extends Enum<E>> E[] getEnumArray(String attributeName, Class<E> type) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getEnumArray(String,Class<E>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getAnnotation(String,Class<T>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required annotation attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @param type the annotation type\r\n * @return the value as a {@link MergedAnnotation}\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\n<T extends Annotation> MergedAnnotation<T> getAnnotation(String attributeName, Class<T> type) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getAnnotation(String,Class<T>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getAnnotationArray(String,Class<T>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get a required annotation array attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @param type the annotation type\r\n * @return the value as a {@link MergedAnnotation} array\r\n * @throws NoSuchElementException if there is no matching attribute\r\n */\r\n<T extends Annotation> MergedAnnotation<T>[] getAnnotationArray(String attributeName, Class<T> type) throws NoSuchElementException;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getAnnotationArray(String,Class<T>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getValue(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get an optional attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @return an optional value or {@link Optional#empty()} if there is no\r\n * matching attribute\r\n */\r\nOptional<Object> getValue(String attributeName);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getValue(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getValue(String,Class<T>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get an optional attribute value from the annotation.\r\n * @param attributeName the attribute name\r\n * @param type the attribute type. Must be compatible with the underlying\r\n * attribute type or {@code Object.class}.\r\n * @return an optional value or {@link Optional#empty()} if there is no\r\n * matching attribute\r\n */\r\n<T> Optional<T> getValue(String attributeName, Class<T> type);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotation#getValue(String,Class<T>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotation#getDefaultValue(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get the default attribute value from the annotation as specified in\r\n * the annotation declaration.\r\n * @param attributeName the attribute name\r\n * @return an optional of the default value or {@link Optional#empty()} if\r\n * there is no matching attribute or no defined default\r\n */\r\nOptional<Object> getDefaultValue(String attributeName);",
    "tailType": "method_code"
  }
]