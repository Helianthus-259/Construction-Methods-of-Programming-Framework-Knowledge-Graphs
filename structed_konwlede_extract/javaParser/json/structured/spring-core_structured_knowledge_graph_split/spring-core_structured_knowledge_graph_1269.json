[
  {
    "head": "org.springframework.util.CompositeMap#containsValue(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean containsValue(Object value) {\r\n    if (this.first.containsValue(value)) {\r\n        return true;\r\n    } else {\r\n        return this.second.containsValue(value);\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeMap#containsValue(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeMap#containsValue(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#get(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic V get(Object key) {\r\n    V firstResult = this.first.get(key);\r\n    if (firstResult != null) {\r\n        return firstResult;\r\n    } else {\r\n        return this.second.get(key);\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeMap#get(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeMap#get(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#get(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#put(K,V)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic V put(K key, V value) {\r\n    if (this.putFunction == null) {\r\n        throw new UnsupportedOperationException();\r\n    } else {\r\n        return this.putFunction.apply(key, value);\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeMap#put(K,V)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeMap#put(K,V)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#put(K,V)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#remove(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic V remove(Object key) {\r\n    V firstResult = this.first.remove(key);\r\n    V secondResult = this.second.remove(key);\r\n    if (firstResult != null) {\r\n        return firstResult;\r\n    } else {\r\n        return secondResult;\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeMap#remove(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeMap#remove(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#remove(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#putAll(Map<? extends K,? extends V>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@SuppressWarnings(\"unchecked\")\r\npublic void putAll(Map<? extends K, ? extends V> m) {\r\n    if (this.putAllFunction != null) {\r\n        this.putAllFunction.accept((Map<K, V>) m);\r\n    } else {\r\n        for (Map.Entry<? extends K, ? extends V> e : m.entrySet()) {\r\n            put(e.getKey(), e.getValue());\r\n        }\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeMap#putAll(Map<? extends K,? extends V>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeMap#putAll(Map<? extends K,? extends V>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#putAll(Map<? extends K,? extends V>)",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeMap#clear()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void clear() {\r\n    this.first.clear();\r\n    this.second.clear();\r\n}",
    "tailType": "method_code"
  }
]