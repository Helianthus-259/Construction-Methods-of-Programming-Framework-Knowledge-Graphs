[
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getClassName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isInterface() {\r\n    return this.introspectedClass.isInterface();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#isInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isAnnotation()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isAnnotation() {\r\n    return this.introspectedClass.isAnnotation();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#isAnnotation()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isAnnotation()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isAbstract()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isAbstract() {\r\n    return Modifier.isAbstract(this.introspectedClass.getModifiers());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#isAbstract()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isAbstract()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isFinal()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isFinal() {\r\n    return Modifier.isFinal(this.introspectedClass.getModifiers());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#isFinal()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isFinal()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isIndependent()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isIndependent() {\r\n    return (!hasEnclosingClass() || (this.introspectedClass.getDeclaringClass() != null && Modifier.isStatic(this.introspectedClass.getModifiers())));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#isIndependent()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#isIndependent()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getEnclosingClassName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic String getEnclosingClassName() {\r\n    Class<?> enclosingClass = this.introspectedClass.getEnclosingClass();\r\n    return (enclosingClass != null ? enclosingClass.getName() : null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#getEnclosingClassName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getEnclosingClassName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getEnclosingClassName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  }
]