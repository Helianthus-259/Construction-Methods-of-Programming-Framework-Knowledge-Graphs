[
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getSuperClassName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic String getSuperClassName() {\r\n    Class<?> superClass = this.introspectedClass.getSuperclass();\r\n    return (superClass != null ? superClass.getName() : null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#getSuperClassName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getSuperClassName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getSuperClassName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getInterfaceNames()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String[] getInterfaceNames() {\r\n    Class<?>[] ifcs = this.introspectedClass.getInterfaces();\r\n    String[] ifcNames = new String[ifcs.length];\r\n    for (int i = 0; i < ifcs.length; i++) {\r\n        ifcNames[i] = ifcs[i].getName();\r\n    }\r\n    return ifcNames;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#getInterfaceNames()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getInterfaceNames()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getMemberClassNames()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String[] getMemberClassNames() {\r\n    LinkedHashSet<String> memberClassNames = new LinkedHashSet<>(4);\r\n    for (Class<?> nestedClass : this.introspectedClass.getDeclaredClasses()) {\r\n        memberClassNames.add(nestedClass.getName());\r\n    }\r\n    return StringUtils.toStringArray(memberClassNames);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#getMemberClassNames()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#getMemberClassNames()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean equals(@Nullable Object other) {\r\n    return (this == other || (other instanceof StandardClassMetadata that && getIntrospectedClass().equals(that.getIntrospectedClass())));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#equals(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#equals(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#hashCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int hashCode() {\r\n    return getIntrospectedClass().hashCode();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#hashCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#hashCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#toString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString() {\r\n    return getClassName();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardClassMetadata#toString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardClassMetadata#toString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.type",
    "tailType": "package"
  }
]