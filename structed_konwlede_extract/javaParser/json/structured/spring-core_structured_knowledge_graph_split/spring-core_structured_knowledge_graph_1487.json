[
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWithOnlyGeneratedFilesCreatesContext()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createCreatesContext()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createCreatesContext() {\r\n    DefaultGenerationContext context = new DefaultGenerationContext(this.generatedClasses, this.generatedFiles, this.runtimeHints);\r\n    assertThat(context.getGeneratedFiles()).isNotNull();\r\n    assertThat(context.getRuntimeHints()).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.DefaultGenerationContextTests#createCreatesContext()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createCreatesContext()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenGeneratedClassesIsNullThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createWhenGeneratedClassesIsNullThrowsException() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> new DefaultGenerationContext((GeneratedClasses) null, this.generatedFiles, this.runtimeHints)).withMessage(\"'generatedClasses' must not be null\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenGeneratedClassesIsNullThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenGeneratedClassesIsNullThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenGeneratedFilesIsNullThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createWhenGeneratedFilesIsNullThrowsException() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> new DefaultGenerationContext(this.generatedClasses, null, this.runtimeHints)).withMessage(\"'generatedFiles' must not be null\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenGeneratedFilesIsNullThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenGeneratedFilesIsNullThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenRuntimeHintsIsNullThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid createWhenRuntimeHintsIsNullThrowsException() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> new DefaultGenerationContext(this.generatedClasses, this.generatedFiles, null)).withMessage(\"'runtimeHints' must not be null\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenRuntimeHintsIsNullThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#createWhenRuntimeHintsIsNullThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#getGeneratedClassesReturnsClassNameGenerator()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getGeneratedClassesReturnsClassNameGenerator() {\r\n    DefaultGenerationContext context = new DefaultGenerationContext(this.generatedClasses, this.generatedFiles, this.runtimeHints);\r\n    assertThat(context.getGeneratedClasses()).isSameAs(this.generatedClasses);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.DefaultGenerationContextTests#getGeneratedClassesReturnsClassNameGenerator()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#getGeneratedClassesReturnsClassNameGenerator()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#getGeneratedFilesReturnsGeneratedFiles()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getGeneratedFilesReturnsGeneratedFiles() {\r\n    DefaultGenerationContext context = new DefaultGenerationContext(this.generatedClasses, this.generatedFiles, this.runtimeHints);\r\n    assertThat(context.getGeneratedFiles()).isSameAs(this.generatedFiles);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.DefaultGenerationContextTests#getGeneratedFilesReturnsGeneratedFiles()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#getGeneratedFilesReturnsGeneratedFiles()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.DefaultGenerationContextTests#getRuntimeHintsReturnsRuntimeHints()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getRuntimeHintsReturnsRuntimeHints() {\r\n    DefaultGenerationContext context = new DefaultGenerationContext(this.generatedClasses, this.generatedFiles, this.runtimeHints);\r\n    assertThat(context.getRuntimeHints()).isSameAs(this.runtimeHints);\r\n}",
    "tailType": "method_code"
  }
]