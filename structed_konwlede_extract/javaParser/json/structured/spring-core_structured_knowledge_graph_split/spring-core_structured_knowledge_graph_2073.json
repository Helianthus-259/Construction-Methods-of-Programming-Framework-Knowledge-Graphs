[
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyUnspecifiedReturnTypeWithMethodParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedReturnTypeWithMethodParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableReturnTypeWithMethodParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNullableReturnTypeWithMethodParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"nullableProcess\");\r\n    var methodParameter = MethodParameter.forExecutable(method, -1);\r\n    var nullness = Nullness.forMethodParameter(methodParameter);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNullableReturnTypeWithMethodParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableReturnTypeWithMethodParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullReturnTypeWithMethodParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNonNullReturnTypeWithMethodParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"nonNullProcess\");\r\n    var methodParameter = MethodParameter.forExecutable(method, -1);\r\n    var nullness = Nullness.forMethodParameter(methodParameter);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNonNullReturnTypeWithMethodParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullReturnTypeWithMethodParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedParameterWithMethodParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyUnspecifiedParameterWithMethodParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var methodParameter = MethodParameter.forExecutable(method, 0);\r\n    var nullness = Nullness.forMethodParameter(methodParameter);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyUnspecifiedParameterWithMethodParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedParameterWithMethodParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableParameterWithMethodParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNullableParameterWithMethodParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var methodParameter = MethodParameter.forExecutable(method, 1);\r\n    var nullness = Nullness.forMethodParameter(methodParameter);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNullableParameterWithMethodParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNullableParameterWithMethodParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullParameterWithMethodParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyNonNullParameterWithMethodParameter() throws NoSuchMethodException {\r\n    var method = JSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var methodParameter = MethodParameter.forExecutable(method, 2);\r\n    var nullness = Nullness.forMethodParameter(methodParameter);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyNonNullParameterWithMethodParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyNonNullParameterWithMethodParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedWithField()",
    "headType": "method",
    "relation": "provide",
    "tail": "// JSpecify with Field without @NullMarked and @NullUnmarked\r\n@Test\r\nvoid jspecifyUnspecifiedWithField() throws NoSuchFieldException {\r\n    var field = NullnessFields.class.getDeclaredField(\"unannotatedField\");\r\n    var nullness = Nullness.forField(field);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyUnspecifiedWithField()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyUnspecifiedWithField()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]