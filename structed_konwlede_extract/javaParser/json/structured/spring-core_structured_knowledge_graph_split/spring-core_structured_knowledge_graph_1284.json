[
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#MAXIMUM_CONCURRENCY_LEVEL",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#MAXIMUM_CONCURRENCY_LEVEL",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#MAXIMUM_SEGMENT_SIZE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#MAXIMUM_SEGMENT_SIZE",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#segments",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#segments",
    "headType": "field",
    "relation": "haveType",
    "tail": "Segment",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#loadFactor",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#loadFactor",
    "headType": "field",
    "relation": "haveType",
    "tail": "float",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#referenceType",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#referenceType",
    "headType": "field",
    "relation": "haveType",
    "tail": "ReferenceType",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#shift",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#shift",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#entrySet",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#entrySet",
    "headType": "field",
    "relation": "haveType",
    "tail": "Set<Map.Entry<K, V>>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#getLoadFactor()",
    "headType": "method",
    "relation": "provide",
    "tail": "protected final float getLoadFactor() {\r\n    return this.loadFactor;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#getLoadFactor()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#getSegmentsSize()",
    "headType": "method",
    "relation": "provide",
    "tail": "protected final int getSegmentsSize() {\r\n    return this.segments.length;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#getSegmentsSize()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap#getSegment(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "protected final Segment getSegment(int index) {\r\n    return this.segments[index];\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ConcurrentReferenceHashMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ConcurrentReferenceHashMap#getSegment(int)",
    "tailType": "method"
  }
]