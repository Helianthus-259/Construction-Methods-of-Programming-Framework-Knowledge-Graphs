[
  {
    "head": "org.springframework.util.AssertTests#stateWithMessage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stateWithMessage() {\r\n    Assert.state(true, \"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#stateWithMessage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithMessage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithFalseExpressionAndMessage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stateWithFalseExpressionAndMessage() {\r\n    assertThatIllegalStateException().isThrownBy(() -> Assert.state(false, \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#stateWithFalseExpressionAndMessage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithFalseExpressionAndMessage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stateWithMessageSupplier() {\r\n    Assert.state(true, () -> \"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#stateWithMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithFalseExpressionAndMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stateWithFalseExpressionAndMessageSupplier() {\r\n    assertThatIllegalStateException().isThrownBy(() -> Assert.state(false, () -> \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#stateWithFalseExpressionAndMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithFalseExpressionAndMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithFalseExpressionAndNullMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stateWithFalseExpressionAndNullMessageSupplier() {\r\n    assertThatIllegalStateException().isThrownBy(() -> Assert.state(false, (Supplier<String>) null)).withMessage(null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#stateWithFalseExpressionAndNullMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#stateWithFalseExpressionAndNullMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#isTrueWithMessage()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isTrueWithMessage() {\r\n    Assert.isTrue(true, \"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#isTrueWithMessage()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#isTrueWithMessage()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#isTrueWithFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isTrueWithFalse() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.isTrue(false, \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#isTrueWithFalse()",
    "tailType": "method"
  }
]