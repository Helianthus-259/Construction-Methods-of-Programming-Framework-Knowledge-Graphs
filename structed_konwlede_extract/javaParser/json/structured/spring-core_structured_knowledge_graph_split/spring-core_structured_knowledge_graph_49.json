[
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#trackOriginalTestGroups()",
    "headType": "method",
    "relation": "use",
    "tail": "@BeforeEach",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#restoreOriginalTestGroups()",
    "headType": "method",
    "relation": "provide",
    "tail": "@AfterEach\r\nvoid restoreOriginalTestGroups() {\r\n    setTestGroups(Objects.requireNonNullElse(this.originalTestGroups, \"\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#restoreOriginalTestGroups()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#restoreOriginalTestGroups()",
    "headType": "method",
    "relation": "use",
    "tail": "@AfterEach",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithNoActiveTestGroups()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid assumeGroupWithNoActiveTestGroups() {\r\n    setTestGroups(\"\");\r\n    assertThatExceptionOfType(TestAbortedException.class).isThrownBy(() -> assumeGroup(LONG_RUNNING));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithNoActiveTestGroups()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithNoActiveTestGroups()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithMatchingActiveTestGroup()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid assumeGroupWithMatchingActiveTestGroup() {\r\n    setTestGroups(LONG_RUNNING);\r\n    assertThatCode(() -> assumeGroup(LONG_RUNNING)).as(\"assumption should NOT have failed\").doesNotThrowAnyException();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithMatchingActiveTestGroup()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithMatchingActiveTestGroup()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithBogusActiveTestGroup()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid assumeGroupWithBogusActiveTestGroup() {\r\n    assertBogusActiveTestGroupBehavior(\"bogus\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithBogusActiveTestGroup()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithBogusActiveTestGroup()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithAllMinusBogusActiveTestGroup()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid assumeGroupWithAllMinusBogusActiveTestGroup() {\r\n    assertBogusActiveTestGroupBehavior(\"all-bogus\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithAllMinusBogusActiveTestGroup()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assumeGroupWithAllMinusBogusActiveTestGroup()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#assertBogusActiveTestGroupBehavior(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void assertBogusActiveTestGroupBehavior(String testGroups) {\r\n    // Should result in something similar to the following:\r\n    //\r\n    // java.lang.IllegalStateException: Failed to parse 'testGroups' system property:\r\n    // Unable to find test group 'bogus' when parsing testGroups value: 'all-bogus'.\r\n    // Available groups include: [LONG_RUNNING,PERFORMANCE]\r\n    setTestGroups(testGroups);\r\n    assertThatIllegalStateException().isThrownBy(() -> assumeGroup(LONG_RUNNING)).withMessageStartingWith(\"Failed to parse '\" + TEST_GROUPS_SYSTEM_PROPERTY + \"' system property: \").havingCause().isInstanceOf(IllegalArgumentException.class).withMessage(\"Unable to find test group 'bogus' when parsing testGroups value: '\" + testGroups + \"'. Available groups include: [LONG_RUNNING]\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#assertBogusActiveTestGroupBehavior(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests#setTestGroups(TestGroup)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void setTestGroups(TestGroup... testGroups) {\r\n    setTestGroups(Arrays.stream(testGroups).map(TestGroup::name).collect(joining(\", \")));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupTests#setTestGroups(TestGroup)",
    "tailType": "method"
  }
]