[
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#getNamespaces(Map<String,String>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#getAttributes(Attributes)",
    "headType": "method",
    "relation": "provide",
    "tail": "private List<Attribute> getAttributes(Attributes attributes) {\r\n    int attrLength = attributes.getLength();\r\n    List<Attribute> result = new ArrayList<>(attrLength);\r\n    for (int i = 0; i < attrLength; i++) {\r\n        QName attrName = toQName(attributes.getURI(i), attributes.getQName(i));\r\n        if (!isNamespaceDeclaration(attrName)) {\r\n            result.add(this.eventFactory.createAttribute(attrName, attributes.getValue(i)));\r\n        }\r\n    }\r\n    return result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#getAttributes(Attributes)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#endElementInternal(QName,Map<String,String>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void endElementInternal(QName name, Map<String, String> namespaceMapping) throws XMLStreamException {\r\n    List<Namespace> namespaces = getNamespaces(namespaceMapping);\r\n    this.eventWriter.add(this.eventFactory.createEndElement(name, namespaces.iterator()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#endElementInternal(QName,Map<String,String>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#endElementInternal(QName,Map<String,String>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#charactersInternal(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void charactersInternal(String data) throws XMLStreamException {\r\n    this.eventWriter.add(this.eventFactory.createCharacters(data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#charactersInternal(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#charactersInternal(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#cDataInternal(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void cDataInternal(String data) throws XMLStreamException {\r\n    this.eventWriter.add(this.eventFactory.createCData(data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#cDataInternal(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#cDataInternal(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#ignorableWhitespaceInternal(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void ignorableWhitespaceInternal(String data) throws XMLStreamException {\r\n    this.eventWriter.add(this.eventFactory.createIgnorableSpace(data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#ignorableWhitespaceInternal(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#ignorableWhitespaceInternal(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#processingInstructionInternal(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void processingInstructionInternal(String target, String data) throws XMLStreamException {\r\n    this.eventWriter.add(this.eventFactory.createProcessingInstruction(target, data));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#processingInstructionInternal(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#processingInstructionInternal(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler#dtdInternal(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void dtdInternal(String dtd) throws XMLStreamException {\r\n    this.eventWriter.add(this.eventFactory.createDTD(dtd));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxEventHandler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxEventHandler#dtdInternal(String)",
    "tailType": "method"
  }
]