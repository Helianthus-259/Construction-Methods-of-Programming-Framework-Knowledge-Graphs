[
  {
    "head": "org.springframework.util.CompositeCollection#toArray(T[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#add(E)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean add(E e) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeCollection",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeCollection#add(E)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeCollection#add(E)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#remove(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean remove(Object o) {\r\n    boolean firstResult = this.first.remove(o);\r\n    boolean secondResult = this.second.remove(o);\r\n    return firstResult || secondResult;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeCollection",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeCollection#remove(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeCollection#remove(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#containsAll(Collection<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean containsAll(Collection<?> c) {\r\n    for (Object o : c) {\r\n        if (!contains(o)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeCollection",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeCollection#containsAll(Collection<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeCollection#containsAll(Collection<?>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#addAll(Collection<? extends E>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean addAll(Collection<? extends E> c) {\r\n    boolean changed = false;\r\n    for (E e : c) {\r\n        if (add(e)) {\r\n            changed = true;\r\n        }\r\n    }\r\n    return changed;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeCollection",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeCollection#addAll(Collection<? extends E>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeCollection#addAll(Collection<? extends E>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#removeAll(Collection<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean removeAll(Collection<?> c) {\r\n    if (c.isEmpty()) {\r\n        return false;\r\n    }\r\n    boolean firstResult = this.first.removeAll(c);\r\n    boolean secondResult = this.second.removeAll(c);\r\n    return firstResult || secondResult;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeCollection",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeCollection#removeAll(Collection<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeCollection#removeAll(Collection<?>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#retainAll(Collection<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean retainAll(Collection<?> c) {\r\n    boolean firstResult = this.first.retainAll(c);\r\n    boolean secondResult = this.second.retainAll(c);\r\n    return firstResult || secondResult;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.CompositeCollection",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.CompositeCollection#retainAll(Collection<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.CompositeCollection#retainAll(Collection<?>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.CompositeCollection#clear()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void clear() {\r\n    this.first.clear();\r\n    this.second.clear();\r\n}",
    "tailType": "method_code"
  }
]