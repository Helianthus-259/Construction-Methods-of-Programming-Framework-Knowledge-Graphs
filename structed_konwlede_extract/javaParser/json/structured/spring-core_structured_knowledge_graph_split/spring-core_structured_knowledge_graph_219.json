[
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#reset()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid reset() throws Exception {\r\n    this.os.write(this.helloBytes);\r\n    assertByteArrayEqualsString(this.os);\r\n    this.os.reset();\r\n    assertThat(this.os.size()).isEqualTo(0);\r\n    this.os.write(this.helloBytes);\r\n    assertByteArrayEqualsString(this.os);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#reset()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#reset()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#close()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid close() {\r\n    this.os.close();\r\n    assertThatIOException().isThrownBy(() -> this.os.write(this.helloBytes));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#close()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#close()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#toByteArrayUnsafe()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid toByteArrayUnsafe() throws Exception {\r\n    this.os.write(this.helloBytes);\r\n    assertByteArrayEqualsString(this.os);\r\n    assertThat(this.os.toByteArrayUnsafe()).isSameAs(this.os.toByteArrayUnsafe());\r\n    assertThat(this.helloBytes).isEqualTo(this.os.toByteArray());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#toByteArrayUnsafe()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#toByteArrayUnsafe()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#writeTo()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid writeTo() throws Exception {\r\n    this.os.write(this.helloBytes);\r\n    assertByteArrayEqualsString(this.os);\r\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n    this.os.writeTo(baos);\r\n    assertThat(this.helloBytes).isEqualTo(baos.toByteArray());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#writeTo()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#writeTo()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#failResize()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid failResize() throws Exception {\r\n    this.os.write(this.helloBytes);\r\n    assertThatIllegalArgumentException().isThrownBy(() -> this.os.resize(5)).withMessage(\"New capacity must not be smaller than current size\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#failResize()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#failResize()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#getInputStream()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getInputStream() throws Exception {\r\n    this.os.write(this.helloBytes);\r\n    assertThat(this.os.getInputStream()).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#getInputStream()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#getInputStream()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests#getInputStreamAvailable()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getInputStreamAvailable() throws Exception {\r\n    this.os.write(this.helloBytes);\r\n    assertThat(this.helloBytes).hasSize(this.os.getInputStream().available());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.FastByteArrayOutputStreamTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.FastByteArrayOutputStreamTests#getInputStreamAvailable()",
    "tailType": "method"
  }
]