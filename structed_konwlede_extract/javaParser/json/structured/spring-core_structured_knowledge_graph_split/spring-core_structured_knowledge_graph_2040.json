[
  {
    "head": "org.springframework.core.io.support.ConstructorArgsDummyFactory#getString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String getString() {\r\n    return this.string;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.support.ConstructorArgsDummyFactory",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.support.ConstructorArgsDummyFactory#getString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.support.ConstructorArgsDummyFactory#getString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.io.support",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.io.support",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.io.support.DummyFactory",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.io.support.DummyFactory",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2012 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.io.support;\n\n/**\n * Used by {@link SpringFactoriesLoaderTests}\n *\n * @author Arjen Poutsma\n */\npublic interface DummyFactory {\n\n\tString getString();\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.io.support.DummyFactory#getString()",
    "headType": "method",
    "relation": "provide",
    "tail": "String getString();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.support.DummyFactory",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.support.DummyFactory#getString()",
    "tailType": "method"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.io.support",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.io.support",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.io.support.DummyPackagePrivateFactory",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.io.support.DummyPackagePrivateFactory",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.io.support;\n\n/**\n * Used by {@link SpringFactoriesLoaderTests}\n\n * @author Phillip Webb\n */\nclass DummyPackagePrivateFactory {\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.io.support",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.io.support",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.io.support.EncodedResourceTests",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2024 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.io.support;\n\nimport java.nio.charset.Charset;\nimport java.nio.charset.StandardCharsets;\n\nimport org.junit.jupiter.api.Test;\n\nimport org.springframework.core.io.DescriptiveResource;\nimport org.springframework.core.io.Resource;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n/**\n * Tests for {@link EncodedResource}.\n *\n * @author Sam Brannen\n * @since 3.2.14\n */\nclass EncodedResourceTests {\n\n\tprivate static final String UTF8 = \"UTF-8\";\n\tprivate static final String UTF16 = \"UTF-16\";\n\tprivate static final Charset UTF8_CS = StandardCharsets.UTF_8;\n\tprivate static final Charset UTF16_CS = StandardCharsets.UTF_16;\n\n\tprivate final Resource resource = new DescriptiveResource(\"test\");\n\n\n\t@Test\n\tvoid equalsWithNullOtherObject() {\n\t\tassertThat(new EncodedResource(resource)).isNotEqualTo(null);\n\t}\n\n\t@Test\n\tvoid equalsWithSameEncoding() {\n\t\tEncodedResource er1 = new EncodedResource(resource, UTF8);\n\t\tEncodedResource er2 = new EncodedResource(resource, UTF8);\n\t\tassertThat(er2).isEqualTo(er1);\n\t}\n\n\t@Test\n\tvoid equalsWithDifferentEncoding() {\n\t\tEncodedResource er1 = new EncodedResource(resource, UTF8);\n\t\tEncodedResource er2 = new EncodedResource(resource, UTF16);\n\t\tassertThat(er2).isNotEqualTo(er1);\n\t}\n\n\t@Test\n\tvoid equalsWithSameCharset() {\n\t\tEncodedResource er1 = new EncodedResource(resource, UTF8_CS);\n\t\tEncodedResource er2 = new EncodedResource(resource, UTF8_CS);\n\t\tassertThat(er2).isEqualTo(er1);\n\t}\n\n\t@Test\n\tvoid equalsWithDifferentCharset() {\n\t\tEncodedResource er1 = new EncodedResource(resource, UTF8_CS);\n\t\tEncodedResource er2 = new EncodedResource(resource, UTF16_CS);\n\t\tassertThat(er2).isNotEqualTo(er1);\n\t}\n\n\t@Test\n\tvoid equalsWithEncodingAndCharset() {\n\t\tEncodedResource er1 = new EncodedResource(resource, UTF8);\n\t\tEncodedResource er2 = new EncodedResource(resource, UTF8_CS);\n\t\tassertThat(er2).isNotEqualTo(er1);\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.support.EncodedResourceTests#UTF8",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests#UTF8",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.support.EncodedResourceTests#UTF16",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests#UTF16",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.support.EncodedResourceTests#UTF8_CS",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.support.EncodedResourceTests#UTF8_CS",
    "headType": "field",
    "relation": "haveType",
    "tail": "Charset",
    "tailType": "type"
  }
]