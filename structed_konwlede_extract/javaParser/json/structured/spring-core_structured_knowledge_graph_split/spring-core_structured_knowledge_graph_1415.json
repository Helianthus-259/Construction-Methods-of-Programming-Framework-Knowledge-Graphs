[
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#isEmpty()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isEmpty() {\r\n    return this.delegate.isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#isEmpty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#isEmpty()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#contains(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean contains(Object o) {\r\n    return this.delegate.contains(o);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#contains(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#contains(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#containsAll(Collection<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean containsAll(Collection<?> c) {\r\n    return this.delegate.containsAll(c);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#containsAll(Collection<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#containsAll(Collection<?>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#iterator()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Iterator<Entry<K, List<V>>> iterator() {\r\n    Iterator<? extends Entry<? extends K, ? extends List<? extends V>>> iterator = this.delegate.iterator();\r\n    return new Iterator<>() {\r\n\r\n        @Override\r\n        public boolean hasNext() {\r\n            return iterator.hasNext();\r\n        }\r\n\r\n        @Override\r\n        public Entry<K, List<V>> next() {\r\n            return new UnmodifiableEntry<>(iterator.next());\r\n        }\r\n    };\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#iterator()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#iterator()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#toArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Object[] toArray() {\r\n    Object[] result = this.delegate.toArray();\r\n    filterArray(result);\r\n    return result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#toArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#toArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#toArray(T[])",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <T> T[] toArray(T[] a) {\r\n    T[] result = this.delegate.toArray(a);\r\n    filterArray(result);\r\n    return result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#toArray(T[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#toArray(T[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet#filterArray(Object[])",
    "headType": "method",
    "relation": "provide",
    "tail": "@SuppressWarnings(\"unchecked\")\r\nprivate void filterArray(Object[] result) {\r\n    for (int i = 0; i < result.length; i++) {\r\n        if (result[i] instanceof Map.Entry<?, ?> entry) {\r\n            result[i] = new UnmodifiableEntry<>((Entry<K, List<V>>) entry);\r\n        }\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.UnmodifiableEntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.UnmodifiableEntrySet#filterArray(Object[])",
    "tailType": "method"
  }
]