[
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#out",
    "headType": "field",
    "relation": "haveType",
    "tail": "Writer",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.nativex.IndentingWriter#singleIndent",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#singleIndent",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.nativex.IndentingWriter#level",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#level",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.nativex.IndentingWriter#currentIndent",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#currentIndent",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.nativex.IndentingWriter#prependIndent",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#prependIndent",
    "headType": "field",
    "relation": "haveType",
    "tail": "boolean",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#print(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Write the specified text.\r\n * @param string the content to write\r\n */\r\npublic IndentingWriter print(String string) {\r\n    write(string.toCharArray(), 0, string.length());\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.IndentingWriter#print(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#println(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Write the specified text and append a new line.\r\n * @param string the content to write\r\n */\r\npublic IndentingWriter println(String string) {\r\n    write(string.toCharArray(), 0, string.length());\r\n    return println();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.IndentingWriter#println(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#println()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Write a new line.\r\n */\r\npublic IndentingWriter println() {\r\n    String separator = System.lineSeparator();\r\n    try {\r\n        this.out.write(separator.toCharArray(), 0, separator.length());\r\n    } catch (IOException ex) {\r\n        throw new IllegalStateException(ex);\r\n    }\r\n    this.prependIndent = true;\r\n    return this;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.IndentingWriter#println()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#indented(Runnable)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Increase the indentation level and execute the {@link Runnable}. Decrease the\r\n * indentation level on completion.\r\n * @param runnable the code to execute within an extra indentation level\r\n */\r\npublic IndentingWriter indented(Runnable runnable) {\r\n    indent();\r\n    runnable.run();\r\n    return outdent();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.IndentingWriter#indented(Runnable)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#indent()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Increase the indentation level.\r\n */\r\nprivate IndentingWriter indent() {\r\n    this.level++;\r\n    return refreshIndent();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.nativex.IndentingWriter#indent()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.nativex.IndentingWriter#outdent()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Decrease the indentation level.\r\n */\r\nprivate IndentingWriter outdent() {\r\n    this.level--;\r\n    return refreshIndent();\r\n}",
    "tailType": "method_code"
  }
]