[
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withRepeatedOptionAndSameValues()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withRepeatedOptionAndSameValues()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withRepeatedOptionAndDifferentValues()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withRepeatedOptionAndDifferentValues() {\r\n    CommandLineArgs args = parser.parse(\"--o1=v1\", \"--o1=v2\", \"--o1=v3\");\r\n    assertThat(args.containsOption(\"o1\")).isTrue();\r\n    assertThat(args.getOptionValues(\"o1\")).containsExactly(\"v1\", \"v2\", \"v3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withRepeatedOptionAndDifferentValues()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withRepeatedOptionAndDifferentValues()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withMixOfOptionsHavingValueAndOptionsHavingNoValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withMixOfOptionsHavingValueAndOptionsHavingNoValue() {\r\n    CommandLineArgs args = parser.parse(\"--o1=v1\", \"--o2\");\r\n    assertThat(args.containsOption(\"o1\")).isTrue();\r\n    assertThat(args.containsOption(\"o2\")).isTrue();\r\n    assertThat(args.containsOption(\"o3\")).isFalse();\r\n    assertThat(args.getOptionValues(\"o1\")).containsExactly(\"v1\");\r\n    assertThat(args.getOptionValues(\"o2\")).isEqualTo(Collections.EMPTY_LIST);\r\n    assertThat(args.getOptionValues(\"o3\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withMixOfOptionsHavingValueAndOptionsHavingNoValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withMixOfOptionsHavingValueAndOptionsHavingNoValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionName()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withEmptyOptionName() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> parser.parse(\"--=v1\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionName()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withEmptyOptionValue() {\r\n    CommandLineArgs args = parser.parse(\"--o1=\");\r\n    assertThat(args.containsOption(\"o1\")).isTrue();\r\n    assertThat(args.getOptionValues(\"o1\")).containsExactly(\"\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionNameAndEmptyOptionValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withEmptyOptionNameAndEmptyOptionValue() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> parser.parse(\"--=\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionNameAndEmptyOptionValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withEmptyOptionNameAndEmptyOptionValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withNonOptionArguments()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid withNonOptionArguments() {\r\n    CommandLineArgs args = parser.parse(\"--o1=v1\", \"noa1\", \"--o2=v2\", \"noa2\");\r\n    assertThat(args.getOptionValues(\"o1\")).containsExactly(\"v1\");\r\n    assertThat(args.getOptionValues(\"o2\")).containsExactly(\"v2\");\r\n    List<String> nonOptions = args.getNonOptionArgs();\r\n    assertThat(nonOptions).containsExactly(\"noa1\", \"noa2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withNonOptionArguments()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.SimpleCommandLineArgsParserTests#withNonOptionArguments()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]