[
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseNull()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseNull()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseEmptyString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseEmptyString() {\r\n    assertThat(TestGroup.parse(\"\")).isEqualTo(Collections.emptySet());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseEmptyString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseEmptyString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseBlankString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseBlankString() {\r\n    assertThat(TestGroup.parse(\"     \")).isEqualTo(Collections.emptySet());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseBlankString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseBlankString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseWithSpaces()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseWithSpaces() {\r\n    assertThat(TestGroup.parse(\" LONG_RUNNING,  LONG_RUNNING \")).containsOnly(TestGroup.LONG_RUNNING);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseWithSpaces()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseWithSpaces()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseInMixedCase()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseInMixedCase() {\r\n    assertThat(TestGroup.parse(\"long_running,  LonG_RunnING\")).containsOnly(TestGroup.LONG_RUNNING);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseInMixedCase()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseInMixedCase()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseMissing()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseMissing() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> TestGroup.parse(\"long_running, missing\")).withMessageContaining(\"Unable to find test group 'missing' when parsing \" + \"testGroups value: 'long_running, missing'. Available groups include: \" + \"[LONG_RUNNING]\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseMissing()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseMissing()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseAll()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseAll() {\r\n    assertThat(TestGroup.parse(\"all\")).isEqualTo(EnumSet.allOf(TestGroup.class));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.testfixture.TestGroupParsingTests#parseAll()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.testfixture.TestGroupParsingTests#parseAll()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]