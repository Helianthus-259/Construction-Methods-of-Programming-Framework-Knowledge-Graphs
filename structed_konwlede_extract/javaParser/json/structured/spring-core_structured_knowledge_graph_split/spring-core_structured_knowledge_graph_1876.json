[
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#currencyToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid currencyToString() {\r\n    assertThat(conversionService.convert(Currency.getInstance(\"USD\"), String.class)).isEqualTo(\"USD\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#currencyToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#currencyToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToString() {\r\n    String str = \"test\";\r\n    assertThat(conversionService.convert(str, String.class)).isSameAs(str);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#uuidToStringAndStringToUuid()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid uuidToStringAndStringToUuid() {\r\n    UUID uuid = UUID.randomUUID();\r\n    String convertToString = conversionService.convert(uuid, String.class);\r\n    UUID convertToUUID = conversionService.convert(convertToString, UUID.class);\r\n    assertThat(convertToUUID).isEqualTo(uuid);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#uuidToStringAndStringToUuid()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#uuidToStringAndStringToUuid()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToPatternEmptyString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToPatternEmptyString() {\r\n    assertThat(conversionService.convert(\"\", Pattern.class)).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToPatternEmptyString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToPatternEmptyString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToPattern()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid stringToPattern() {\r\n    String pattern = \"\\\\s\";\r\n    assertThat(conversionService.convert(pattern, Pattern.class)).isInstanceOfSatisfying(Pattern.class, regex -> assertThat(regex.pattern()).isEqualTo(pattern));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToPattern()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#stringToPattern()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#patternToString()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid patternToString() {\r\n    String regex = \"\\\\d\";\r\n    assertThat(conversionService.convert(Pattern.compile(regex), String.class)).isEqualTo(regex);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#patternToString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#patternToString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests#numberToNumber()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid numberToNumber() {\r\n    assertThat(conversionService.convert(1, Long.class)).isEqualTo(Long.valueOf(1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.convert.converter.DefaultConversionServiceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.convert.converter.DefaultConversionServiceTests#numberToNumber()",
    "tailType": "method"
  }
]