[
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.style.ToStringCreatorTests#s1",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#s1",
    "headType": "field",
    "relation": "haveType",
    "tail": "SomeObject",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.style.ToStringCreatorTests#s2",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#s2",
    "headType": "field",
    "relation": "haveType",
    "tail": "SomeObject",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.style.ToStringCreatorTests#s3",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#s3",
    "headType": "field",
    "relation": "haveType",
    "tail": "SomeObject",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#primitiveArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid primitiveArray() {\r\n    int[] integers = { 0, 1, 2, 3, 4 };\r\n    String str = new ToStringCreator(integers).toString();\r\n    assertThat(str).isEqualTo(\"[@%s array<Integer>[0, 1, 2, 3, 4]]\", ObjectUtils.getIdentityHexString(integers));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringCreatorTests#primitiveArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#primitiveArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#objectArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid objectArray() {\r\n    SomeObject[] array = new SomeObject[] { s1, s2, s3 };\r\n    String str = new ToStringCreator(array).toString();\r\n    assertThat(str).isEqualTo(\"[@%s array<ToStringCreatorTests.SomeObject>[A, B, C]]\", ObjectUtils.getIdentityHexString(array));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringCreatorTests#objectArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#objectArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#appendTopLevelClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid appendTopLevelClass() {\r\n    SomeObject object = new SomeObject();\r\n    String str = new ToStringCreator(object).append(\"myClass\", Integer.class).toString();\r\n    assertThat(str).isEqualTo(\"[ToStringCreatorTests.SomeObject@%s myClass = Integer]\", ObjectUtils.getIdentityHexString(object));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringCreatorTests#appendTopLevelClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#appendTopLevelClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#appendNestedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid appendNestedClass() {\r\n    SomeObject object = new SomeObject();\r\n    String str = new ToStringCreator(object).append(\"myClass\", object.getClass()).toString();\r\n    assertThat(str).isEqualTo(\"[ToStringCreatorTests.SomeObject@%s myClass = ToStringCreatorTests.SomeObject]\", ObjectUtils.getIdentityHexString(object));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringCreatorTests#appendNestedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#appendNestedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests#appendTopLevelMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid appendTopLevelMethod() throws Exception {\r\n    SomeObject object = new SomeObject();\r\n    String str = new ToStringCreator(object).append(\"myMethod\", ToStringCreatorTests.class.getDeclaredMethod(\"someMethod\")).toString();\r\n    assertThat(str).isEqualTo(\"[ToStringCreatorTests.SomeObject@%s myMethod = someMethod@ToStringCreatorTests]\", ObjectUtils.getIdentityHexString(object));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringCreatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringCreatorTests#appendTopLevelMethod()",
    "tailType": "method"
  }
]