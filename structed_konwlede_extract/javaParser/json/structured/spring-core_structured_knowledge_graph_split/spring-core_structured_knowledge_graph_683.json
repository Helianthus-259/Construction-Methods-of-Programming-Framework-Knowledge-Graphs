[
  {
    "head": "org.springframework.cglib.reflect.Generator#MULTICAST_DELEGATE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Type",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.Generator#NEW_INSTANCE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#NEW_INSTANCE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Signature",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.Generator#ADD_DELEGATE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#ADD_DELEGATE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Signature",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.Generator#ADD_HELPER",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#ADD_HELPER",
    "headType": "field",
    "relation": "haveType",
    "tail": "Signature",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.reflect.Generator#iface",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#iface",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected ClassLoader getDefaultClassLoader() {\r\n    return iface.getClassLoader();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected ProtectionDomain getProtectionDomain() {\r\n    return ReflectUtils.getProtectionDomain(iface);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
    "headType": "method",
    "relation": "provide",
    "tail": "public void setInterface(Class iface) {\r\n    this.iface = iface;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#create()",
    "headType": "method",
    "relation": "provide",
    "tail": "public MulticastDelegate create() {\r\n    setNamePrefix(MulticastDelegate.class.getName());\r\n    return (MulticastDelegate) super.create(iface.getName());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.reflect.Generator#create()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void generateClass(ClassVisitor cv) {\r\n    final MethodInfo method = ReflectUtils.getMethodInfo(ReflectUtils.findInterfaceMethod(iface));\r\n    ClassEmitter ce = new ClassEmitter(cv);\r\n    ce.begin_class(Constants.V1_8, Constants.ACC_PUBLIC, getClassName(), MULTICAST_DELEGATE, new Type[] { Type.getType(iface) }, Constants.SOURCE_FILE);\r\n    EmitUtils.null_constructor(ce);\r\n    // generate proxied method\r\n    emitProxy(ce, method);\r\n    // newInstance\r\n    CodeEmitter e = ce.begin_method(Constants.ACC_PUBLIC, NEW_INSTANCE, null);\r\n    e.new_instance_this();\r\n    e.dup();\r\n    e.invoke_constructor_this();\r\n    e.return_value();\r\n    e.end_method();\r\n    // add\r\n    e = ce.begin_method(Constants.ACC_PUBLIC, ADD_DELEGATE, null);\r\n    e.load_this();\r\n    e.load_arg(0);\r\n    e.checkcast(Type.getType(iface));\r\n    e.invoke_virtual_this(ADD_HELPER);\r\n    e.return_value();\r\n    e.end_method();\r\n    ce.end_class();\r\n}",
    "tailType": "method_code"
  }
]