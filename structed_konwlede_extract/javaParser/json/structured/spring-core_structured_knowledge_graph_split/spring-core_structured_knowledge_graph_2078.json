[
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNonNullReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedUnspecifiedParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyPackageUnmarkedUnspecifiedParameter() throws NoSuchMethodException {\r\n    var method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[0]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.UNSPECIFIED);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedUnspecifiedParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedUnspecifiedParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNullableParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyPackageUnmarkedNullableParameter() throws NoSuchMethodException {\r\n    var method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[1]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNullableParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNullableParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNonNullParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid jspecifyPackageUnmarkedNonNullParameter() throws NoSuchMethodException {\r\n    var method = PackageUnmarkedJSpecifyProcessor.class.getMethod(\"process\", String.class, String.class, String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[2]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNonNullParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#jspecifyPackageUnmarkedNonNullParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#customNullableReturnType()",
    "headType": "method",
    "relation": "provide",
    "tail": "// Custom @Nullable\r\n@Test\r\nvoid customNullableReturnType() throws NoSuchMethodException {\r\n    var method = CustomNullableProcessor.class.getMethod(\"process\", String.class);\r\n    var nullness = Nullness.forMethodReturnType(method);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#customNullableReturnType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#customNullableReturnType()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#customNullableParameter()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid customNullableParameter() throws NoSuchMethodException {\r\n    var method = CustomNullableProcessor.class.getMethod(\"process\", String.class);\r\n    var nullness = Nullness.forParameter(method.getParameters()[0]);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#customNullableParameter()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#customNullableParameter()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#customNullableField()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid customNullableField() throws NoSuchFieldException {\r\n    var field = NullnessFields.class.getDeclaredField(\"customNullableField\");\r\n    var nullness = Nullness.forField(field);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NULLABLE);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.NullnessTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.NullnessTests#customNullableField()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.NullnessTests#customNullableField()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.NullnessTests#primitiveField()",
    "headType": "method",
    "relation": "provide",
    "tail": "// Primitive types\r\n@Test\r\nvoid primitiveField() throws NoSuchFieldException {\r\n    var field = NullnessFields.class.getDeclaredField(\"primitiveField\");\r\n    var nullness = Nullness.forField(field);\r\n    Assertions.assertThat(nullness).isEqualTo(Nullness.NON_NULL);\r\n}",
    "tailType": "method_code"
  }
]