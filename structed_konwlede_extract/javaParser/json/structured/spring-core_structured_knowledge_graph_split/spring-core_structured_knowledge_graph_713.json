[
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitCode() {\r\n    mv1.visitCode();\r\n    mv2.visitCode();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitInsn(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitInsn(int opcode) {\r\n    mv1.visitInsn(opcode);\r\n    mv2.visitInsn(opcode);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitInsn(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitInsn(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitIntInsn(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitIntInsn(int opcode, int operand) {\r\n    mv1.visitIntInsn(opcode, operand);\r\n    mv2.visitIntInsn(opcode, operand);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitIntInsn(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitIntInsn(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitVarInsn(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitVarInsn(int opcode, int var) {\r\n    mv1.visitVarInsn(opcode, var);\r\n    mv2.visitVarInsn(opcode, var);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitVarInsn(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitVarInsn(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitTypeInsn(int,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitTypeInsn(int opcode, String desc) {\r\n    mv1.visitTypeInsn(opcode, desc);\r\n    mv2.visitTypeInsn(opcode, desc);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitTypeInsn(int,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitTypeInsn(int,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitFieldInsn(int,String,String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitFieldInsn(int opcode, String owner, String name, String desc) {\r\n    mv1.visitFieldInsn(opcode, owner, name, desc);\r\n    mv2.visitFieldInsn(opcode, owner, name, desc);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitFieldInsn(int,String,String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitFieldInsn(int,String,String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMethodInsn(int,String,String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitMethodInsn(int opcode, String owner, String name, String desc) {\r\n    mv1.visitMethodInsn(opcode, owner, name, desc);\r\n    mv2.visitMethodInsn(opcode, owner, name, desc);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitMethodInsn(int,String,String,String)",
    "tailType": "method"
  }
]