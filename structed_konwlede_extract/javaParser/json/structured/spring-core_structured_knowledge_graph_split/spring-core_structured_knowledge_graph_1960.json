[
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#assertOfAndExpressionWithInvertedSingleElement(Profiles)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofOrExpressionWithInvertedSingleElementWithoutSpaces()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid ofOrExpressionWithInvertedSingleElementWithoutSpaces() {\r\n    Profiles profiles = Profiles.of(\"!spring|framework\");\r\n    assertOfOrExpressionWithInvertedSingleElement(profiles);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#ofOrExpressionWithInvertedSingleElementWithoutSpaces()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofOrExpressionWithInvertedSingleElementWithoutSpaces()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#assertOfOrExpressionWithInvertedSingleElement(Profiles)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void assertOfOrExpressionWithInvertedSingleElement(Profiles profiles) {\r\n    assertThat(profiles.matches(activeProfiles(\"framework\"))).isTrue();\r\n    assertThat(profiles.matches(activeProfiles(\"java\"))).isTrue();\r\n    assertThat(profiles.matches(activeProfiles(\"spring\", \"framework\"))).isTrue();\r\n    assertThat(profiles.matches(activeProfiles(\"spring\"))).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#assertOfOrExpressionWithInvertedSingleElement(Profiles)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofNotOrExpression()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid ofNotOrExpression() {\r\n    Profiles profiles = Profiles.of(\"!(spring | framework)\");\r\n    assertOfNotOrExpression(profiles);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#ofNotOrExpression()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofNotOrExpression()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofNotOrExpressionWithoutSpaces()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid ofNotOrExpressionWithoutSpaces() {\r\n    Profiles profiles = Profiles.of(\"!(spring|framework)\");\r\n    assertOfNotOrExpression(profiles);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#ofNotOrExpressionWithoutSpaces()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofNotOrExpressionWithoutSpaces()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#assertOfNotOrExpression(Profiles)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void assertOfNotOrExpression(Profiles profiles) {\r\n    assertThat(profiles.matches(activeProfiles(\"spring\"))).isFalse();\r\n    assertThat(profiles.matches(activeProfiles(\"framework\"))).isFalse();\r\n    assertThat(profiles.matches(activeProfiles(\"spring\", \"framework\"))).isFalse();\r\n    assertThat(profiles.matches(activeProfiles(\"java\"))).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#assertOfNotOrExpression(Profiles)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofComplexExpression()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid ofComplexExpression() {\r\n    Profiles profiles = Profiles.of(\"(spring & framework) | (spring & java)\");\r\n    assertComplexExpression(profiles);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#ofComplexExpression()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofComplexExpression()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofComplexExpressionWithoutSpaces()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid ofComplexExpressionWithoutSpaces() {\r\n    Profiles profiles = Profiles.of(\"(spring&framework)|(spring&java)\");\r\n    assertComplexExpression(profiles);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.ProfilesTests#ofComplexExpressionWithoutSpaces()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.ProfilesTests#ofComplexExpressionWithoutSpaces()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]