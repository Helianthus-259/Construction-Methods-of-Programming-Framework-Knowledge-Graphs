[
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationOnBridgeMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationOnBridgedMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMethodAnnotationOnBridgedMethod() throws Exception {\r\n    Method bridgedMethod = SimpleFoo.class.getMethod(\"something\", String.class);\r\n    assertThat(bridgedMethod.isBridge()).isFalse();\r\n    assertThat(bridgedMethod.getAnnotation(Order.class)).isNull();\r\n    assertThat(getAnnotation(bridgedMethod, Order.class)).isNull();\r\n    assertThat(findAnnotation(bridgedMethod, Order.class)).isNotNull();\r\n    assertThat(bridgedMethod.getAnnotation(Transactional.class)).isNotNull();\r\n    assertThat(getAnnotation(bridgedMethod, Transactional.class)).isNotNull();\r\n    assertThat(findAnnotation(bridgedMethod, Transactional.class)).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationOnBridgedMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationOnBridgedMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMethodAnnotationFromInterface() throws Exception {\r\n    Method method = ImplementsInterfaceWithAnnotatedMethod.class.getMethod(\"foo\");\r\n    Order order = findAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromGenericInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-16060\r\n@Test\r\nvoid findMethodAnnotationFromGenericInterface() throws Exception {\r\n    Method method = ImplementsInterfaceWithGenericAnnotatedMethod.class.getMethod(\"foo\", String.class);\r\n    Order order = findAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromGenericInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromGenericInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromGenericSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "// SPR-17146\r\n@Test\r\nvoid findMethodAnnotationFromGenericSuperclass() throws Exception {\r\n    Method method = ExtendsBaseClassWithGenericAnnotatedMethod.class.getMethod(\"foo\", String.class);\r\n    Order order = findAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromGenericSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromGenericSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterfaceOnSuper()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMethodAnnotationFromInterfaceOnSuper() throws Exception {\r\n    Method method = SubOfImplementsInterfaceWithAnnotatedMethod.class.getMethod(\"foo\");\r\n    Order order = findAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterfaceOnSuper()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterfaceOnSuper()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterfaceWhenSuperDoesNotImplementMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMethodAnnotationFromInterfaceWhenSuperDoesNotImplementMethod() throws Exception {\r\n    Method method = SubOfAbstractImplementsInterfaceWithAnnotatedMethod.class.getMethod(\"foo\");\r\n    Order order = findAnnotation(method, Order.class);\r\n    assertThat(order).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterfaceWhenSuperDoesNotImplementMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findMethodAnnotationFromInterfaceWhenSuperDoesNotImplementMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotationUtilsTests#findClassAnnotationFavorsMoreLocallyDeclaredComposedAnnotationsOverAnnotationsOnInterfaces()",
    "headType": "method",
    "relation": "provide",
    "tail": "// @since 4.1.2\r\n@Test\r\nvoid findClassAnnotationFavorsMoreLocallyDeclaredComposedAnnotationsOverAnnotationsOnInterfaces() {\r\n    Component component = findAnnotation(ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface.class, Component.class);\r\n    assertThat(component).isNotNull();\r\n    assertThat(component.value()).isEqualTo(\"meta2\");\r\n}",
    "tailType": "method_code"
  }
]