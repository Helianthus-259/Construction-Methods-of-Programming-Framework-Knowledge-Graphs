[
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getInputStream()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getInputStream()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getInputStreamForDir()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getInputStreamForDir() {\r\n    PathResource resource = new PathResource(TEST_DIR);\r\n    assertThatExceptionOfType(FileNotFoundException.class).isThrownBy(resource::getInputStream);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getInputStreamForDir()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getInputStreamForDir()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getInputStreamForNonExistingFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getInputStreamForNonExistingFile() {\r\n    PathResource resource = new PathResource(NON_EXISTING_FILE);\r\n    assertThatExceptionOfType(FileNotFoundException.class).isThrownBy(resource::getInputStream);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getInputStreamForNonExistingFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getInputStreamForNonExistingFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getUrl()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getUrl() throws IOException {\r\n    PathResource resource = new PathResource(TEST_FILE);\r\n    assertThat(resource.getURL().toString()).endsWith(\"core/io/example.properties\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getUrl()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getUrl()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getUri()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getUri() throws IOException {\r\n    PathResource resource = new PathResource(TEST_FILE);\r\n    assertThat(resource.getURI().toString()).endsWith(\"core/io/example.properties\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getUri()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getUri()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getFile() throws IOException {\r\n    PathResource resource = new PathResource(TEST_FILE);\r\n    File file = new File(TEST_FILE);\r\n    assertThat(resource.getFile().getAbsoluteFile()).isEqualTo(file.getAbsoluteFile());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getFileUnsupported()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getFileUnsupported() {\r\n    Path path = mock();\r\n    given(path.normalize()).willReturn(path);\r\n    given(path.toFile()).willThrow(new UnsupportedOperationException());\r\n    PathResource resource = new PathResource(path);\r\n    assertThatExceptionOfType(FileNotFoundException.class).isThrownBy(resource::getFile);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.PathResourceTests#getFileUnsupported()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.PathResourceTests#getFileUnsupported()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]