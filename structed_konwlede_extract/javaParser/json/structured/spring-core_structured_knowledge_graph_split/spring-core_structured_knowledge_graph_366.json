[
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithDefaultUnitUsesBytes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithNullDefaultUnitUsesBytes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseWithNullDefaultUnitUsesBytes() {\r\n    assertThat(DataSize.parse(\"1024\", null)).isEqualTo(DataSize.ofKilobytes(1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.unit.DataSizeTests#parseWithNullDefaultUnitUsesBytes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithNullDefaultUnitUsesBytes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithNullDefaultUnitUsesBytes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseNegativeNumberWithNullDefaultUnitUsesBytes() {\r\n    assertThat(DataSize.parse(\"-1024\", null)).isEqualTo(DataSize.ofKilobytes(-1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithNullDefaultUnitUsesBytes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithNullDefaultUnitUsesBytes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithCustomDefaultUnit()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseWithCustomDefaultUnit() {\r\n    assertThat(DataSize.parse(\"1\", DataUnit.KILOBYTES)).isEqualTo(DataSize.ofKilobytes(1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.unit.DataSizeTests#parseWithCustomDefaultUnit()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithCustomDefaultUnit()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithCustomDefaultUnit()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseNegativeNumberWithCustomDefaultUnit() {\r\n    assertThat(DataSize.parse(\"-1\", DataUnit.KILOBYTES)).isEqualTo(DataSize.ofKilobytes(-1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithCustomDefaultUnit()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseNegativeNumberWithCustomDefaultUnit()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithBytes(CharSequence)",
    "headType": "method",
    "relation": "provide",
    "tail": "@ParameterizedTest(name = \"[{index}] text = ''{0}''\")\r\n@ValueSource(strings = { \"1024B\", \"1024 B\", \"1024B   \", \"   1024B\", \" 1024B \", \"\\t1024   B\\t\" })\r\nvoid parseWithBytes(CharSequence text) {\r\n    assertThat(DataSize.parse(text)).isEqualTo(DataSize.ofKilobytes(1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.unit.DataSizeTests#parseWithBytes(CharSequence)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithBytes(CharSequence)",
    "headType": "method",
    "relation": "use",
    "tail": "@ParameterizedTest",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithBytes(CharSequence)",
    "headType": "method",
    "relation": "use",
    "tail": "@ValueSource",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithNegativeBytes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid parseWithNegativeBytes() {\r\n    assertThat(DataSize.parse(\"-1024B\")).isEqualTo(DataSize.ofKilobytes(-1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.unit.DataSizeTests#parseWithNegativeBytes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.unit.DataSizeTests#parseWithNegativeBytes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]