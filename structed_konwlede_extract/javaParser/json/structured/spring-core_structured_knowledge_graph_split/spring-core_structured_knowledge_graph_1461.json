[
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#createStaxSource(XMLStreamReader)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#createStaxSource(XMLEventReader)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a JAXP 1.4 {@link StAXSource} for the given {@link XMLEventReader}.\r\n * @param eventReader the StAX event reader\r\n * @return a source wrapping the {@code eventReader}\r\n */\r\npublic static Source createStaxSource(XMLEventReader eventReader) throws XMLStreamException {\r\n    return new StAXSource(eventReader);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#createStaxSource(XMLEventReader)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#createCustomStaxSource(XMLStreamReader)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a custom, non-JAXP 1.4 StAX {@link Source} for the given {@link XMLStreamReader}.\r\n * @param streamReader the StAX stream reader\r\n * @return a source wrapping the {@code streamReader}\r\n */\r\npublic static Source createCustomStaxSource(XMLStreamReader streamReader) {\r\n    return new StaxSource(streamReader);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#createCustomStaxSource(XMLStreamReader)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#createCustomStaxSource(XMLEventReader)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a custom, non-JAXP 1.4 StAX {@link Source} for the given {@link XMLEventReader}.\r\n * @param eventReader the StAX event reader\r\n * @return a source wrapping the {@code eventReader}\r\n */\r\npublic static Source createCustomStaxSource(XMLEventReader eventReader) {\r\n    return new StaxSource(eventReader);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#createCustomStaxSource(XMLEventReader)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#isStaxSource(Source)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Indicate whether the given {@link Source} is a JAXP 1.4 StAX Source or\r\n * custom StAX Source.\r\n * @return {@code true} if {@code source} is a JAXP 1.4 {@link StAXSource} or\r\n * custom StAX Source; {@code false} otherwise\r\n */\r\npublic static boolean isStaxSource(Source source) {\r\n    return (source instanceof StAXSource || source instanceof StaxSource);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#isStaxSource(Source)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#getXMLStreamReader(Source)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the {@link XMLStreamReader} for the given StAX Source.\r\n * @param source a JAXP 1.4 {@link StAXSource}\r\n * @return the {@link XMLStreamReader}\r\n * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXSource}\r\n * or custom StAX Source\r\n */\r\n@Nullable\r\npublic static XMLStreamReader getXMLStreamReader(Source source) {\r\n    if (source instanceof StAXSource stAXSource) {\r\n        return stAXSource.getXMLStreamReader();\r\n    } else if (source instanceof StaxSource staxSource) {\r\n        return staxSource.getXMLStreamReader();\r\n    } else {\r\n        throw new IllegalArgumentException(\"Source '\" + source + \"' is neither StaxSource nor StAXSource\");\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#getXMLStreamReader(Source)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#getXMLStreamReader(Source)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#getXMLEventReader(Source)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the {@link XMLEventReader} for the given StAX Source.\r\n * @param source a JAXP 1.4 {@link StAXSource}\r\n * @return the {@link XMLEventReader}\r\n * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXSource}\r\n * or custom StAX Source\r\n */\r\n@Nullable\r\npublic static XMLEventReader getXMLEventReader(Source source) {\r\n    if (source instanceof StAXSource stAXSource) {\r\n        return stAXSource.getXMLEventReader();\r\n    } else if (source instanceof StaxSource staxSource) {\r\n        return staxSource.getXMLEventReader();\r\n    } else {\r\n        throw new IllegalArgumentException(\"Source '\" + source + \"' is neither StaxSource nor StAXSource\");\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#getXMLEventReader(Source)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#getXMLEventReader(Source)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#createStaxResult(XMLStreamWriter)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLStreamWriter}.\r\n * @param streamWriter the StAX stream writer\r\n * @return a result wrapping the {@code streamWriter}\r\n */\r\npublic static Result createStaxResult(XMLStreamWriter streamWriter) {\r\n    return new StAXResult(streamWriter);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#createStaxResult(XMLStreamWriter)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#createStaxResult(XMLEventWriter)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLEventWriter}.\r\n * @param eventWriter the StAX event writer\r\n * @return a result wrapping {@code streamReader}\r\n */\r\npublic static Result createStaxResult(XMLEventWriter eventWriter) {\r\n    return new StAXResult(eventWriter);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.StaxUtils#createStaxResult(XMLEventWriter)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.StaxUtils#createCustomStaxResult(XMLStreamWriter)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Create a custom, non-JAXP 1.4 StAX {@link Result} for the given {@link XMLStreamWriter}.\r\n * @param streamWriter the StAX stream writer\r\n * @return a source wrapping the {@code streamWriter}\r\n */\r\npublic static Result createCustomStaxResult(XMLStreamWriter streamWriter) {\r\n    return new StaxResult(streamWriter);\r\n}",
    "tailType": "method_code"
  }
]