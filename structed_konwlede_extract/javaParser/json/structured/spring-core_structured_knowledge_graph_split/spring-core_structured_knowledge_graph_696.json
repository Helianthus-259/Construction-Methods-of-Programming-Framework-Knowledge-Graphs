[
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeBoolean(Object,String,boolean,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeShort(Object,String,short,short)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic short writeShort(Object obj, String name, short oldValue, short newValue) {\r\n    return newValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeShort(Object,String,short,short)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeShort(Object,String,short,short)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeFloat(Object,String,float,float)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic float writeFloat(Object obj, String name, float oldValue, float newValue) {\r\n    return newValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeFloat(Object,String,float,float)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeFloat(Object,String,float,float)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeDouble(Object,String,double,double)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic double writeDouble(Object obj, String name, double oldValue, double newValue) {\r\n    return newValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeDouble(Object,String,double,double)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeDouble(Object,String,double,double)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeLong(Object,String,long,long)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic long writeLong(Object obj, String name, long oldValue, long newValue) {\r\n    return newValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeLong(Object,String,long,long)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeLong(Object,String,long,long)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeObject(Object,String,Object,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Object writeObject(Object obj, String name, Object oldValue, Object newValue) {\r\n    return newValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeObject(Object,String,Object,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#writeObject(Object,String,Object,Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readInt(Object,String,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int readInt(Object obj, String name, int oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readInt(Object,String,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readInt(Object,String,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback#readChar(Object,String,char)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic char readChar(Object obj, String name, char oldValue) {\r\n    return oldValue;\r\n}",
    "tailType": "method_code"
  }
]