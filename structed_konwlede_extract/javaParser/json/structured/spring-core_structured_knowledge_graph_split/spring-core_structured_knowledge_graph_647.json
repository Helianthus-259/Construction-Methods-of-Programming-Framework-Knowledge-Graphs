[
  {
    "head": "org.springframework.cglib.proxy.Factory",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Factory#setCallback(int,Callback)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.proxy.Factory#setCallbacks(Callback[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Replace all of the callbacks for this object at once.\r\n * @param callbacks the new callbacks(s) to use\r\n */\r\nvoid setCallbacks(Callback[] callbacks);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.Factory",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Factory#setCallbacks(Callback[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.proxy.Factory#getCallbacks()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get the current set of callbacks for ths object.\r\n * @return a new array instance\r\n */\r\nCallback[] getCallbacks();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.Factory",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Factory#getCallbacks()",
    "tailType": "method"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.cglib.proxy",
    "tailType": "package"
  },
  {
    "head": "org.springframework.cglib.proxy",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.cglib.proxy.FixedValue",
    "tailType": "class"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValue",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2003 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.cglib.proxy;\n\n/**\n * {@link Enhancer} callback that simply returns the value to return\n * from the proxied method. No information about what method\n * is being called is available to the callback, and the type of\n * the returned object must be compatible with the return type of\n * the proxied method. This makes this callback primarily useful\n * for forcing a particular method (through the use of a {@link CallbackFilter}\n * to return a fixed value with little overhead.\n */\npublic interface FixedValue extends Callback {\n    /**\n     * Return the object which the original method invocation should\n     * return. This method is called for <b>every</b> method invocation.\n     * @return an object matching the type of the return value for every\n     * method this callback is mapped to\n     */\n    Object loadObject() throws Exception;\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValue#loadObject()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the object which the original method invocation should\r\n * return. This method is called for <b>every</b> method invocation.\r\n * @return an object matching the type of the return value for every\r\n * method this callback is mapped to\r\n */\r\nObject loadObject() throws Exception;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValue",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.FixedValue#loadObject()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValue",
    "headType": "class",
    "relation": "extend",
    "tail": "Callback",
    "tailType": "class"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.cglib.proxy",
    "tailType": "package"
  },
  {
    "head": "org.springframework.cglib.proxy",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.cglib.proxy.FixedValueGenerator",
    "tailType": "class"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator",
    "headType": "class",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2003,2004 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.cglib.proxy;\n\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.springframework.asm.Type;\nimport org.springframework.cglib.core.ClassEmitter;\nimport org.springframework.cglib.core.CodeEmitter;\nimport org.springframework.cglib.core.MethodInfo;\nimport org.springframework.cglib.core.Signature;\nimport org.springframework.cglib.core.TypeUtils;\n\n@SuppressWarnings({\"rawtypes\", \"unchecked\"})\nclass FixedValueGenerator implements CallbackGenerator {\n    public static final FixedValueGenerator INSTANCE = new FixedValueGenerator();\n    private static final Type FIXED_VALUE =\n      TypeUtils.parseType(\"org.springframework.cglib.proxy.FixedValue\");\n    private static final Signature LOAD_OBJECT =\n      TypeUtils.parseSignature(\"Object loadObject()\");\n\n    @Override\n\tpublic void generate(ClassEmitter ce, Context context, List methods) {\n        for (Iterator it = methods.iterator(); it.hasNext();) {\n            MethodInfo method = (MethodInfo)it.next();\n            CodeEmitter e = context.beginMethod(ce, method);\n            context.emitCallback(e, context.getIndex(method));\n            e.invoke_interface(FIXED_VALUE, LOAD_OBJECT);\n            e.unbox_or_zero(e.getReturnType());\n            e.return_value();\n            e.end_method();\n        }\n    }\n\n    @Override\n\tpublic void generateStatic(CodeEmitter e, Context context, List methods) { }\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.FixedValueGenerator#INSTANCE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator#INSTANCE",
    "headType": "field",
    "relation": "haveType",
    "tail": "FixedValueGenerator",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.FixedValueGenerator#FIXED_VALUE",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator#FIXED_VALUE",
    "headType": "field",
    "relation": "haveType",
    "tail": "Type",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.FixedValueGenerator",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.FixedValueGenerator#LOAD_OBJECT",
    "tailType": "field"
  }
]