[
  {
    "head": "org.springframework.util.EntrySet#size()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#contains(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean contains(Object o) {\r\n    return this.delegate.contains(o);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.EntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.EntrySet#contains(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.EntrySet#contains(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#iterator()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Iterator<Entry<String, V>> iterator() {\r\n    return new EntrySetIterator();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.EntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.EntrySet#iterator()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.EntrySet#iterator()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#remove(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@SuppressWarnings(\"unchecked\")\r\npublic boolean remove(Object o) {\r\n    if (this.delegate.remove(o)) {\r\n        removeCaseInsensitiveKey(((Map.Entry<String, V>) o).getKey());\r\n        return true;\r\n    }\r\n    return false;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.EntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.EntrySet#remove(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.EntrySet#remove(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#remove(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#clear()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void clear() {\r\n    this.delegate.clear();\r\n    caseInsensitiveKeys.clear();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.EntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.EntrySet#clear()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.EntrySet#clear()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#spliterator()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Spliterator<Entry<String, V>> spliterator() {\r\n    return this.delegate.spliterator();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.EntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.EntrySet#spliterator()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.EntrySet#spliterator()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.EntrySet#forEach(Consumer<? super Entry<String,V>>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void forEach(Consumer<? super Entry<String, V>> action) {\r\n    this.delegate.forEach(action);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.EntrySet",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.EntrySet#forEach(Consumer<? super Entry<String,V>>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.EntrySet#forEach(Consumer<? super Entry<String,V>>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]