[
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#spliteratorIteratesInCorrectOrder()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#spliteratorIteratesInCorrectOrder()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#spliteratorEstimatesSize()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid spliteratorEstimatesSize() {\r\n    MergedAnnotations annotations = getDirectAndSimple();\r\n    Spliterator<MergedAnnotation<Annotation>> spliterator = annotations.spliterator();\r\n    assertThat(spliterator.estimateSize()).isEqualTo(5);\r\n    spliterator.tryAdvance(annotation -> assertThat(annotation.getType()).isEqualTo(Direct.class));\r\n    assertThat(spliterator.estimateSize()).isEqualTo(4);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#spliteratorEstimatesSize()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#spliteratorEstimatesSize()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenDirectlyPresentReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPresentWhenDirectlyPresentReturnsTrue() {\r\n    MergedAnnotations annotations = getDirectAndSimple();\r\n    assertThat(annotations.isPresent(Direct.class)).isTrue();\r\n    assertThat(annotations.isPresent(Direct.class.getName())).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenDirectlyPresentReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenDirectlyPresentReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenMetaPresentReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPresentWhenMetaPresentReturnsTrue() {\r\n    MergedAnnotations annotations = getDirectAndSimple();\r\n    assertThat(annotations.isPresent(Meta11.class)).isTrue();\r\n    assertThat(annotations.isPresent(Meta11.class.getName())).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenMetaPresentReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenMetaPresentReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenNotPresentReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPresentWhenNotPresentReturnsFalse() {\r\n    MergedAnnotations annotations = getDirectAndSimple();\r\n    assertThat(annotations.isPresent(Missing.class)).isFalse();\r\n    assertThat(annotations.isPresent(Missing.class.getName())).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenNotPresentReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isPresentWhenNotPresentReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isDirectlyPresentWhenDirectlyPresentReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isDirectlyPresentWhenDirectlyPresentReturnsTrue() {\r\n    MergedAnnotations annotations = getDirectAndSimple();\r\n    assertThat(annotations.isDirectlyPresent(Direct.class)).isTrue();\r\n    assertThat(annotations.isDirectlyPresent(Direct.class.getName())).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isDirectlyPresentWhenDirectlyPresentReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isDirectlyPresentWhenDirectlyPresentReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isDirectlyPresentWhenMetaPresentReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isDirectlyPresentWhenMetaPresentReturnsFalse() {\r\n    MergedAnnotations annotations = getDirectAndSimple();\r\n    assertThat(annotations.isDirectlyPresent(Meta11.class)).isFalse();\r\n    assertThat(annotations.isDirectlyPresent(Meta11.class.getName())).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isDirectlyPresentWhenMetaPresentReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsCollectionTests#isDirectlyPresentWhenMetaPresentReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]