[
  {
    "head": "org.springframework.cglib.core.ClassGenerator",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2003 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.cglib.core;\n\nimport org.springframework.asm.ClassVisitor;\n\npublic interface ClassGenerator {\n    void generateClass(ClassVisitor v) throws Exception;\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassGenerator#generateClass(ClassVisitor)",
    "headType": "method",
    "relation": "provide",
    "tail": "void generateClass(ClassVisitor v) throws Exception;",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassGenerator",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassGenerator#generateClass(ClassVisitor)",
    "tailType": "method"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.cglib.core",
    "tailType": "package"
  },
  {
    "head": "org.springframework.cglib.core",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.cglib.core.ClassInfo",
    "tailType": "class"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2004 The Apache Software Foundation\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.cglib.core;\n\nimport org.springframework.asm.Type;\n\nabstract public class ClassInfo {\n\n    protected ClassInfo() {\n    }\n\n    abstract public Type getType();\n    abstract public Type getSuperType();\n    abstract public Type[] getInterfaces();\n    abstract public int getModifiers();\n\n\t@Override\n\tpublic boolean equals(Object o) {\n\t\tif (o == null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!(o instanceof ClassInfo classInfo)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn getType().equals(classInfo.getType());\n\t}\n\n    @Override\n    public int hashCode() {\n        return getType().hashCode();\n    }\n\n    @Override\n    public String toString() {\n        // TODO: include modifiers, superType, interfaces\n        return getType().getClassName();\n    }\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#getType()",
    "headType": "method",
    "relation": "provide",
    "tail": "abstract public Type getType();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassInfo#getType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#getSuperType()",
    "headType": "method",
    "relation": "provide",
    "tail": "abstract public Type getSuperType();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassInfo#getSuperType()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#getInterfaces()",
    "headType": "method",
    "relation": "provide",
    "tail": "abstract public Type[] getInterfaces();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassInfo#getInterfaces()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#getModifiers()",
    "headType": "method",
    "relation": "provide",
    "tail": "abstract public int getModifiers();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassInfo#getModifiers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean equals(Object o) {\r\n    if (o == null) {\r\n        return false;\r\n    }\r\n    if (!(o instanceof ClassInfo classInfo)) {\r\n        return false;\r\n    }\r\n    return getType().equals(classInfo.getType());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassInfo#equals(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#hashCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int hashCode() {\r\n    return getType().hashCode();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.core.ClassInfo#hashCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.core.ClassInfo#hashCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]