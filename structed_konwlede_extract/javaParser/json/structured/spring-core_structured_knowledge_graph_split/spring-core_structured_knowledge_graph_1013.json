[
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#dataBufferFactory",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#dataBufferFactory",
    "headType": "field",
    "relation": "haveType",
    "tail": "NettyDataBufferFactory",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#getNativeBuffer()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Directly exposes the native {@code ByteBuf} that this buffer is based on.\r\n * @return the wrapped byte buffer\r\n */\r\npublic ByteBuf getNativeBuffer() {\r\n    return this.byteBuf;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#getNativeBuffer()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#factory()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic NettyDataBufferFactory factory() {\r\n    return this.dataBufferFactory;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#factory()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#factory()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#indexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int indexOf(IntPredicate predicate, int fromIndex) {\r\n    Assert.notNull(predicate, \"IntPredicate must not be null\");\r\n    if (fromIndex < 0) {\r\n        fromIndex = 0;\r\n    } else if (fromIndex >= this.byteBuf.writerIndex()) {\r\n        return -1;\r\n    }\r\n    int length = this.byteBuf.writerIndex() - fromIndex;\r\n    return this.byteBuf.forEachByte(fromIndex, length, predicate.negate()::test);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#indexOf(IntPredicate,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#indexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#lastIndexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int lastIndexOf(IntPredicate predicate, int fromIndex) {\r\n    Assert.notNull(predicate, \"IntPredicate must not be null\");\r\n    if (fromIndex < 0) {\r\n        return -1;\r\n    }\r\n    fromIndex = Math.min(fromIndex, this.byteBuf.writerIndex() - 1);\r\n    return this.byteBuf.forEachByteDesc(0, fromIndex + 1, predicate.negate()::test);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#lastIndexOf(IntPredicate,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#lastIndexOf(IntPredicate,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#readableByteCount()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int readableByteCount() {\r\n    return this.byteBuf.readableBytes();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#readableByteCount()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#readableByteCount()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#writableByteCount()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int writableByteCount() {\r\n    return this.byteBuf.writableBytes();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#writableByteCount()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#writableByteCount()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#readPosition()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int readPosition() {\r\n    return this.byteBuf.readerIndex();\r\n}",
    "tailType": "method_code"
  }
]