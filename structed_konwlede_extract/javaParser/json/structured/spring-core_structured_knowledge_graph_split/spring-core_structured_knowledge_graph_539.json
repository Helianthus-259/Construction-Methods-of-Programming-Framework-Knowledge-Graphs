[
  {
    "head": "org.springframework.cglib.beans.BeanMap#remove(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#putAll(Map)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void putAll(Map t) {\r\n    for (Object key : t.keySet()) {\r\n        put(key, t.get(key));\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#putAll(Map)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#putAll(Map)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean equals(Object o) {\r\n    if (o == null || !(o instanceof Map other)) {\r\n        return false;\r\n    }\r\n    if (size() != other.size()) {\r\n        return false;\r\n    }\r\n    for (Object key : keySet()) {\r\n        if (!other.containsKey(key)) {\r\n            return false;\r\n        }\r\n        Object v1 = get(key);\r\n        Object v2 = other.get(key);\r\n        if (!(Objects.equals(v1, v2))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#equals(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#equals(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#hashCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic int hashCode() {\r\n    int code = 0;\r\n    for (Object key : keySet()) {\r\n        Object value = get(key);\r\n        code += ((key == null) ? 0 : key.hashCode()) ^ ((value == null) ? 0 : value.hashCode());\r\n    }\r\n    return code;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#hashCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#hashCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#entrySet()",
    "headType": "method",
    "relation": "provide",
    "tail": "// TODO: optimize\r\n@Override\r\npublic Set entrySet() {\r\n    HashMap copy = new HashMap();\r\n    for (Object key : keySet()) {\r\n        copy.put(key, get(key));\r\n    }\r\n    return Collections.unmodifiableMap(copy).entrySet();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#entrySet()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#entrySet()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#values()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Collection values() {\r\n    Set keys = keySet();\r\n    List values = new ArrayList(keys.size());\r\n    for (Iterator it = keys.iterator(); it.hasNext(); ) {\r\n        values.add(get(it.next()));\r\n    }\r\n    return Collections.unmodifiableCollection(values);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#values()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#values()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#toString()",
    "headType": "method",
    "relation": "provide",
    "tail": "/*\r\n\t * @see java.util.AbstractMap#toString\r\n\t */\r\n@Override\r\npublic String toString() {\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append('{');\r\n    for (Iterator it = keySet().iterator(); it.hasNext(); ) {\r\n        Object key = it.next();\r\n        sb.append(key);\r\n        sb.append('=');\r\n        sb.append(get(key));\r\n        if (it.hasNext()) {\r\n            sb.append(\", \");\r\n        }\r\n    }\r\n    sb.append('}');\r\n    return sb.toString();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.beans.BeanMap#toString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.beans.BeanMap#toString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.beans",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.cglib.beans.Generator",
    "tailType": "class"
  }
]