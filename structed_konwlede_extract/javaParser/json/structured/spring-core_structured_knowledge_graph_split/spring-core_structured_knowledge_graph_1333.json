[
  {
    "head": "org.springframework.util.MethodInvoker#methodObject",
    "headType": "field",
    "relation": "haveType",
    "tail": "Method",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.MethodInvoker#setTargetClass(Class<?>)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the target class on which to call the target method.\r\n * Only necessary when the target method is static; else,\r\n * a target object needs to be specified anyway.\r\n * @see #setTargetObject\r\n * @see #setTargetMethod\r\n */\r\npublic void setTargetClass(@Nullable Class<?> targetClass) {\r\n    this.targetClass = targetClass;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#setTargetClass(Class<?>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#getTargetClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the target class on which to call the target method.\r\n */\r\n@Nullable\r\npublic Class<?> getTargetClass() {\r\n    return this.targetClass;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#getTargetClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#getTargetClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MethodInvoker#setTargetObject(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the target object on which to call the target method.\r\n * Only necessary when the target method is not static;\r\n * else, a target class is sufficient.\r\n * @see #setTargetClass\r\n * @see #setTargetMethod\r\n */\r\npublic void setTargetObject(@Nullable Object targetObject) {\r\n    this.targetObject = targetObject;\r\n    if (targetObject != null) {\r\n        this.targetClass = targetObject.getClass();\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#setTargetObject(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#getTargetObject()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the target object on which to call the target method.\r\n */\r\n@Nullable\r\npublic Object getTargetObject() {\r\n    return this.targetObject;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#getTargetObject()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#getTargetObject()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MethodInvoker#setTargetMethod(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the name of the method to be invoked.\r\n * Refers to either a static method or a non-static method,\r\n * depending on a target object being set.\r\n * @see #setTargetClass\r\n * @see #setTargetObject\r\n */\r\npublic void setTargetMethod(@Nullable String targetMethod) {\r\n    this.targetMethod = targetMethod;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#setTargetMethod(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#getTargetMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the name of the method to be invoked.\r\n */\r\n@Nullable\r\npublic String getTargetMethod() {\r\n    return this.targetMethod;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#getTargetMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#getTargetMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MethodInvoker#setStaticMethod(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set a fully qualified static method name to invoke,\r\n * for example, \"example.MyExampleClass.myExampleMethod\". This is a\r\n * convenient alternative to specifying targetClass and targetMethod.\r\n * @see #setTargetClass\r\n * @see #setTargetMethod\r\n */\r\npublic void setStaticMethod(String staticMethod) {\r\n    this.staticMethod = staticMethod;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#setStaticMethod(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MethodInvoker#setArguments(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set arguments for the method invocation. If this property is not set,\r\n * or the Object array is of length 0, a method with no arguments is assumed.\r\n */\r\npublic void setArguments(@Nullable Object... arguments) {\r\n    this.arguments = arguments;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MethodInvoker",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MethodInvoker#setArguments(Object)",
    "tailType": "method"
  }
]