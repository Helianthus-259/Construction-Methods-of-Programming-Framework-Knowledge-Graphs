[
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeCycleSunnyDay()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeCycleSunnyDay()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeNonSerializableRecord()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid serializeNonSerializableRecord() {\r\n    record Person(String firstName, String lastName) ;\r\n    Person jane = new Person(\"Jane\", \"Doe\");\r\n    assertThatIllegalArgumentException().isThrownBy(() -> SerializationUtils.serialize(jane)).withCauseExactlyInstanceOf(NotSerializableException.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SerializationUtilsTests#serializeNonSerializableRecord()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeNonSerializableRecord()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeAndDeserializeSerializableRecord()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"deprecation\")\r\nvoid serializeAndDeserializeSerializableRecord() {\r\n    record Person(String firstName, String lastName) implements Serializable ;\r\n    Person jane = new Person(\"Jane\", \"Doe\");\r\n    assertThat(SerializationUtils.deserialize(SerializationUtils.serialize(jane))).isEqualTo(jane);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SerializationUtilsTests#serializeAndDeserializeSerializableRecord()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeAndDeserializeSerializableRecord()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeAndDeserializeSerializableRecord()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#deserializeUndefined()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"deprecation\")\r\nvoid deserializeUndefined() {\r\n    assertThatIllegalStateException().isThrownBy(() -> SerializationUtils.deserialize(FOO.toByteArray()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SerializationUtilsTests#deserializeUndefined()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#deserializeUndefined()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#deserializeUndefined()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeNonSerializable()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid serializeNonSerializable() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> SerializationUtils.serialize(new Object()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SerializationUtilsTests#serializeNonSerializable()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#serializeNonSerializable()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#deserializeNonSerializable()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"deprecation\")\r\nvoid deserializeNonSerializable() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> SerializationUtils.deserialize(\"foo\".getBytes()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.SerializationUtilsTests#deserializeNonSerializable()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#deserializeNonSerializable()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.SerializationUtilsTests#deserializeNonSerializable()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  }
]