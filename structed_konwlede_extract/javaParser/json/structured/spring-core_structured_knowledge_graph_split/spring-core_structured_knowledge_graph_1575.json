[
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithSinglePattern()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithSinglePattern()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleFilePrefixes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithMultipleFilePrefixes() {\r\n    FilePatternResourceHintsRegistrar.forClassPathLocations(\"\").withFilePrefixes(\"test\").withFilePrefixes(\"another\").withFileExtensions(\".txt\").registerHints(this.hints, null);\r\n    assertThat(this.hints.resourcePatternHints()).singleElement().satisfies(includes(\"/\", \"test*.txt\", \"another*.txt\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleFilePrefixes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleFilePrefixes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleClasspathLocations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithMultipleClasspathLocations() {\r\n    FilePatternResourceHintsRegistrar.forClassPathLocations(\"\").withClassPathLocations(\"META-INF\").withFilePrefixes(\"test\").withFileExtensions(\".txt\").registerHints(this.hints, null);\r\n    assertThat(this.hints.resourcePatternHints()).singleElement().satisfies(includes(\"/\", \"test*.txt\", \"META-INF\", \"META-INF/test*.txt\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleClasspathLocations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleClasspathLocations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleFileExtensions()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithMultipleFileExtensions() {\r\n    FilePatternResourceHintsRegistrar.forClassPathLocations(\"\").withFilePrefixes(\"test\").withFileExtensions(\".txt\").withFileExtensions(\".conf\").registerHints(this.hints, null);\r\n    assertThat(this.hints.resourcePatternHints()).singleElement().satisfies(includes(\"/\", \"test*.txt\", \"test*.conf\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleFileExtensions()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithMultipleFileExtensions()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationWithoutTrailingSlash()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithClasspathLocationWithoutTrailingSlash() {\r\n    FilePatternResourceHintsRegistrar.forClassPathLocations(\"META-INF\").withFilePrefixes(\"test\").withFileExtensions(\".txt\").registerHints(this.hints, null);\r\n    assertThat(this.hints.resourcePatternHints()).singleElement().satisfies(includes(\"/\", \"META-INF\", \"META-INF/test*.txt\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationWithoutTrailingSlash()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationWithoutTrailingSlash()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationWithLeadingSlash()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithClasspathLocationWithLeadingSlash() {\r\n    FilePatternResourceHintsRegistrar.forClassPathLocations(\"/\").withFilePrefixes(\"test\").withFileExtensions(\".txt\").registerHints(this.hints, null);\r\n    assertThat(this.hints.resourcePatternHints()).singleElement().satisfies(includes(\"/\", \"test*.txt\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationWithLeadingSlash()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationWithLeadingSlash()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationUsingResourceClasspathPrefix()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid registerWithClasspathLocationUsingResourceClasspathPrefix() {\r\n    FilePatternResourceHintsRegistrar.forClassPathLocations(\"classpath:META-INF\").withFilePrefixes(\"test\").withFileExtensions(\".txt\").registerHints(this.hints, null);\r\n    assertThat(this.hints.resourcePatternHints()).singleElement().satisfies(includes(\"/\", \"META-INF\", \"META-INF/test*.txt\"));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationUsingResourceClasspathPrefix()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.support.FilePatternResourceHintsRegistrarTests#registerWithClasspathLocationUsingResourceClasspathPrefix()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]