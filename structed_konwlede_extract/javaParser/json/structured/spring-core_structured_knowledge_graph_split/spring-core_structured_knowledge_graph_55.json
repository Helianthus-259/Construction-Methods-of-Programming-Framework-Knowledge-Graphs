[
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#isAnnotatedWhenDoesNotMatchDirectOrMetaAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAnnotationAttributesReturnsAttributes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getAnnotationAttributesReturnsAttributes() {\r\n    assertThat(get(WithAnnotationAttributes.class).getAnnotationAttributes(AnnotationAttributes.class.getName())).containsOnly(entry(\"name\", \"test\"), entry(\"size\", 1));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAnnotationAttributesReturnsAttributes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAnnotationAttributesReturnsAttributes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAllAnnotationAttributesReturnsAllAttributes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getAllAnnotationAttributesReturnsAllAttributes() {\r\n    MultiValueMap<String, Object> attributes = get(WithMetaAnnotationAttributes.class).getAllAnnotationAttributes(AnnotationAttributes.class.getName());\r\n    assertThat(attributes).containsOnlyKeys(\"name\", \"size\");\r\n    assertThat(attributes.get(\"name\")).containsExactlyInAnyOrder(\"m1\", \"m2\");\r\n    assertThat(attributes.get(\"size\")).containsExactlyInAnyOrder(1, 2);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAllAnnotationAttributesReturnsAllAttributes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAllAnnotationAttributesReturnsAllAttributes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAnnotationTypesReturnsDirectAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getAnnotationTypesReturnsDirectAnnotations() {\r\n    AnnotationMetadata metadata = get(WithDirectAnnotations.class);\r\n    assertThat(metadata.getAnnotationTypes()).containsExactlyInAnyOrder(DirectAnnotation1.class.getName(), DirectAnnotation2.class.getName());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAnnotationTypesReturnsDirectAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getAnnotationTypesReturnsDirectAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getMetaAnnotationTypesReturnsMetaAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getMetaAnnotationTypesReturnsMetaAnnotations() {\r\n    AnnotationMetadata metadata = get(WithMetaAnnotations.class);\r\n    assertThat(metadata.getMetaAnnotationTypes(MetaAnnotationRoot.class.getName())).containsExactlyInAnyOrder(MetaAnnotation1.class.getName(), MetaAnnotation2.class.getName());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#getMetaAnnotationTypesReturnsMetaAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#getMetaAnnotationTypesReturnsMetaAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenMatchesDirectAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid hasAnnotationWhenMatchesDirectAnnotationReturnsTrue() {\r\n    assertThat(get(WithDirectAnnotations.class).hasAnnotation(DirectAnnotation1.class.getName())).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenMatchesDirectAnnotationReturnsTrue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenMatchesDirectAnnotationReturnsTrue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenMatchesMetaAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid hasAnnotationWhenMatchesMetaAnnotationReturnsFalse() {\r\n    assertThat(get(WithMetaAnnotations.class).hasAnnotation(MetaAnnotation1.class.getName())).isFalse();\r\n    assertThat(get(WithMetaAnnotations.class).hasAnnotation(MetaAnnotation2.class.getName())).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenMatchesMetaAnnotationReturnsFalse()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenMatchesMetaAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.AbstractAnnotationMetadataTests#hasAnnotationWhenDoesNotMatchDirectOrMetaAnnotationReturnsFalse()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid hasAnnotationWhenDoesNotMatchDirectOrMetaAnnotationReturnsFalse() {\r\n    assertThat(get(TestClass.class).hasAnnotation(DirectAnnotation1.class.getName())).isFalse();\r\n}",
    "tailType": "method_code"
  }
]