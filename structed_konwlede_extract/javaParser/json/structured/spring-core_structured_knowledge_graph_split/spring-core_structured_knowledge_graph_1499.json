[
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithJavaFileInTheDefaultPackageThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithJavaFileInTheDefaultPackageThrowsException() {\r\n    TypeSpec helloWorld = TypeSpec.classBuilder(\"HelloWorld\").build();\r\n    JavaFile javaFile = JavaFile.builder(\"\", helloWorld).build();\r\n    assertThatIllegalArgumentException().isThrownBy(() -> this.generatedFiles.addSourceFile(javaFile)).withMessage(\"Could not add 'HelloWorld', processing classes in the \" + \"default package is not supported. Did you forget to add a package statement?\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithJavaFileInTheDefaultPackageThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithJavaFileInTheDefaultPackageThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithCharSequenceAddsFile() throws Exception {\r\n    this.generatedFiles.addSourceFile(\"com.example.HelloWorld\", \";\");\r\n    assertThatFileAdded(Kind.SOURCE, \"com/example/HelloWorld.java\").isEqualTo(\";\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsEmptyThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithCharSequenceWhenClassNameIsEmptyThrowsException() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> this.generatedFiles.addSourceFile(\"\", \";\")).withMessage(\"'className' must not be empty\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsEmptyThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsEmptyThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsInTheDefaultPackageThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithCharSequenceWhenClassNameIsInTheDefaultPackageThrowsException() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> this.generatedFiles.addSourceFile(\"HelloWorld\", \";\")).withMessage(\"Could not add 'HelloWorld', processing classes in the \" + \"default package is not supported. Did you forget to add a package statement?\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsInTheDefaultPackageThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsInTheDefaultPackageThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsInvalidThrowsException()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithCharSequenceWhenClassNameIsInvalidThrowsException() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> this.generatedFiles.addSourceFile(\"com/example/HelloWorld.java\", \";\")).withMessage(\"'className' must be a valid identifier, got 'com/example/HelloWorld.java'\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsInvalidThrowsException()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithCharSequenceWhenClassNameIsInvalidThrowsException()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithConsumedAppendableAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithConsumedAppendableAddsFile() throws Exception {\r\n    this.generatedFiles.addSourceFile(\"com.example.HelloWorld\", appendable -> appendable.append(\";\"));\r\n    assertThatFileAdded(Kind.SOURCE, \"com/example/HelloWorld.java\").isEqualTo(\";\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithConsumedAppendableAddsFile()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithConsumedAppendableAddsFile()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithInputStreamSourceAddsFile()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addSourceFileWithInputStreamSourceAddsFile() throws Exception {\r\n    Resource resource = new ByteArrayResource(\";\".getBytes(StandardCharsets.UTF_8));\r\n    this.generatedFiles.addSourceFile(\"com.example.HelloWorld\", resource);\r\n    assertThatFileAdded(Kind.SOURCE, \"com/example/HelloWorld.java\").isEqualTo(\";\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedFilesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedFilesTests#addSourceFileWithInputStreamSourceAddsFile()",
    "tailType": "method"
  }
]