[
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#readPosition()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#readPosition(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the position from which this buffer will read.\r\n * @param readPosition the new read position\r\n * @return this buffer\r\n * @throws IndexOutOfBoundsException if {@code readPosition} is smaller than 0\r\n * or greater than {@link #writePosition()}\r\n * @since 5.0.1\r\n */\r\nDataBuffer readPosition(int readPosition);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#readPosition(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#writePosition()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return the position to which this buffer will write.\r\n * @return the write position\r\n * @since 5.0.1\r\n */\r\nint writePosition();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#writePosition()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#writePosition(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the position to which this buffer will write.\r\n * @param writePosition the new write position\r\n * @return this buffer\r\n * @throws IndexOutOfBoundsException if {@code writePosition} is smaller than\r\n * {@link #readPosition()} or greater than {@link #capacity()}\r\n * @since 5.0.1\r\n */\r\nDataBuffer writePosition(int writePosition);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#writePosition(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#getByte(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Read a single byte at the given index from this data buffer.\r\n * @param index the index at which the byte will be read\r\n * @return the byte at the given index\r\n * @throws IndexOutOfBoundsException when {@code index} is out of bounds\r\n * @since 5.0.4\r\n */\r\nbyte getByte(int index);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#getByte(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#read()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Read a single byte from the current reading position from this data buffer.\r\n * @return the byte at this buffer's current reading position\r\n */\r\nbyte read();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#read()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#read(byte[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Read this buffer's data into the specified destination, starting at the current\r\n * reading position of this buffer.\r\n * @param destination the array into which the bytes are to be written\r\n * @return this buffer\r\n */\r\nDataBuffer read(byte[] destination);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#read(byte[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#read(byte[],int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Read at most {@code length} bytes of this buffer into the specified destination,\r\n * starting at the current reading position of this buffer.\r\n * @param destination the array into which the bytes are to be written\r\n * @param offset the index within {@code destination} of the first byte to be written\r\n * @param length the maximum number of bytes to be written in {@code destination}\r\n * @return this buffer\r\n */\r\nDataBuffer read(byte[] destination, int offset, int length);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#read(byte[],int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#write(byte)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Write a single byte into this buffer at the current writing position.\r\n * @param b the byte to be written\r\n * @return this buffer\r\n */\r\nDataBuffer write(byte b);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#write(byte)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#write(byte[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Write the given source into this buffer, starting at the current writing position\r\n * of this buffer.\r\n * @param source the bytes to be written into this buffer\r\n * @return this buffer\r\n */\r\nDataBuffer write(byte[] source);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBuffer#write(byte[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBuffer#write(byte[],int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Write at most {@code length} bytes of the given source into this buffer, starting\r\n * at the current writing position of this buffer.\r\n * @param source the bytes to be written into this buffer\r\n * @param offset the index within {@code source} to start writing from\r\n * @param length the maximum number of bytes to be written from {@code source}\r\n * @return this buffer\r\n */\r\nDataBuffer write(byte[] source, int offset, int length);",
    "tailType": "method_code"
  }
]