[
  {
    "head": "org.springframework.core.io.FileSystemResource#contentLength()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#lastModified()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation returns the underlying File/Path last-modified time.\r\n */\r\n@Override\r\npublic long lastModified() throws IOException {\r\n    if (this.file != null) {\r\n        return super.lastModified();\r\n    } else {\r\n        try {\r\n            return Files.getLastModifiedTime(this.filePath).toMillis();\r\n        } catch (NoSuchFileException ex) {\r\n            throw new FileNotFoundException(ex.getMessage());\r\n        }\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.FileSystemResource#lastModified()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#lastModified()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#createRelative(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation creates a FileSystemResource, applying the given path\r\n * relative to the path of the underlying file of this resource descriptor.\r\n * @see org.springframework.util.StringUtils#applyRelativePath(String, String)\r\n */\r\n@Override\r\npublic Resource createRelative(String relativePath) {\r\n    String pathToUse = StringUtils.applyRelativePath(this.path, relativePath);\r\n    return (this.file != null ? new FileSystemResource(pathToUse) : new FileSystemResource(this.filePath.getFileSystem(), pathToUse));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.FileSystemResource#createRelative(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#createRelative(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#getFilename()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation returns the name of the file.\r\n * @see java.io.File#getName()\r\n * @see java.nio.file.Path#getFileName()\r\n */\r\n@Override\r\npublic String getFilename() {\r\n    return (this.file != null ? this.file.getName() : this.filePath.getFileName().toString());\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.FileSystemResource#getFilename()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#getFilename()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#getDescription()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation returns a description that includes the absolute\r\n * path of the file.\r\n * @see java.io.File#getAbsolutePath()\r\n * @see java.nio.file.Path#toAbsolutePath()\r\n */\r\n@Override\r\npublic String getDescription() {\r\n    return \"file [\" + (this.file != null ? this.file.getAbsolutePath() : this.filePath.toAbsolutePath()) + \"]\";\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.FileSystemResource#getDescription()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#getDescription()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#equals(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation compares the underlying file paths.\r\n * @see #getPath()\r\n */\r\n@Override\r\npublic boolean equals(@Nullable Object other) {\r\n    return (this == other || (other instanceof FileSystemResource that && this.path.equals(that.path)));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.FileSystemResource#equals(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#equals(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#hashCode()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * This implementation returns the hash code of the underlying file path.\r\n * @see #getPath()\r\n */\r\n@Override\r\npublic int hashCode() {\r\n    return this.path.hashCode();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.FileSystemResource#hashCode()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource#hashCode()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.FileSystemResource",
    "headType": "class",
    "relation": "extend",
    "tail": "AbstractResource",
    "tailType": "class"
  }
]