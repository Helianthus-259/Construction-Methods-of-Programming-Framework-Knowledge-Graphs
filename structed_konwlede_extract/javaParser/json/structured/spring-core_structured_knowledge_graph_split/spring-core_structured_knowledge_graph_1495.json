[
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#addForFeatureComponentUsesTarget()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#addForFeatureComponentUsesTarget()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#addForFeatureComponentWithSameNameReturnsDifferentInstances()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addForFeatureComponentWithSameNameReturnsDifferentInstances() {\r\n    GeneratedClass generatedClass1 = this.generatedClasses.addForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass2 = this.generatedClasses.addForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    assertThat(generatedClass1).isNotSameAs(generatedClass2);\r\n    assertThat(generatedClass1.getName().simpleName()).endsWith(\"__One\");\r\n    assertThat(generatedClass2.getName().simpleName()).endsWith(\"__One1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#addForFeatureComponentWithSameNameReturnsDifferentInstances()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#addForFeatureComponentWithSameNameReturnsDifferentInstances()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenNewReturnsGeneratedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getOrAddForFeatureComponentWhenNewReturnsGeneratedClass() {\r\n    GeneratedClass generatedClass1 = this.generatedClasses.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass2 = this.generatedClasses.getOrAddForFeatureComponent(\"two\", TestComponent.class, emptyTypeCustomizer);\r\n    assertThat(generatedClass1).isNotNull().isNotEqualTo(generatedClass2);\r\n    assertThat(generatedClass2).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenNewReturnsGeneratedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenNewReturnsGeneratedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureWhenNewReturnsGeneratedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getOrAddForFeatureWhenNewReturnsGeneratedClass() {\r\n    GeneratedClass generatedClass1 = this.generatedClasses.getOrAddForFeature(\"one\", emptyTypeCustomizer);\r\n    GeneratedClass generatedClass2 = this.generatedClasses.getOrAddForFeature(\"two\", emptyTypeCustomizer);\r\n    assertThat(generatedClass1).isNotNull().isNotEqualTo(generatedClass2);\r\n    assertThat(generatedClass2).isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureWhenNewReturnsGeneratedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureWhenNewReturnsGeneratedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenRepeatReturnsSameGeneratedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getOrAddForFeatureComponentWhenRepeatReturnsSameGeneratedClass() {\r\n    GeneratedClass generatedClass1 = this.generatedClasses.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass2 = this.generatedClasses.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass3 = this.generatedClasses.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    assertThat(generatedClass1).isNotNull().isSameAs(generatedClass2).isSameAs(generatedClass3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenRepeatReturnsSameGeneratedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenRepeatReturnsSameGeneratedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureWhenRepeatReturnsSameGeneratedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getOrAddForFeatureWhenRepeatReturnsSameGeneratedClass() {\r\n    GeneratedClass generatedClass1 = this.generatedClasses.getOrAddForFeature(\"one\", emptyTypeCustomizer);\r\n    GeneratedClass generatedClass2 = this.generatedClasses.getOrAddForFeature(\"one\", emptyTypeCustomizer);\r\n    GeneratedClass generatedClass3 = this.generatedClasses.getOrAddForFeature(\"one\", emptyTypeCustomizer);\r\n    assertThat(generatedClass1).isNotNull().isSameAs(generatedClass2).isSameAs(generatedClass3);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureWhenRepeatReturnsSameGeneratedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureWhenRepeatReturnsSameGeneratedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenHasFeatureNamePrefix()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getOrAddForFeatureComponentWhenHasFeatureNamePrefix() {\r\n    GeneratedClasses prefixed = this.generatedClasses.withFeatureNamePrefix(\"prefix\");\r\n    GeneratedClass generatedClass1 = this.generatedClasses.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass2 = this.generatedClasses.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass3 = prefixed.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    GeneratedClass generatedClass4 = prefixed.getOrAddForFeatureComponent(\"one\", TestComponent.class, emptyTypeCustomizer);\r\n    assertThat(generatedClass1).isSameAs(generatedClass2).isNotSameAs(generatedClass3);\r\n    assertThat(generatedClass3).isSameAs(generatedClass4);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenHasFeatureNamePrefix()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.generate.GeneratedClassesTests#getOrAddForFeatureComponentWhenHasFeatureNamePrefix()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]