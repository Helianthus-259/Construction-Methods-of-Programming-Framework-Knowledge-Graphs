[
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedOnClassWithMetaDepth()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedForPlainTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"deprecation\")\r\nvoid isAnnotatedForPlainTypes() {\r\n    assertThat(isAnnotated(Order.class, Documented.class)).isTrue();\r\n    assertThat(isAnnotated(org.springframework.lang.NonNullApi.class, Documented.class)).isTrue();\r\n    assertThat(isAnnotated(org.springframework.lang.NonNullApi.class, Nonnull.class)).isTrue();\r\n    assertThat(isAnnotated(ParametersAreNonnullByDefault.class, Nonnull.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedForPlainTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedForPlainTypes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedForPlainTypes()",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedWithNameOnNonAnnotatedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAnnotatedWithNameOnNonAnnotatedClass() {\r\n    assertThat(isAnnotated(NonAnnotatedClass.class, TX_NAME)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedWithNameOnNonAnnotatedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedWithNameOnNonAnnotatedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedWithNameOnClassWithMetaDepth()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isAnnotatedWithNameOnClassWithMetaDepth() {\r\n    assertThat(isAnnotated(TransactionalComponentClass.class, TransactionalComponent.class.getName())).isTrue();\r\n    assertThat(isAnnotated(SubTransactionalComponentClass.class, TransactionalComponent.class.getName())).as(\"isAnnotated() does not search the class hierarchy.\").isFalse();\r\n    assertThat(isAnnotated(TransactionalComponentClass.class, TX_NAME)).isTrue();\r\n    assertThat(isAnnotated(TransactionalComponentClass.class, Component.class.getName())).isTrue();\r\n    assertThat(isAnnotated(ComposedTransactionalComponentClass.class, TX_NAME)).isTrue();\r\n    assertThat(isAnnotated(ComposedTransactionalComponentClass.class, Component.class.getName())).isTrue();\r\n    assertThat(isAnnotated(ComposedTransactionalComponentClass.class, ComposedTransactionalComponent.class.getName())).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedWithNameOnClassWithMetaDepth()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#isAnnotatedWithNameOnClassWithMetaDepth()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationOnNonAnnotatedClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid hasAnnotationOnNonAnnotatedClass() {\r\n    assertThat(hasAnnotation(NonAnnotatedClass.class, Transactional.class)).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationOnNonAnnotatedClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationOnNonAnnotatedClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationOnClassWithMetaDepth()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid hasAnnotationOnClassWithMetaDepth() {\r\n    assertThat(hasAnnotation(TransactionalComponentClass.class, TransactionalComponent.class)).isTrue();\r\n    assertThat(hasAnnotation(SubTransactionalComponentClass.class, TransactionalComponent.class)).isTrue();\r\n    assertThat(hasAnnotation(TransactionalComponentClass.class, Transactional.class)).isTrue();\r\n    assertThat(hasAnnotation(TransactionalComponentClass.class, Component.class)).isTrue();\r\n    assertThat(hasAnnotation(ComposedTransactionalComponentClass.class, Transactional.class)).isTrue();\r\n    assertThat(hasAnnotation(ComposedTransactionalComponentClass.class, Component.class)).isTrue();\r\n    assertThat(hasAnnotation(ComposedTransactionalComponentClass.class, ComposedTransactionalComponent.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationOnClassWithMetaDepth()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationOnClassWithMetaDepth()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationForPlainTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@SuppressWarnings(\"deprecation\")\r\nvoid hasAnnotationForPlainTypes() {\r\n    assertThat(hasAnnotation(Order.class, Documented.class)).isTrue();\r\n    assertThat(hasAnnotation(org.springframework.lang.NonNullApi.class, Documented.class)).isTrue();\r\n    assertThat(hasAnnotation(org.springframework.lang.NonNullApi.class, Nonnull.class)).isTrue();\r\n    assertThat(hasAnnotation(ParametersAreNonnullByDefault.class, Nonnull.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationForPlainTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#hasAnnotationForPlainTypes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]