[
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#write(ByteBuffer)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer write(ByteBuffer... buffers) {\r\n    return this.delegate.write(buffers);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBufferWrapper#write(ByteBuffer)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#write(ByteBuffer)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#write(CharSequence,Charset)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer write(CharSequence charSequence, Charset charset) {\r\n    return this.delegate.write(charSequence, charset);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBufferWrapper#write(CharSequence,Charset)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#write(CharSequence,Charset)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#slice(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic DataBuffer slice(int index, int length) {\r\n    return this.delegate.slice(index, length);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBufferWrapper#slice(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#slice(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#slice(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#retainedSlice(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic DataBuffer retainedSlice(int index, int length) {\r\n    return this.delegate.retainedSlice(index, length);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBufferWrapper#retainedSlice(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#retainedSlice(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#retainedSlice(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#split(int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer split(int index) {\r\n    return this.delegate.split(index);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBufferWrapper#split(int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#split(int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#asByteBuffer()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Deprecated\r\npublic ByteBuffer asByteBuffer() {\r\n    return this.delegate.asByteBuffer();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.DataBufferWrapper#asByteBuffer()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.DataBufferWrapper#asByteBuffer()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]