[
  {
    "head": "org.springframework.util.AssertTests#notEmptyArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyArrayWithEmptyArray() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty(new String[] ;, \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithNullArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyArrayWithNullArray() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty((Object[]) null, \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyArrayWithNullArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithNullArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyArrayWithMessageSupplier() {\r\n    Assert.notEmpty(new String[] { \"1234\" }, () -> \"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyArrayWithMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArrayAndMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyArrayWithEmptyArrayAndMessageSupplier() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty(new String[] ;, () -> \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArrayAndMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArrayAndMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithNullArrayAndMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyArrayWithNullArrayAndMessageSupplier() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty((Object[]) null, () -> \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyArrayWithNullArrayAndMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithNullArrayAndMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArrayAndNullMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyArrayWithEmptyArrayAndNullMessageSupplier() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty(new String[] ;, (Supplier<String>) null)).withMessage(null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArrayAndNullMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyArrayWithEmptyArrayAndNullMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#noNullElements()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid noNullElements() {\r\n    Assert.noNullElements(new String[] { \"1234\" }, \"enigma\");\r\n}",
    "tailType": "method_code"
  }
]