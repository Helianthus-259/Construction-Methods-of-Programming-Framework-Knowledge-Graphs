[
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubSubInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesOnSubSubInheritedAnnotationInterface() {\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(SubSubInheritedAnnotationInterface.class, Transactional.class);\r\n    assertThat(attributes).as(\"Should find @Transactional on SubSubInheritedAnnotationInterface\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubSubInheritedAnnotationInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubSubInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnNonInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesOnNonInheritedAnnotationInterface() {\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(NonInheritedAnnotationInterface.class, Order.class);\r\n    assertThat(attributes).as(\"Should find @Order on NonInheritedAnnotationInterface\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnNonInheritedAnnotationInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnNonInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubNonInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesOnSubNonInheritedAnnotationInterface() {\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(SubNonInheritedAnnotationInterface.class, Order.class);\r\n    assertThat(attributes).as(\"Should find @Order on SubNonInheritedAnnotationInterface\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubNonInheritedAnnotationInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubNonInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubSubNonInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesOnSubSubNonInheritedAnnotationInterface() {\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(SubSubNonInheritedAnnotationInterface.class, Order.class);\r\n    assertThat(attributes).as(\"Should find @Order on SubSubNonInheritedAnnotationInterface\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubSubNonInheritedAnnotationInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesOnSubSubNonInheritedAnnotationInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromInterfaceMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesInheritedFromInterfaceMethod() throws NoSuchMethodException {\r\n    Method method = ConcreteClassWithInheritedAnnotation.class.getMethod(\"handleFromInterface\");\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(method, Order.class);\r\n    assertThat(attributes).as(\"Should find @Order on ConcreteClassWithInheritedAnnotation.handleFromInterface() method\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromInterfaceMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromInterfaceMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromAbstractMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesInheritedFromAbstractMethod() throws NoSuchMethodException {\r\n    Method method = ConcreteClassWithInheritedAnnotation.class.getMethod(\"handle\");\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(method, Transactional.class);\r\n    assertThat(attributes).as(\"Should find @Transactional on ConcreteClassWithInheritedAnnotation.handle() method\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromAbstractMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromAbstractMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromBridgedMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMergedAnnotationAttributesInheritedFromBridgedMethod() throws NoSuchMethodException {\r\n    Method method = ConcreteClassWithInheritedAnnotation.class.getMethod(\"handleParameterized\", String.class);\r\n    AnnotationAttributes attributes = findMergedAnnotationAttributes(method, Transactional.class);\r\n    assertThat(attributes).as(\"Should find @Transactional on bridged ConcreteClassWithInheritedAnnotation.handleParameterized()\").isNotNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.AnnotatedElementUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.AnnotatedElementUtilsTests#findMergedAnnotationAttributesInheritedFromBridgedMethod()",
    "tailType": "method"
  }
]