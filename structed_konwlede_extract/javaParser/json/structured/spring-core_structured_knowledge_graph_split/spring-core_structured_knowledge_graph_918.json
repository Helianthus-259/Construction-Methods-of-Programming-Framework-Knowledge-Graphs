[
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getProperty(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic <T> T getProperty(String key, Class<T> targetType) {\r\n    return this.propertyResolver.getProperty(key, targetType);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>,T)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <T> T getProperty(String key, Class<T> targetType, T defaultValue) {\r\n    return this.propertyResolver.getProperty(key, targetType, defaultValue);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>,T)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getProperty(String,Class<T>,T)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getRequiredProperty(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String getRequiredProperty(String key) throws IllegalStateException {\r\n    return this.propertyResolver.getRequiredProperty(key);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.AbstractEnvironment#getRequiredProperty(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getRequiredProperty(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getRequiredProperty(String,Class<T>)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic <T> T getRequiredProperty(String key, Class<T> targetType) throws IllegalStateException {\r\n    return this.propertyResolver.getRequiredProperty(key, targetType);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.AbstractEnvironment#getRequiredProperty(String,Class<T>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#getRequiredProperty(String,Class<T>)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#resolvePlaceholders(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String resolvePlaceholders(String text) {\r\n    return this.propertyResolver.resolvePlaceholders(text);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.AbstractEnvironment#resolvePlaceholders(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#resolvePlaceholders(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#resolveRequiredPlaceholders(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String resolveRequiredPlaceholders(String text) throws IllegalArgumentException {\r\n    return this.propertyResolver.resolveRequiredPlaceholders(text);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.env.AbstractEnvironment#resolveRequiredPlaceholders(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.env.AbstractEnvironment#resolveRequiredPlaceholders(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]