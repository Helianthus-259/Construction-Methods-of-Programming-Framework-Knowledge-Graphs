[
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.StopWatch#taskList",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.StopWatch#taskList",
    "headType": "field",
    "relation": "haveType",
    "tail": "List<TaskInfo>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.StopWatch#startTimeNanos",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.StopWatch#startTimeNanos",
    "headType": "field",
    "relation": "haveType",
    "tail": "long",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.StopWatch#currentTaskName",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.StopWatch#currentTaskName",
    "headType": "field",
    "relation": "haveType",
    "tail": "String",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.StopWatch#lastTaskInfo",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.StopWatch#lastTaskInfo",
    "headType": "field",
    "relation": "haveType",
    "tail": "TaskInfo",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.StopWatch#taskCount",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.StopWatch#taskCount",
    "headType": "field",
    "relation": "haveType",
    "tail": "int",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.util.StopWatch#totalTimeNanos",
    "tailType": "field"
  },
  {
    "head": "org.springframework.util.StopWatch#totalTimeNanos",
    "headType": "field",
    "relation": "haveType",
    "tail": "long",
    "tailType": "type"
  },
  {
    "head": "org.springframework.util.StopWatch#getId()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Get the id of this {@code StopWatch}, as specified on construction.\r\n * @return the id (empty String by default)\r\n * @since 4.2.2\r\n * @see #StopWatch(String)\r\n */\r\npublic String getId() {\r\n    return this.id;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StopWatch#getId()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StopWatch#setKeepTaskList(boolean)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Configure whether the {@link TaskInfo} array is built over time.\r\n * <p>Set this to {@code false} when using a {@code StopWatch} for millions of\r\n * tasks; otherwise, the {@code TaskInfo} structure will consume excessive memory.\r\n * <p>Default is {@code true}.\r\n */\r\npublic void setKeepTaskList(boolean keepTaskList) {\r\n    this.taskList = (keepTaskList ? new ArrayList<>() : null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StopWatch#setKeepTaskList(boolean)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StopWatch#start()",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Start an unnamed task.\r\n * <p>The results are undefined if {@link #stop()} or timing methods are\r\n * called without invoking this method first.\r\n * @see #start(String)\r\n * @see #stop()\r\n */\r\npublic void start() throws IllegalStateException {\r\n    start(\"\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StopWatch#start()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.StopWatch#start(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Start a named task.\r\n * <p>The results are undefined if {@link #stop()} or timing methods are\r\n * called without invoking this method first.\r\n * @param taskName the name of the task to start\r\n * @see #start()\r\n * @see #stop()\r\n */\r\npublic void start(String taskName) throws IllegalStateException {\r\n    if (this.currentTaskName != null) {\r\n        throw new IllegalStateException(\"Can't start StopWatch: it's already running\");\r\n    }\r\n    this.currentTaskName = taskName;\r\n    this.startTimeNanos = System.nanoTime();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.StopWatch",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.StopWatch#start(String)",
    "tailType": "method"
  }
]