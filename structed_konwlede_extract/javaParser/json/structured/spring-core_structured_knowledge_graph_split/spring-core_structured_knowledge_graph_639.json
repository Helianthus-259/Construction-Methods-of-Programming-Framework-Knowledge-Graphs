[
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.Enhancer#superclass",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#superclass",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.Enhancer#argumentTypes",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#argumentTypes",
    "headType": "field",
    "relation": "haveType",
    "tail": "Class",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.Enhancer#arguments",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#arguments",
    "headType": "field",
    "relation": "haveType",
    "tail": "Object",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.Enhancer#useFactory",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#useFactory",
    "headType": "field",
    "relation": "haveType",
    "tail": "boolean",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.Enhancer#serialVersionUID",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#serialVersionUID",
    "headType": "field",
    "relation": "haveType",
    "tail": "Long",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.cglib.proxy.Enhancer#interceptDuringConstruction",
    "tailType": "field"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#interceptDuringConstruction",
    "headType": "field",
    "relation": "haveType",
    "tail": "boolean",
    "tailType": "type"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#setSuperclass(Class)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the class which the generated class will extend. As a convenience,\r\n * if the supplied superclass is actually an interface, <code>setInterfaces</code>\r\n * will be called with the appropriate argument instead.\r\n * A non-interface argument must not be declared as final, and must have an\r\n * accessible constructor.\r\n * @param superclass class to extend or interface to implement\r\n * @see #setInterfaces(Class[])\r\n */\r\npublic void setSuperclass(Class superclass) {\r\n    if (superclass != null && superclass.isInterface()) {\r\n        setInterfaces(new Class[] { superclass });\r\n        // SPRING PATCH BEGIN\r\n        setContextClass(superclass);\r\n        // SPRING PATCH END\r\n    } else if (superclass != null && superclass.equals(Object.class)) {\r\n        // affects choice of ClassLoader\r\n        this.superclass = null;\r\n    } else {\r\n        this.superclass = superclass;\r\n        // SPRING PATCH BEGIN\r\n        setContextClass(superclass);\r\n        // SPRING PATCH END\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Enhancer#setSuperclass(Class)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#setInterfaces(Class[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the interfaces to implement. The <code>Factory</code> interface will\r\n * always be implemented regardless of what is specified here.\r\n * @param interfaces array of interfaces to implement, or null\r\n * @see Factory\r\n */\r\npublic void setInterfaces(Class[] interfaces) {\r\n    this.interfaces = interfaces;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Enhancer#setInterfaces(Class[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#setCallbackFilter(CallbackFilter)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the {@link CallbackFilter} used to map the generated class' methods\r\n * to a particular callback index.\r\n * New object instances will always use the same mapping, but may use different\r\n * actual callback objects.\r\n * @param filter the callback filter to use when generating a new class\r\n * @see #setCallbacks\r\n */\r\npublic void setCallbackFilter(CallbackFilter filter) {\r\n    this.filter = filter;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Enhancer#setCallbackFilter(CallbackFilter)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer#setCallback(Callback)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Set the single {@link Callback} to use.\r\n * Ignored if you use {@link #createClass}.\r\n * @param callback the callback to use for all methods\r\n * @see #setCallbacks\r\n */\r\npublic void setCallback(final Callback callback) {\r\n    setCallbacks(new Callback[] { callback });\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.proxy.Enhancer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.proxy.Enhancer#setCallback(Callback)",
    "tailType": "method"
  }
]