[
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHash(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code for the given elements, delegating to\r\n * {@link #nullSafeHashCode(Object)} for each element. Contrary\r\n * to {@link Objects#hash(Object...)}, this method can handle an\r\n * element that is an array.\r\n * @param elements the elements to be hashed\r\n * @return a hash value of the elements\r\n * @since 6.1\r\n */\r\npublic static int nullSafeHash(@Nullable Object@Nullable ... elements) {\r\n    if (elements == null) {\r\n        return 0;\r\n    }\r\n    int result = 1;\r\n    for (Object element : elements) {\r\n        result = 31 * result + nullSafeHashCode(element);\r\n    }\r\n    return result;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHash(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code for the given object; typically the value of\r\n * {@code Object#hashCode()}}. If the object is an array,\r\n * this method will delegate to any of the {@code Arrays.hashCode}\r\n * methods. If the object is {@code null}, this method returns 0.\r\n * @see Object#hashCode()\r\n * @see Arrays\r\n */\r\npublic static int nullSafeHashCode(@Nullable Object obj) {\r\n    if (obj == null) {\r\n        return 0;\r\n    }\r\n    if (obj.getClass().isArray()) {\r\n        if (obj instanceof Object[] objects) {\r\n            return Arrays.hashCode(objects);\r\n        }\r\n        if (obj instanceof boolean[] booleans) {\r\n            return Arrays.hashCode(booleans);\r\n        }\r\n        if (obj instanceof byte[] bytes) {\r\n            return Arrays.hashCode(bytes);\r\n        }\r\n        if (obj instanceof char[] chars) {\r\n            return Arrays.hashCode(chars);\r\n        }\r\n        if (obj instanceof double[] doubles) {\r\n            return Arrays.hashCode(doubles);\r\n        }\r\n        if (obj instanceof float[] floats) {\r\n            return Arrays.hashCode(floats);\r\n        }\r\n        if (obj instanceof int[] ints) {\r\n            return Arrays.hashCode(ints);\r\n        }\r\n        if (obj instanceof long[] longs) {\r\n            return Arrays.hashCode(longs);\r\n        }\r\n        if (obj instanceof short[] shorts) {\r\n            return Arrays.hashCode(shorts);\r\n        }\r\n    }\r\n    return obj.hashCode();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHashCode(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(Object[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code based on the contents of the specified array.\r\n * If {@code array} is {@code null}, this method returns 0.\r\n * @deprecated as of 6.1 in favor of {@link Arrays#hashCode(Object[])}\r\n */\r\n@Deprecated(since = \"6.1\")\r\npublic static int nullSafeHashCode(Object @Nullable [] array) {\r\n    return Arrays.hashCode(array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHashCode(Object[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(Object[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(boolean[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code based on the contents of the specified array.\r\n * If {@code array} is {@code null}, this method returns 0.\r\n * @deprecated as of 6.1 in favor of {@link Arrays#hashCode(boolean[])}\r\n */\r\n@Deprecated(since = \"6.1\")\r\npublic static int nullSafeHashCode(boolean @Nullable [] array) {\r\n    return Arrays.hashCode(array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHashCode(boolean[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(boolean[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(byte[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code based on the contents of the specified array.\r\n * If {@code array} is {@code null}, this method returns 0.\r\n * @deprecated as of 6.1 in favor of {@link Arrays#hashCode(byte[])}\r\n */\r\n@Deprecated(since = \"6.1\")\r\npublic static int nullSafeHashCode(byte @Nullable [] array) {\r\n    return Arrays.hashCode(array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHashCode(byte[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(byte[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(char[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code based on the contents of the specified array.\r\n * If {@code array} is {@code null}, this method returns 0.\r\n * @deprecated as of 6.1 in favor of {@link Arrays#hashCode(char[])}\r\n */\r\n@Deprecated(since = \"6.1\")\r\npublic static int nullSafeHashCode(char @Nullable [] array) {\r\n    return Arrays.hashCode(array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHashCode(char[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(char[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(double[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code based on the contents of the specified array.\r\n * If {@code array} is {@code null}, this method returns 0.\r\n * @deprecated as of 6.1 in favor of {@link Arrays#hashCode(double[])}\r\n */\r\n@Deprecated(since = \"6.1\")\r\npublic static int nullSafeHashCode(double @Nullable [] array) {\r\n    return Arrays.hashCode(array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtils",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtils#nullSafeHashCode(double[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(double[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtils#nullSafeHashCode(float[])",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Return a hash code based on the contents of the specified array.\r\n * If {@code array} is {@code null}, this method returns 0.\r\n * @deprecated as of 6.1 in favor of {@link Arrays#hashCode(float[])}\r\n */\r\n@Deprecated(since = \"6.1\")\r\npublic static int nullSafeHashCode(float @Nullable [] array) {\r\n    return Arrays.hashCode(array);\r\n}",
    "tailType": "method_code"
  }
]