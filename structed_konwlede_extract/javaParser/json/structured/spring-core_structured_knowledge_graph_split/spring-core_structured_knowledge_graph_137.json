[
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyCollectionWithMessageSupplier() {\r\n    Assert.notEmpty(singletonList(\"foo\"), () -> \"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyCollectionWithMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithEmptyCollectionAndMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyCollectionWithEmptyCollectionAndMessageSupplier() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty(emptyList(), () -> \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyCollectionWithEmptyCollectionAndMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithEmptyCollectionAndMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithNullCollectionAndMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyCollectionWithNullCollectionAndMessageSupplier() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty((Collection<?>) null, () -> \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyCollectionWithNullCollectionAndMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithNullCollectionAndMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithEmptyCollectionAndNullMessageSupplier()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyCollectionWithEmptyCollectionAndNullMessageSupplier() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty(emptyList(), (Supplier<String>) null)).withMessage(null);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyCollectionWithEmptyCollectionAndNullMessageSupplier()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyCollectionWithEmptyCollectionAndNullMessageSupplier()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyMap() {\r\n    Assert.notEmpty(singletonMap(\"foo\", \"bar\"), \"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyMap()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyMap()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyMapWithNullMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyMapWithNullMap() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty((Map<?, ?>) null, \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyMapWithNullMap()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyMapWithNullMap()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.AssertTests#notEmptyMapWithEmptyMap()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid notEmptyMapWithEmptyMap() {\r\n    assertThatIllegalArgumentException().isThrownBy(() -> Assert.notEmpty(emptyMap(), \"enigma\")).withMessageContaining(\"enigma\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.AssertTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.AssertTests#notEmptyMapWithEmptyMap()",
    "tailType": "method"
  }
]