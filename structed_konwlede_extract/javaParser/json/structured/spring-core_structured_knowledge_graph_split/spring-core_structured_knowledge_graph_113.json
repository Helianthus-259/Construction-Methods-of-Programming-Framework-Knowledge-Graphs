[
  {
    "head": "org.springframework.tests.sample.objects.ITestInterface",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.tests.sample.objects;\n\n\npublic interface ITestInterface {\n\n\tvoid absquatulate();\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestInterface#absquatulate()",
    "headType": "method",
    "relation": "provide",
    "tail": "void absquatulate();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestInterface",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.tests.sample.objects.ITestInterface#absquatulate()",
    "tailType": "method"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.aot.hint.annotation",
    "tailType": "package"
  },
  {
    "head": "org.springframework.aot.hint.annotation",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor",
    "tailType": "class"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2024 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.aot.hint.annotation;\n\nimport org.springframework.aot.hint.BindingReflectionHintsRegistrar;\nimport org.springframework.aot.hint.MemberCategory;\nimport org.springframework.aot.hint.ReflectionHints;\n\n/**\n * A {@link ReflectiveProcessor} implementation that registers reflection hints\n * for data binding purpose, that is class, constructors, fields, properties,\n * record components, including types transitively used on properties and record\n * components.\n *\n * @author Sebastien Deleuze\n * @author Stephane Nicoll\n * @since 6.0\n * @see RegisterReflectionForBinding @RegisterReflectionForBinding\n */\nclass RegisterReflectionForBindingProcessor extends RegisterReflectionReflectiveProcessor {\n\n\tprivate final BindingReflectionHintsRegistrar bindingRegistrar = new BindingReflectionHintsRegistrar();\n\n\t@Override\n\tprotected void registerReflectionHints(ReflectionHints hints, Class<?> target, MemberCategory[] memberCategories) {\n\t\tthis.bindingRegistrar.registerReflectionHints(hints, target);\n\t}\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor#bindingRegistrar",
    "tailType": "field"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor#bindingRegistrar",
    "headType": "field",
    "relation": "haveType",
    "tail": "BindingReflectionHintsRegistrar",
    "tailType": "type"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor#registerReflectionHints(ReflectionHints,Class<?>,MemberCategory[])",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\nprotected void registerReflectionHints(ReflectionHints hints, Class<?> target, MemberCategory[] memberCategories) {\r\n    this.bindingRegistrar.registerReflectionHints(hints, target);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor#registerReflectionHints(ReflectionHints,Class<?>,MemberCategory[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor#registerReflectionHints(ReflectionHints,Class<?>,MemberCategory[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.aot.hint.annotation.RegisterReflectionForBindingProcessor",
    "headType": "class",
    "relation": "extend",
    "tail": "RegisterReflectionReflectiveProcessor",
    "tailType": "class"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.tests.sample.objects",
    "tailType": "package"
  },
  {
    "head": "org.springframework.tests.sample.objects",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.tests.sample.objects.ITestObject",
    "tailType": "class"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestObject",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.tests.sample.objects;\n\npublic interface ITestObject {\n\n\tString getName();\n\n\tvoid setName(String name);\n\n\tint getAge();\n\n\tvoid setAge(int age);\n\n\tTestObject getSpouse();\n\n\tvoid setSpouse(TestObject spouse);\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestObject#getName()",
    "headType": "method",
    "relation": "provide",
    "tail": "String getName();",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestObject",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.tests.sample.objects.ITestObject#getName()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestObject#setName(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "void setName(String name);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestObject",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.tests.sample.objects.ITestObject#setName(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.tests.sample.objects.ITestObject#getAge()",
    "headType": "method",
    "relation": "provide",
    "tail": "int getAge();",
    "tailType": "method_code"
  }
]