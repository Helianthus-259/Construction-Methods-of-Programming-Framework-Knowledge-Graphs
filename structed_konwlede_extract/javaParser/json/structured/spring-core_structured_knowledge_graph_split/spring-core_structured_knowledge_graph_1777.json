[
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getComposedPlusLocalAnnotationsOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getComposedPlusLocalAnnotationsOnClass() {\r\n    assertGetAllMergedAnnotationsBehavior(ComposedPlusLocalCachesClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getComposedPlusLocalAnnotationsOnClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getComposedPlusLocalAnnotationsOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getMultipleComposedAnnotationsOnInterface() {\r\n    Class<MultipleComposedCachesOnInterfaceClass> element = MultipleComposedCachesOnInterfaceClass.class;\r\n    Set<Cacheable> cacheables = getAllMergedAnnotations(element, Cacheable.class);\r\n    assertThat(cacheables).isNotNull();\r\n    assertThat(cacheables).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getMultipleComposedAnnotationsOnMethod() throws Exception {\r\n    AnnotatedElement element = getClass().getDeclaredMethod(\"multipleComposedCachesMethod\");\r\n    assertGetAllMergedAnnotationsBehavior(element);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getComposedPlusLocalAnnotationsOnMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getComposedPlusLocalAnnotationsOnMethod() throws Exception {\r\n    AnnotatedElement element = getClass().getDeclaredMethod(\"composedPlusLocalCachesMethod\");\r\n    assertGetAllMergedAnnotationsBehavior(element);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getComposedPlusLocalAnnotationsOnMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getComposedPlusLocalAnnotationsOnMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnBridgeMethod()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Disabled(\"Disabled since some Java 8 updates handle the bridge method differently\")\r\nvoid getMultipleComposedAnnotationsOnBridgeMethod() {\r\n    Set<Cacheable> cacheables = getAllMergedAnnotations(getBridgeMethod(), Cacheable.class);\r\n    assertThat(cacheables).isNotNull();\r\n    assertThat(cacheables).isEmpty();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnBridgeMethod()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnBridgeMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#getMultipleComposedAnnotationsOnBridgeMethod()",
    "headType": "method",
    "relation": "use",
    "tail": "@Disabled",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#findMultipleComposedAnnotationsOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMultipleComposedAnnotationsOnClass() {\r\n    assertFindAllMergedAnnotationsBehavior(MultipleComposedCachesClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#findMultipleComposedAnnotationsOnClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#findMultipleComposedAnnotationsOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MultipleComposedAnnotationsOnSingleAnnotatedElementTests#findMultipleInheritedComposedAnnotationsOnSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid findMultipleInheritedComposedAnnotationsOnSuperclass() {\r\n    assertFindAllMergedAnnotationsBehavior(SubMultipleComposedCachesClass.class);\r\n}",
    "tailType": "method_code"
  }
]