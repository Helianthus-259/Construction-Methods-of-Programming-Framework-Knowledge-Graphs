[
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithBytePrimitiveClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithBytePrimitiveClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(byte.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithBytePrimitiveClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithBytePrimitiveClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithByteWrapperClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithByteWrapperClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(Byte.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithByteWrapperClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithByteWrapperClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithCharacterClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithCharacterClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(Character.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithCharacterClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithCharacterClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithCharClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithCharClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(char.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithCharClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithCharClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithDoublePrimitiveClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithDoublePrimitiveClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(double.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithDoublePrimitiveClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithDoublePrimitiveClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithDoubleWrapperClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithDoubleWrapperClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(Double.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithDoubleWrapperClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithDoubleWrapperClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithFloatPrimitiveClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isPrimitiveOrWrapperWithFloatPrimitiveClass() {\r\n    assertThat(ClassUtils.isPrimitiveOrWrapper(float.class)).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#isPrimitiveOrWrapperWithFloatPrimitiveClass()",
    "tailType": "method"
  }
]