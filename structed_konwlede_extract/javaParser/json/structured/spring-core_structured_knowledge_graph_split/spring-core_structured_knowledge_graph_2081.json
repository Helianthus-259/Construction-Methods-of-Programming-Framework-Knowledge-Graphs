[
  {
    "head": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithHigherPriority()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid comparePriorityOrderedInstanceToStandardOrderedInstanceWithHigherPriority() {\r\n    assertThatPriorityOrderedAlwaysWins(new StubPriorityOrdered(200), new StubOrdered(100));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithHigherPriority()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithHigherPriority()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithSamePriority()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid comparePriorityOrderedInstanceToStandardOrderedInstanceWithSamePriority() {\r\n    assertThatPriorityOrderedAlwaysWins(new StubPriorityOrdered(100), new StubOrdered(100));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithSamePriority()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithSamePriority()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithLowerPriority()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid comparePriorityOrderedInstanceToStandardOrderedInstanceWithLowerPriority() {\r\n    assertThatPriorityOrderedAlwaysWins(new StubPriorityOrdered(100), new StubOrdered(200));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithLowerPriority()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#comparePriorityOrderedInstanceToStandardOrderedInstanceWithLowerPriority()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#assertThatPriorityOrderedAlwaysWins(StubPriorityOrdered,StubOrdered)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void assertThatPriorityOrderedAlwaysWins(StubPriorityOrdered priority, StubOrdered standard) {\r\n    assertThat(this.comparator.compare(priority, standard)).isEqualTo(-1);\r\n    assertThat(this.comparator.compare(standard, priority)).isEqualTo(1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#assertThatPriorityOrderedAlwaysWins(StubPriorityOrdered,StubOrdered)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#compareWithSimpleSourceProvider()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid compareWithSimpleSourceProvider() {\r\n    Comparator<Object> customComparator = this.comparator.withSourceProvider(new TestSourceProvider(5L, new StubOrdered(25)));\r\n    assertThat(customComparator.compare(new StubOrdered(10), 5L)).isEqualTo(-1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#compareWithSimpleSourceProvider()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#compareWithSimpleSourceProvider()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#compareWithSourceProviderArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid compareWithSourceProviderArray() {\r\n    Comparator<Object> customComparator = this.comparator.withSourceProvider(new TestSourceProvider(5L, new Object[] { new StubOrdered(10), new StubOrdered(-25) }));\r\n    assertThat(customComparator.compare(5L, new Object())).isEqualTo(-1);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#compareWithSourceProviderArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#compareWithSourceProviderArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#compareWithSourceProviderArrayNoMatch()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid compareWithSourceProviderArrayNoMatch() {\r\n    Comparator<Object> customComparator = this.comparator.withSourceProvider(new TestSourceProvider(5L, new Object[] { new Object(), new Object() }));\r\n    assertThat(customComparator.compare(new Object(), 5L)).isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.OrderComparatorTests#compareWithSourceProviderArrayNoMatch()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.OrderComparatorTests#compareWithSourceProviderArrayNoMatch()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]