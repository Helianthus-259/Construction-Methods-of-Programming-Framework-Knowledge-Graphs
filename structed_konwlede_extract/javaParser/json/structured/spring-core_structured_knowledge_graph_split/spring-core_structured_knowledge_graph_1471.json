[
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeStartElement(String,String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#doWriteStartElement(StartElement)",
    "headType": "method",
    "relation": "provide",
    "tail": "private void doWriteStartElement(StartElement startElement) throws XMLStreamException {\r\n    this.eventWriter.add(startElement);\r\n    this.endElements.add(this.eventFactory.createEndElement(startElement.getName(), startElement.getNamespaces()));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#doWriteStartElement(StartElement)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeEmptyElement(String localName) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    writeStartElement(localName);\r\n    this.emptyElement = true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeEmptyElement(String namespaceURI, String localName) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    writeStartElement(namespaceURI, localName);\r\n    this.emptyElement = true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String,String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeEmptyElement(String prefix, String localName, String namespaceURI) throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    writeStartElement(prefix, localName, namespaceURI);\r\n    this.emptyElement = true;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String,String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEmptyElement(String,String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#closeEmptyElementIfNecessary()",
    "headType": "method",
    "relation": "provide",
    "tail": "private void closeEmptyElementIfNecessary() throws XMLStreamException {\r\n    if (this.emptyElement) {\r\n        this.emptyElement = false;\r\n        writeEndElement();\r\n    }\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#closeEmptyElementIfNecessary()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEndElement()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeEndElement() throws XMLStreamException {\r\n    closeEmptyElementIfNecessary();\r\n    int last = this.endElements.size() - 1;\r\n    EndElement lastEndElement = this.endElements.remove(last);\r\n    this.eventWriter.add(lastEndElement);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeEndElement()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeEndElement()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeAttribute(String,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void writeAttribute(String localName, String value) throws XMLStreamException {\r\n    this.eventWriter.add(this.eventFactory.createAttribute(localName, value));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.xml.XMLEventStreamWriter#writeAttribute(String,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.xml.XMLEventStreamWriter#writeAttribute(String,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]