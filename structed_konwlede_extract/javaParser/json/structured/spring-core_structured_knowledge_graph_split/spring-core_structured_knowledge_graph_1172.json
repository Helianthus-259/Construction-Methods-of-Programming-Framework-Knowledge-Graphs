[
  {
    "head": "org.springframework.core.style.ToStringCreator",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringCreator#toString()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringCreator#toString()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.style",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.style",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.style.ToStringStyler",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.style;\n\nimport org.jspecify.annotations.Nullable;\n\n/**\n * A strategy interface for pretty-printing {@code toString()} methods.\n * Encapsulates the print algorithms; some other object such as a builder\n * should provide the workflow.\n *\n * @author Keith Donald\n * @since 1.2.2\n */\npublic interface ToStringStyler {\n\n\t/**\n\t * Style a {@code toString()}'ed object before its fields are styled.\n\t * @param buffer the buffer to print to\n\t * @param obj the object to style\n\t */\n\tvoid styleStart(StringBuilder buffer, Object obj);\n\n\t/**\n\t * Style a {@code toString()}'ed object after it's fields are styled.\n\t * @param buffer the buffer to print to\n\t * @param obj the object to style\n\t */\n\tvoid styleEnd(StringBuilder buffer, Object obj);\n\n\t/**\n\t * Style a field value as a string.\n\t * @param buffer the buffer to print to\n\t * @param fieldName the name of the field\n\t * @param value the field value\n\t */\n\tvoid styleField(StringBuilder buffer, String fieldName, @Nullable Object value);\n\n\t/**\n\t * Style the given value.\n\t * @param buffer the buffer to print to\n\t * @param value the field value\n\t */\n\tvoid styleValue(StringBuilder buffer, Object value);\n\n\t/**\n\t * Style the field separator.\n\t * @param buffer the buffer to print to\n\t */\n\tvoid styleFieldSeparator(StringBuilder buffer);\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler#styleStart(StringBuilder,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Style a {@code toString()}'ed object before its fields are styled.\r\n * @param buffer the buffer to print to\r\n * @param obj the object to style\r\n */\r\nvoid styleStart(StringBuilder buffer, Object obj);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringStyler#styleStart(StringBuilder,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler#styleEnd(StringBuilder,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Style a {@code toString()}'ed object after it's fields are styled.\r\n * @param buffer the buffer to print to\r\n * @param obj the object to style\r\n */\r\nvoid styleEnd(StringBuilder buffer, Object obj);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringStyler#styleEnd(StringBuilder,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler#styleField(StringBuilder,String,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Style a field value as a string.\r\n * @param buffer the buffer to print to\r\n * @param fieldName the name of the field\r\n * @param value the field value\r\n */\r\nvoid styleField(StringBuilder buffer, String fieldName, @Nullable Object value);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringStyler#styleField(StringBuilder,String,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler#styleValue(StringBuilder,Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Style the given value.\r\n * @param buffer the buffer to print to\r\n * @param value the field value\r\n */\r\nvoid styleValue(StringBuilder buffer, Object value);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringStyler#styleValue(StringBuilder,Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler#styleFieldSeparator(StringBuilder)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Style the field separator.\r\n * @param buffer the buffer to print to\r\n */\r\nvoid styleFieldSeparator(StringBuilder buffer);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ToStringStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ToStringStyler#styleFieldSeparator(StringBuilder)",
    "tailType": "method"
  },
  {
    "head": "spring-core",
    "headType": "module",
    "relation": "has",
    "tail": "org.springframework.core.style",
    "tailType": "package"
  },
  {
    "head": "org.springframework.core.style",
    "headType": "package",
    "relation": "haveClass",
    "tail": "org.springframework.core.style.ValueStyler",
    "tailType": "class"
  },
  {
    "head": "org.springframework.core.style.ValueStyler",
    "headType": "class",
    "relation": "provide",
    "tail": "/*\n * Copyright 2002-2007 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.core.style;\n\nimport org.jspecify.annotations.Nullable;\n\n/**\n * Strategy that encapsulates value String styling algorithms\n * according to Spring conventions.\n *\n * @author Keith Donald\n * @since 1.2.2\n */\npublic interface ValueStyler {\n\n\t/**\n\t * Style the given value, returning a String representation.\n\t * @param value the Object value to style\n\t * @return the styled String\n\t */\n\tString style(@Nullable Object value);\n\n}\n",
    "tailType": "class_code"
  },
  {
    "head": "org.springframework.core.style.ValueStyler#style(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "/**\r\n * Style the given value, returning a String representation.\r\n * @param value the Object value to style\r\n * @return the styled String\r\n */\r\nString style(@Nullable Object value);",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.style.ValueStyler",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.style.ValueStyler#style(Object)",
    "tailType": "method"
  }
]