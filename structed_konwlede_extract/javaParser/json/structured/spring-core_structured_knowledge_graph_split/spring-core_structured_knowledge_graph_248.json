[
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#addIfAbsentWhenAbsent()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addIfAbsentWhenAbsent()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addIfAbsentWhenPresent()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addIfAbsentWhenPresent() {\r\n    map.add(\"key\", \"value1\");\r\n    map.addIfAbsent(\"key\", \"value2\");\r\n    assertThat(map.get(\"key\")).containsExactly(\"value1\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#addIfAbsentWhenPresent()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addIfAbsentWhenPresent()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#set()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid set() {\r\n    map.set(\"key\", \"value1\");\r\n    map.set(\"key\", \"value2\");\r\n    assertThat(map.get(\"key\")).containsExactly(\"value2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#set()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#set()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addAll()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addAll() {\r\n    map.add(\"key\", \"value1\");\r\n    map.addAll(\"key\", Arrays.asList(\"value2\", \"value3\"));\r\n    assertThat(map).hasSize(1);\r\n    assertThat(map.get(\"key\")).containsExactly(\"value1\", \"value2\", \"value3\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#addAll()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addAll()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addAllWithEmptyList()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid addAllWithEmptyList() {\r\n    map.addAll(\"key\", Collections.emptyList());\r\n    assertThat(map).hasSize(1);\r\n    assertThat(map.get(\"key\")).isEmpty();\r\n    assertThat(map.getFirst(\"key\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#addAllWithEmptyList()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#addAllWithEmptyList()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#getFirst()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getFirst() {\r\n    List<String> values = new ArrayList<>(2);\r\n    values.add(\"value1\");\r\n    values.add(\"value2\");\r\n    map.put(\"key\", values);\r\n    assertThat(map.getFirst(\"key\")).isEqualTo(\"value1\");\r\n    assertThat(map.getFirst(\"other\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#getFirst()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#getFirst()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#getFirstWithEmptyList()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid getFirstWithEmptyList() {\r\n    map.put(\"key\", Collections.emptyList());\r\n    assertThat(map.getFirst(\"key\")).isNull();\r\n    assertThat(map.getFirst(\"other\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.LinkedMultiValueMapTests#getFirstWithEmptyList()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.LinkedMultiValueMapTests#getFirstWithEmptyList()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  }
]