[
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata",
    "headType": "class",
    "relation": "haveField",
    "tail": "org.springframework.core.type.StandardAnnotationMetadata#annotationTypes",
    "tailType": "field"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#annotationTypes",
    "headType": "field",
    "relation": "haveType",
    "tail": "Set<String>",
    "tailType": "type"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotations()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic MergedAnnotations getAnnotations() {\r\n    return this.mergedAnnotations;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotations()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotations()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationTypes()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic Set<String> getAnnotationTypes() {\r\n    Set<String> annotationTypes = this.annotationTypes;\r\n    if (annotationTypes == null) {\r\n        annotationTypes = Collections.unmodifiableSet(AnnotationMetadata.super.getAnnotationTypes());\r\n        this.annotationTypes = annotationTypes;\r\n    }\r\n    return annotationTypes;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationTypes()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationTypes()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n@Nullable\r\npublic Map<String, @Nullable Object> getAnnotationAttributes(String annotationName, boolean classValuesAsString) {\r\n    if (this.nestedAnnotationsAsMap) {\r\n        return AnnotationMetadata.super.getAnnotationAttributes(annotationName, classValuesAsString);\r\n    }\r\n    return AnnotatedElementUtils.getMergedAnnotationAttributes(getIntrospectedClass(), annotationName, classValuesAsString, false);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationAttributes(String,boolean)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAllAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\n// Null-safety of Java super method not yet managed\r\n@SuppressWarnings(\"NullAway\")\r\n@Nullable\r\npublic MultiValueMap<String, @Nullable Object> getAllAnnotationAttributes(String annotationName, boolean classValuesAsString) {\r\n    if (this.nestedAnnotationsAsMap) {\r\n        return AnnotationMetadata.super.getAllAnnotationAttributes(annotationName, classValuesAsString);\r\n    }\r\n    return AnnotatedElementUtils.getAllAnnotationAttributes(getIntrospectedClass(), annotationName, classValuesAsString, false);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardAnnotationMetadata#getAllAnnotationAttributes(String,boolean)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAllAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAllAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@SuppressWarnings",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#getAllAnnotationAttributes(String,boolean)",
    "headType": "method",
    "relation": "use",
    "tail": "@Nullable",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#hasAnnotatedMethods(String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean hasAnnotatedMethods(String annotationName) {\r\n    if (AnnotationUtils.isCandidateClass(getIntrospectedClass(), annotationName)) {\r\n        try {\r\n            Method[] methods = ReflectionUtils.getDeclaredMethods(getIntrospectedClass());\r\n            for (Method method : methods) {\r\n                if (isAnnotatedMethod(method, annotationName)) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (Throwable ex) {\r\n            throw new IllegalStateException(\"Failed to introspect annotated methods on \" + getIntrospectedClass(), ex);\r\n        }\r\n    }\r\n    return false;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.type.StandardAnnotationMetadata#hasAnnotatedMethods(String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.type.StandardAnnotationMetadata#hasAnnotatedMethods(String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]