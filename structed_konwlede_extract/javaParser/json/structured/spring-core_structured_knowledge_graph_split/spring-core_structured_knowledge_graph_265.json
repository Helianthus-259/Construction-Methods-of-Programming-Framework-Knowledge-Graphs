[
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#size()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#isEmpty()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid isEmpty() {\r\n    assertThat(this.adapter.isEmpty()).isFalse();\r\n    this.adapter = new MultiToSingleValueMapAdapter<>(new LinkedMultiValueMap<>());\r\n    assertThat(this.adapter.isEmpty()).isTrue();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MultiToSingleValueMapAdapterTests#isEmpty()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#isEmpty()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#containsKey()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid containsKey() {\r\n    assertThat(this.adapter.containsKey(\"foo\")).isTrue();\r\n    assertThat(this.adapter.containsKey(\"qux\")).isTrue();\r\n    assertThat(this.adapter.containsKey(\"corge\")).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MultiToSingleValueMapAdapterTests#containsKey()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#containsKey()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#containsValue()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid containsValue() {\r\n    assertThat(this.adapter.containsValue(\"bar\")).isTrue();\r\n    assertThat(this.adapter.containsValue(\"quux\")).isTrue();\r\n    assertThat(this.adapter.containsValue(\"corge\")).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MultiToSingleValueMapAdapterTests#containsValue()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#containsValue()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#get()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid get() {\r\n    assertThat(this.adapter.get(\"foo\")).isEqualTo(\"bar\");\r\n    assertThat(this.adapter.get(\"qux\")).isEqualTo(\"quux\");\r\n    assertThat(this.adapter.get(\"corge\")).isNull();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MultiToSingleValueMapAdapterTests#get()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#get()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#put()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid put() {\r\n    String result = this.adapter.put(\"foo\", \"bar\");\r\n    assertThat(result).isEqualTo(\"bar\");\r\n    assertThat(this.delegate.get(\"foo\")).containsExactly(\"bar\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MultiToSingleValueMapAdapterTests#put()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#put()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#remove()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid remove() {\r\n    this.adapter.remove(\"foo\");\r\n    assertThat(this.adapter.containsKey(\"foo\")).isFalse();\r\n    assertThat(this.delegate.containsKey(\"foo\")).isFalse();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.MultiToSingleValueMapAdapterTests#remove()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#remove()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.MultiToSingleValueMapAdapterTests#putAll()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid putAll() {\r\n    LinkedHashMap<String, String> map = new LinkedHashMap<>();\r\n    map.put(\"foo\", \"bar\");\r\n    map.put(\"qux\", null);\r\n    this.adapter.putAll(map);\r\n    assertThat(this.adapter.get(\"foo\")).isEqualTo(\"bar\");\r\n    assertThat(this.adapter.get(\"qux\")).isNull();\r\n    assertThat(this.delegate.get(\"foo\")).isEqualTo(List.of(\"bar\"));\r\n    assertThat(this.adapter.get(\"qux\")).isNull();\r\n}",
    "tailType": "method_code"
  }
]