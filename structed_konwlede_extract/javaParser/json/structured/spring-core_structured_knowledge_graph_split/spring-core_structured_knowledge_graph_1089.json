[
  {
    "head": "org.springframework.core.log.CompositeLog#isDebugEnabled()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#isTraceEnabled()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isTraceEnabled() {\r\n    return isEnabled(Log::isTraceEnabled);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#isTraceEnabled()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#isTraceEnabled()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#isEnabled(Predicate<Log>)",
    "headType": "method",
    "relation": "provide",
    "tail": "private boolean isEnabled(Predicate<Log> predicate) {\r\n    return (getLogger(predicate) != NO_OP_LOG);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#isEnabled(Predicate<Log>)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#fatal(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void fatal(Object message) {\r\n    getLogger(Log::isFatalEnabled).fatal(message);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#fatal(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#fatal(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#fatal(Object,Throwable)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void fatal(Object message, Throwable ex) {\r\n    getLogger(Log::isFatalEnabled).fatal(message, ex);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#fatal(Object,Throwable)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#fatal(Object,Throwable)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#error(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void error(Object message) {\r\n    getLogger(Log::isErrorEnabled).error(message);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#error(Object)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#error(Object)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#error(Object,Throwable)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void error(Object message, Throwable ex) {\r\n    getLogger(Log::isErrorEnabled).error(message, ex);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#error(Object,Throwable)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#error(Object,Throwable)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.log.CompositeLog#warn(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void warn(Object message) {\r\n    getLogger(Log::isWarnEnabled).warn(message);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.log.CompositeLog",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.log.CompositeLog#warn(Object)",
    "tailType": "method"
  }
]