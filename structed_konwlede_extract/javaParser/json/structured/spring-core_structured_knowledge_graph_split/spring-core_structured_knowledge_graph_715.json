[
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitLookupSwitchInsn(Label,int[],Label[])",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLookupSwitchInsn(Label,int[],Label[])",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMultiANewArrayInsn(String,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitMultiANewArrayInsn(String desc, int dims) {\r\n    mv1.visitMultiANewArrayInsn(desc, dims);\r\n    mv2.visitMultiANewArrayInsn(desc, dims);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitMultiANewArrayInsn(String,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMultiANewArrayInsn(String,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitTryCatchBlock(Label,Label,Label,String)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitTryCatchBlock(Label start, Label end, Label handler, String type) {\r\n    mv1.visitTryCatchBlock(start, end, handler, type);\r\n    mv2.visitTryCatchBlock(start, end, handler, type);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitTryCatchBlock(Label,Label,Label,String)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitTryCatchBlock(Label,Label,Label,String)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLocalVariable(String,String,String,Label,Label,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitLocalVariable(String name, String desc, String signature, Label start, Label end, int index) {\r\n    mv1.visitLocalVariable(name, desc, signature, start, end, index);\r\n    mv2.visitLocalVariable(name, desc, signature, start, end, index);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitLocalVariable(String,String,String,Label,Label,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLocalVariable(String,String,String,Label,Label,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLineNumber(int,Label)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitLineNumber(int line, Label start) {\r\n    mv1.visitLineNumber(line, start);\r\n    mv2.visitLineNumber(line, start);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitLineNumber(int,Label)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitLineNumber(int,Label)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMaxs(int,int)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitMaxs(int maxStack, int maxLocals) {\r\n    mv1.visitMaxs(maxStack, maxLocals);\r\n    mv2.visitMaxs(maxStack, maxLocals);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitMaxs(int,int)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitMaxs(int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitEnd()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic void visitEnd() {\r\n    mv1.visitEnd();\r\n    mv2.visitEnd();\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.cglib.transform.MethodVisitorTee#visitEnd()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.cglib.transform.MethodVisitorTee#visitEnd()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  }
]