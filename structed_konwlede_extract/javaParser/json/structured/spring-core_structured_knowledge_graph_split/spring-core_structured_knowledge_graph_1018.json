[
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#toByteBuffer(int,ByteBuffer,int,int)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#readableByteBuffers()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer.ByteBufferIterator readableByteBuffers() {\r\n    ByteBuffer[] readable = this.byteBuf.nioBuffers(this.byteBuf.readerIndex(), this.byteBuf.readableBytes());\r\n    return new ByteBufferIterator(readable, true);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#readableByteBuffers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#readableByteBuffers()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#writableByteBuffers()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic DataBuffer.ByteBufferIterator writableByteBuffers() {\r\n    ByteBuffer[] writable = this.byteBuf.nioBuffers(this.byteBuf.writerIndex(), this.byteBuf.writableBytes());\r\n    return new ByteBufferIterator(writable, false);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#writableByteBuffers()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#writableByteBuffers()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#toString(Charset)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString(Charset charset) {\r\n    Assert.notNull(charset, \"Charset must not be null\");\r\n    return this.byteBuf.toString(charset);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#toString(Charset)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#toString(Charset)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#toString(int,int,Charset)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic String toString(int index, int length, Charset charset) {\r\n    Assert.notNull(charset, \"Charset must not be null\");\r\n    return this.byteBuf.toString(index, length, charset);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#toString(int,int,Charset)",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#toString(int,int,Charset)",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#isAllocated()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic boolean isAllocated() {\r\n    return this.byteBuf.refCnt() > 0;\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#isAllocated()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#isAllocated()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#retain()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic PooledDataBuffer retain() {\r\n    return new NettyDataBuffer(this.byteBuf.retain(), this.dataBufferFactory);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.io.buffer.NettyDataBuffer#retain()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#retain()",
    "headType": "method",
    "relation": "use",
    "tail": "@Override",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.io.buffer.NettyDataBuffer#touch(Object)",
    "headType": "method",
    "relation": "provide",
    "tail": "@Override\r\npublic PooledDataBuffer touch(Object hint) {\r\n    this.byteBuf.touch(hint);\r\n    return this;\r\n}",
    "tailType": "method_code"
  }
]