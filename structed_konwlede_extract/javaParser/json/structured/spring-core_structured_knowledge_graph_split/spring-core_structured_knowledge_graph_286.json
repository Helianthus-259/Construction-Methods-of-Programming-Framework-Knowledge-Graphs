[
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullFloatArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullFloatArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullFloatArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithFloatArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithFloatArray() {\r\n    float[] array = { 9.6f, 7.4f };\r\n    int actual = ObjectUtils.nullSafeHashCode(array);\r\n    assertThat(actual).isEqualTo(Arrays.hashCode(array));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithFloatArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithFloatArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithFloatArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithObjectBeingFloatArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithObjectBeingFloatArray() {\r\n    Object array = new float[] { 9.9f, 9.54f };\r\n    int expected = ObjectUtils.nullSafeHashCode((float[]) array);\r\n    assertEqualHashCodes(expected, array);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithObjectBeingFloatArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithObjectBeingFloatArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithObjectBeingFloatArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullIntArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithNullIntArray() {\r\n    int[] array = null;\r\n    assertThat(ObjectUtils.nullSafeHashCode(array)).isEqualTo(0);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullIntArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullIntArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithNullIntArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithIntArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithIntArray() {\r\n    int[] array = { 884, 340 };\r\n    int actual = ObjectUtils.nullSafeHashCode(array);\r\n    assertThat(actual).isEqualTo(Arrays.hashCode(array));\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithIntArray()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithIntArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithIntArray()",
    "headType": "method",
    "relation": "use",
    "tail": "@Deprecated",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.util.ObjectUtilsTests#nullSafeHashCodeWithObjectBeingIntArray()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\n@Deprecated\r\nvoid nullSafeHashCodeWithObjectBeingIntArray() {\r\n    Object array = new int[] { 89, 32 };\r\n    int expected = ObjectUtils.nullSafeHashCode((int[]) array);\r\n    assertEqualHashCodes(expected, array);\r\n}",
    "tailType": "method_code"
  }
]