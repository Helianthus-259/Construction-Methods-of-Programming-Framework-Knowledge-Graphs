[
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleComposedAnnotationsOnClass() {\r\n    assertTypeHierarchyStrategyBehavior(MultipleComposedCachesClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleInheritedComposedAnnotationsOnSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleInheritedComposedAnnotationsOnSuperclass() {\r\n    assertTypeHierarchyStrategyBehavior(SubMultipleComposedCachesClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleInheritedComposedAnnotationsOnSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleInheritedComposedAnnotationsOnSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnClass() {\r\n    MergedAnnotations annotations = MergedAnnotations.from(MultipleNoninheritedComposedCachesClass.class, SearchStrategy.TYPE_HIERARCHY);\r\n    assertThat(stream(annotations, \"value\")).containsExactly(\"noninheritedCache1\", \"noninheritedCache2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnSuperclass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnSuperclass() {\r\n    MergedAnnotations annotations = MergedAnnotations.from(SubMultipleNoninheritedComposedCachesClass.class, SearchStrategy.TYPE_HIERARCHY);\r\n    assertThat(stream(annotations, \"value\")).containsExactly(\"noninheritedCache1\", \"noninheritedCache2\");\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnSuperclass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleNoninheritedComposedAnnotationsOnSuperclass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedPlusLocalAnnotationsOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyComposedPlusLocalAnnotationsOnClass() {\r\n    assertTypeHierarchyStrategyBehavior(ComposedPlusLocalCachesClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedPlusLocalAnnotationsOnClass()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedPlusLocalAnnotationsOnClass()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnInterface()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyMultipleComposedAnnotationsOnInterface() {\r\n    assertTypeHierarchyStrategyBehavior(MultipleComposedCachesOnInterfaceClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnInterface()",
    "tailType": "method"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyMultipleComposedAnnotationsOnInterface()",
    "headType": "method",
    "relation": "use",
    "tail": "@Test",
    "tailType": "annotation"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedCacheOnInterfaceAndLocalCacheOnClass()",
    "headType": "method",
    "relation": "provide",
    "tail": "@Test\r\nvoid typeHierarchyStrategyComposedCacheOnInterfaceAndLocalCacheOnClass() {\r\n    assertTypeHierarchyStrategyBehavior(ComposedCacheOnInterfaceAndLocalCacheClass.class);\r\n}",
    "tailType": "method_code"
  },
  {
    "head": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests",
    "headType": "class",
    "relation": "haveMethod",
    "tail": "org.springframework.core.annotation.MergedAnnotationsComposedOnSingleAnnotatedElementTests#typeHierarchyStrategyComposedCacheOnInterfaceAndLocalCacheOnClass()",
    "tailType": "method"
  }
]