[
  {
    "entityId": "org.springframework.core.BridgeMethodResolverTests#testInterfaceHierarchy()",
    "entityType": "method",
    "code": "// SPR-16103\r\n@Test\r\nvoid testInterfaceHierarchy() throws Exception {\r\n    doTestHierarchyResolution(FooInterface.class);\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.BridgeMethodResolverTests#doTestHierarchyResolution(Class<?>)",
    "entityType": "method",
    "code": "private void doTestHierarchyResolution(Class<?> clazz) throws Exception {\r\n    for (Method method : clazz.getDeclaredMethods()) {\r\n        Method bridged = BridgeMethodResolver.findBridgedMethod(method);\r\n        Method expected = clazz.getMethod(\"test\", FooEntity.class);\r\n        assertThat(bridged).isEqualTo(expected);\r\n    }\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Foo",
    "entityType": "class",
    "code": "void someMethod(T theArg, Object otherArg);\nvoid someVarargMethod(T theArg, Object... otherArg);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Foo#someMethod(T,Object)",
    "entityType": "method",
    "code": "void someMethod(T theArg, Object otherArg);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Foo#someVarargMethod(T,Object)",
    "entityType": "method",
    "code": "void someVarargMethod(T theArg, Object... otherArg);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyFoo",
    "entityType": "class",
    "code": "public void someMethod(Integer theArg, Object otherArg) ;\n@Override\r\npublic void someMethod(String theArg, Object otherArg) ;\n@Override\r\npublic void someVarargMethod(String theArg, Object... otherArgs) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyFoo#someMethod(Integer,Object)",
    "entityType": "method",
    "code": "public void someMethod(Integer theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyFoo#someMethod(String,Object)",
    "entityType": "method",
    "code": "@Override\r\npublic void someMethod(String theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyFoo#someVarargMethod(String,Object)",
    "entityType": "method",
    "code": "@Override\r\npublic void someVarargMethod(String theArg, Object... otherArgs) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Bar",
    "entityType": "class",
    "code": "void someMethod(Map<?, ?> m, Object otherArg) ;\nvoid someMethod(T theArg, Map<?, ?> m) ;\nabstract void someMethod(T theArg, Object otherArg);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Bar#someMethod(Map<?,?>,Object)",
    "entityType": "method",
    "code": "void someMethod(Map<?, ?> m, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Bar#someMethod(T,Map<?,?>)",
    "entityType": "method",
    "code": "void someMethod(T theArg, Map<?, ?> m) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Bar#someMethod(T,Object)",
    "entityType": "method",
    "code": "abstract void someMethod(T theArg, Object otherArg);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.InterBar",
    "entityType": "class",
    "code": "@Override\r\nvoid someMethod(T theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.InterBar#someMethod(T,Object)",
    "entityType": "method",
    "code": "@Override\r\nvoid someMethod(T theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.SubBar",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringProducer",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyBar",
    "entityType": "class",
    "code": "@Override\r\npublic void someMethod(String theArg, Object otherArg) ;\npublic void someMethod(Integer theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyBar#someMethod(String,Object)",
    "entityType": "method",
    "code": "@Override\r\npublic void someMethod(String theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyBar#someMethod(Integer,Object)",
    "entityType": "method",
    "code": "public void someMethod(Integer theArg, Object otherArg) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Adder",
    "entityType": "class",
    "code": "void add(T item);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Adder#add(T)",
    "entityType": "method",
    "code": "void add(T item);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.AbstractDateAdder",
    "entityType": "class",
    "code": "@Override\r\npublic abstract void add(Date date);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.AbstractDateAdder#add(Date)",
    "entityType": "method",
    "code": "@Override\r\npublic abstract void add(Date date);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.DateAdder",
    "entityType": "class",
    "code": "@Override\r\npublic void add(Date date) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.DateAdder#add(Date)",
    "entityType": "method",
    "code": "@Override\r\npublic void add(Date date) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.FakeAdder",
    "entityType": "class",
    "code": "public void add(Date date) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.FakeAdder#add(Date)",
    "entityType": "method",
    "code": "public void add(Date date) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Enclosing",
    "entityType": "class",
    "code": "public class Enclosed<S> {\r\n\r\n    public class ReallyDeepNow<R> {\r\n\r\n        void someMethod(S s, T t, R r) {\r\n        }\r\n    }\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Enclosed",
    "entityType": "class",
    "code": "public class ReallyDeepNow<R> {\r\n\r\n    void someMethod(S s, T t, R r) {\r\n    }\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ReallyDeepNow",
    "entityType": "class",
    "code": "void someMethod(S s, T t, R r) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ReallyDeepNow#someMethod(S,T,R)",
    "entityType": "method",
    "code": "void someMethod(S s, T t, R r) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ExtendsEnclosing",
    "entityType": "class",
    "code": "public class ExtendsEnclosed extends Enclosed<Integer> {\r\n\r\n    public class ExtendsReallyDeepNow extends ReallyDeepNow<Long> {\r\n\r\n        @Override\r\n        void someMethod(Integer s, String t, Long r) {\r\n            throw new UnsupportedOperationException();\r\n        }\r\n    }\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ExtendsEnclosed",
    "entityType": "class",
    "code": "public class ExtendsReallyDeepNow extends ReallyDeepNow<Long> {\r\n\r\n    @Override\r\n    void someMethod(Integer s, String t, Long r) {\r\n        throw new UnsupportedOperationException();\r\n    }\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ExtendsReallyDeepNow",
    "entityType": "class",
    "code": "@Override\r\nvoid someMethod(Integer s, String t, Long r) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ExtendsReallyDeepNow#someMethod(Integer,String,Long)",
    "entityType": "method",
    "code": "@Override\r\nvoid someMethod(Integer s, String t, Long r) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Boo",
    "entityType": "class",
    "code": "void foo(E e);\nvoid foo(T t);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Boo#foo(E)",
    "entityType": "method",
    "code": "void foo(E e);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Boo#foo(T)",
    "entityType": "method",
    "code": "void foo(T t);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyBoo",
    "entityType": "class",
    "code": "@Override\r\npublic void foo(String e) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic void foo(Integer t) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyBoo#foo(String)",
    "entityType": "method",
    "code": "@Override\r\npublic void foo(String e) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MyBoo#foo(Integer)",
    "entityType": "method",
    "code": "@Override\r\npublic void foo(Integer t) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Settings",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ConcreteSettings",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Dao",
    "entityType": "class",
    "code": "T load();\nS loadFromParent();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Dao#load()",
    "entityType": "method",
    "code": "T load();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Dao#loadFromParent()",
    "entityType": "method",
    "code": "S loadFromParent();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.SettingsDao",
    "entityType": "class",
    "code": "@Override\r\nT load();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.SettingsDao#load()",
    "entityType": "method",
    "code": "@Override\r\nT load();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ConcreteSettingsDao",
    "entityType": "class",
    "code": "@Override\r\nString loadFromParent();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.ConcreteSettingsDao#loadFromParent()",
    "entityType": "method",
    "code": "@Override\r\nString loadFromParent();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.AbstractDaoImpl",
    "entityType": "class",
    "code": "protected T object;\nprotected S otherObject;\nprotected AbstractDaoImpl(T object, S otherObject) {\r\n    this.object = object;\r\n    this.otherObject = otherObject;\r\n}\n// @Transactional(readOnly = true)\r\n@Override\r\npublic S loadFromParent() {\r\n    return otherObject;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.AbstractDaoImpl#loadFromParent()",
    "entityType": "method",
    "code": "// @Transactional(readOnly = true)\r\n@Override\r\npublic S loadFromParent() {\r\n    return otherObject;\r\n}",
    "comment": " @Transactional(readOnly = true)"
  },
  {
    "entityId": "org.springframework.core.SettingsDaoImpl",
    "entityType": "class",
    "code": "protected SettingsDaoImpl(ConcreteSettings object) {\r\n    super(object, \"From Parent\");\r\n}\n// @Transactional(readOnly = true)\r\n@Override\r\npublic ConcreteSettings load() {\r\n    return super.object;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.SettingsDaoImpl#load()",
    "entityType": "method",
    "code": "// @Transactional(readOnly = true)\r\n@Override\r\npublic ConcreteSettings load() {\r\n    return super.object;\r\n}",
    "comment": " @Transactional(readOnly = true)"
  },
  {
    "entityId": "org.springframework.core.Bounded",
    "entityType": "class",
    "code": "boolean boundedOperation(E e);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Bounded#boundedOperation(E)",
    "entityType": "method",
    "code": "boolean boundedOperation(E e);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.AbstractBounded",
    "entityType": "class",
    "code": "@Override\r\npublic boolean boundedOperation(E myE) {\r\n    return true;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.AbstractBounded#boundedOperation(E)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean boundedOperation(E myE) {\r\n    return true;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.SerializableBounded",
    "entityType": "class",
    "code": "@Override\r\npublic boolean boundedOperation(E myE) {\r\n    return false;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.SerializableBounded#boundedOperation(E)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean boundedOperation(E myE) {\r\n    return false;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.GenericParameter",
    "entityType": "class",
    "code": "T getFor(Class<T> cls);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.GenericParameter#getFor(Class<T>)",
    "entityType": "method",
    "code": "T getFor(Class<T> cls);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringGenericParameter",
    "entityType": "class",
    "code": "@Override\r\npublic String getFor(Class<String> cls) {\r\n    return \"foo\";\r\n}\npublic String getFor(Integer integer) {\r\n    return \"foo\";\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringGenericParameter#getFor(Class<String>)",
    "entityType": "method",
    "code": "@Override\r\npublic String getFor(Class<String> cls) {\r\n    return \"foo\";\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringGenericParameter#getFor(Integer)",
    "entityType": "method",
    "code": "public String getFor(Integer integer) {\r\n    return \"foo\";\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList",
    "entityType": "class",
    "code": "@Override\r\npublic int size() {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean isEmpty() {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean contains(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic Iterator<String> iterator() {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic Object[] toArray() {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic <T> T[] toArray(T[] a) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean add(String o) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean remove(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean containsAll(Collection<?> c) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean addAll(Collection<? extends String> c) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean addAll(int index, Collection<? extends String> c) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean removeAll(Collection<?> c) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic boolean retainAll(Collection<?> c) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic void clear() {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic String get(int index) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic String set(int index, String element) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic void add(int index, String element) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic String remove(int index) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic int indexOf(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic int lastIndexOf(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic ListIterator<String> listIterator() {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic ListIterator<String> listIterator(int index) {\r\n    throw new UnsupportedOperationException();\r\n}\n@Override\r\npublic List<String> subList(int fromIndex, int toIndex) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#size()",
    "entityType": "method",
    "code": "@Override\r\npublic int size() {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#isEmpty()",
    "entityType": "method",
    "code": "@Override\r\npublic boolean isEmpty() {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#contains(Object)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean contains(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#iterator()",
    "entityType": "method",
    "code": "@Override\r\npublic Iterator<String> iterator() {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#toArray()",
    "entityType": "method",
    "code": "@Override\r\npublic Object[] toArray() {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#toArray(T[])",
    "entityType": "method",
    "code": "@Override\r\npublic <T> T[] toArray(T[] a) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#add(String)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean add(String o) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#remove(Object)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean remove(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#containsAll(Collection<?>)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean containsAll(Collection<?> c) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#addAll(Collection<? extends String>)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean addAll(Collection<? extends String> c) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#addAll(int,Collection<? extends String>)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean addAll(int index, Collection<? extends String> c) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#removeAll(Collection<?>)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean removeAll(Collection<?> c) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#retainAll(Collection<?>)",
    "entityType": "method",
    "code": "@Override\r\npublic boolean retainAll(Collection<?> c) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#clear()",
    "entityType": "method",
    "code": "@Override\r\npublic void clear() {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#get(int)",
    "entityType": "method",
    "code": "@Override\r\npublic String get(int index) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#set(int,String)",
    "entityType": "method",
    "code": "@Override\r\npublic String set(int index, String element) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#add(int,String)",
    "entityType": "method",
    "code": "@Override\r\npublic void add(int index, String element) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#remove(int)",
    "entityType": "method",
    "code": "@Override\r\npublic String remove(int index) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#indexOf(Object)",
    "entityType": "method",
    "code": "@Override\r\npublic int indexOf(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#lastIndexOf(Object)",
    "entityType": "method",
    "code": "@Override\r\npublic int lastIndexOf(Object o) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#listIterator()",
    "entityType": "method",
    "code": "@Override\r\npublic ListIterator<String> listIterator() {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#listIterator(int)",
    "entityType": "method",
    "code": "@Override\r\npublic ListIterator<String> listIterator(int index) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.StringList#subList(int,int)",
    "entityType": "method",
    "code": "@Override\r\npublic List<String> subList(int fromIndex, int toIndex) {\r\n    throw new UnsupportedOperationException();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Event",
    "entityType": "class",
    "code": "int getPriority();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Event#getPriority()",
    "entityType": "method",
    "code": "int getPriority();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.GenericEvent",
    "entityType": "class",
    "code": "private int priority;\n@Override\r\npublic int getPriority() {\r\n    return priority;\r\n}\n/**\r\n * Constructor that takes an event priority\r\n */\r\npublic GenericEvent(int priority) {\r\n    this.priority = priority;\r\n}\n/**\r\n * Default Constructor\r\n */\r\npublic GenericEvent() {\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.GenericEvent#getPriority()",
    "entityType": "method",
    "code": "@Override\r\npublic int getPriority() {\r\n    return priority;\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.UserInitiatedEvent",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.BaseUserInitiatedEvent",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.MessageEvent",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Channel",
    "entityType": "class",
    "code": "void send(E event);\nvoid subscribe(final Receiver<E> receiver, Class<E> event);\nvoid unsubscribe(final Receiver<E> receiver, Class<E> event);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Channel#send(E)",
    "entityType": "method",
    "code": "void send(E event);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.Channel#subscribe(Receiver<E>,Class<E>)",
    "entityType": "method",
    "code": "void subscribe(final Receiver<E> receiver, Class<E> event);",
    "comment": ""
  }
]