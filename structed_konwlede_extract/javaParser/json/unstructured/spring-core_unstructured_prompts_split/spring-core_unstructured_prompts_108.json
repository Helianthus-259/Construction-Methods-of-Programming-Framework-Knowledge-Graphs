[
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithInheritedAnnotationsAttributesWithConventionBasedComposedAnnotation()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithInheritedAnnotationsAttributesWithConventionBasedComposedAnnotation() {\r\n    MergedAnnotation<?> annotation = MergedAnnotations.from(ConventionBasedComposedContextConfigurationClass.class, SearchStrategy.INHERITED_ANNOTATIONS).get(ContextConfiguration.class);\r\n    assertThat(annotation.isPresent()).isTrue();\r\n    assertThat(annotation.getStringArray(\"locations\")).containsExactly(\"explicitDeclaration\");\r\n    assertThat(annotation.getStringArray(\"value\")).containsExactly(\"explicitDeclaration\");\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithInheritedAnnotationsFromHalfConventionBasedAndHalfAliasedComposedAnnotation1()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithInheritedAnnotationsFromHalfConventionBasedAndHalfAliasedComposedAnnotation1() {\r\n    // SPR-13554: convention mapping mixed with AliasFor annotations\r\n    // xmlConfigFiles can be used because it has an AliasFor annotation\r\n    MergedAnnotation<?> annotation = MergedAnnotations.from(HalfConventionBasedAndHalfAliasedComposedContextConfigurationClass1.class, SearchStrategy.INHERITED_ANNOTATIONS).get(ContextConfiguration.class);\r\n    assertThat(annotation.getStringArray(\"locations\")).containsExactly(\"explicitDeclaration\");\r\n    assertThat(annotation.getStringArray(\"value\")).containsExactly(\"explicitDeclaration\");\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithInheritedAnnotationsFromHalfConventionBasedAndHalfAliasedComposedAnnotation2()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithInheritedAnnotationsFromHalfConventionBasedAndHalfAliasedComposedAnnotation2() {\r\n    // SPR-13554: convention mapping mixed with AliasFor annotations\r\n    // locations doesn't apply because it has no AliasFor annotation\r\n    MergedAnnotation<?> annotation = MergedAnnotations.from(HalfConventionBasedAndHalfAliasedComposedContextConfigurationClass2.class, SearchStrategy.INHERITED_ANNOTATIONS).get(ContextConfiguration.class);\r\n    assertThat(annotation.getStringArray(\"locations\")).isEmpty();\r\n    assertThat(annotation.getStringArray(\"value\")).isEmpty();\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithInheritedAnnotationsFromInvalidConventionBasedComposedAnnotation()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithInheritedAnnotationsFromInvalidConventionBasedComposedAnnotation() {\r\n    assertThatExceptionOfType(AnnotationConfigurationException.class).isThrownBy(() -> MergedAnnotations.from(InvalidConventionBasedComposedContextConfigurationClass.class, SearchStrategy.INHERITED_ANNOTATIONS).get(ContextConfiguration.class));\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithTypeHierarchyWithSingleElementOverridingAnArrayViaConvention()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithTypeHierarchyWithSingleElementOverridingAnArrayViaConvention() {\r\n    testGetWithTypeHierarchy(ConventionBasedSinglePackageComponentScanClass.class, \"com.example.app.test\");\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithTypeHierarchyWithLocalAliasesThatConflictWithAttributesInMetaAnnotationByConvention()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithTypeHierarchyWithLocalAliasesThatConflictWithAttributesInMetaAnnotationByConvention() {\r\n    MergedAnnotation<?> annotation = MergedAnnotations.from(SpringApplicationConfigurationClass.class, SearchStrategy.TYPE_HIERARCHY).get(ContextConfiguration.class);\r\n    assertThat(annotation.getStringArray(\"locations\")).isEmpty();\r\n    assertThat(annotation.getStringArray(\"value\")).isEmpty();\r\n    assertThat(annotation.getClassArray(\"classes\")).containsExactly(Number.class);\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedAnnotationAttributeOverrideTests#getWithTypeHierarchyOnMethodWithSingleElementOverridingAnArrayViaConvention()",
    "entityType": "method",
    "code": "@Test\r\nvoid getWithTypeHierarchyOnMethodWithSingleElementOverridingAnArrayViaConvention() throws Exception {\r\n    testGetWithTypeHierarchyWebMapping(WebController.class.getMethod(\"postMappedWithPathAttribute\"));\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NonAnnotatedClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AnnotatedClass",
    "entityType": "class",
    "code": "class NonAnnotatedInnerClass {\r\n}\nstatic class NonAnnotatedStaticNestedClass {\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NonAnnotatedInnerClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NonAnnotatedStaticNestedClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NonAnnotatedInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransactionalComponentClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubTransactionalComponentClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ComposedTransactionalComponentClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AliasedTransactionalComponentClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ComposedTransactionalClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.MetaMetaAliasedTransactionalClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ClassWithInheritedAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubClassWithInheritedAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubSubClassWithInheritedAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ClassWithInheritedComposedAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubClassWithInheritedComposedAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubSubClassWithInheritedComposedAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.MetaAndLocalTxConfigClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TxConfig",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.DerivedTxConfig",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TxFromMultipleComposedAnnotations",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.InterfaceWithInheritedAnnotation",
    "entityType": "class",
    "code": "@Order\r\nvoid handleFromInterface();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.InterfaceWithInheritedAnnotation#handleFromInterface()",
    "entityType": "method",
    "code": "@Order\r\nvoid handleFromInterface();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AbstractClassWithInheritedAnnotation",
    "entityType": "class",
    "code": "@Transactional\r\npublic abstract void handle();\n@Transactional\r\npublic void handleParameterized(T t) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AbstractClassWithInheritedAnnotation#handle()",
    "entityType": "method",
    "code": "@Transactional\r\npublic abstract void handle();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AbstractClassWithInheritedAnnotation#handleParameterized(T)",
    "entityType": "method",
    "code": "@Transactional\r\npublic void handleParameterized(T t) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConcreteClassWithInheritedAnnotation",
    "entityType": "class",
    "code": "@Override\r\npublic void handle() ;\n@Override\r\npublic void handleParameterized(String s) ;\n@Override\r\npublic void handleFromInterface() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConcreteClassWithInheritedAnnotation#handle()",
    "entityType": "method",
    "code": "@Override\r\npublic void handle() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConcreteClassWithInheritedAnnotation#handleParameterized(String)",
    "entityType": "method",
    "code": "@Override\r\npublic void handleParameterized(String s) ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConcreteClassWithInheritedAnnotation#handleFromInterface()",
    "entityType": "method",
    "code": "@Override\r\npublic void handleFromInterface() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.GenericParameter",
    "entityType": "class",
    "code": "T getFor(Class<T> cls);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.GenericParameter#getFor(Class<T>)",
    "entityType": "method",
    "code": "T getFor(Class<T> cls);",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.StringGenericParameter",
    "entityType": "class",
    "code": "@Order\r\n@Override\r\npublic String getFor(Class<String> cls) {\r\n    return \"foo\";\r\n}\npublic String getFor(Integer integer) {\r\n    return \"foo\";\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.StringGenericParameter#getFor(Class<String>)",
    "entityType": "method",
    "code": "@Order\r\n@Override\r\npublic String getFor(Class<String> cls) {\r\n    return \"foo\";\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.StringGenericParameter#getFor(Integer)",
    "entityType": "method",
    "code": "public String getFor(Integer integer) {\r\n    return \"foo\";\r\n}",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.InheritedAnnotationInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubInheritedAnnotationInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubSubInheritedAnnotationInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NonInheritedAnnotationInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubNonInheritedAnnotationInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubSubNonInheritedAnnotationInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedComposedContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.InvalidConventionBasedComposedContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.HalfConventionBasedAndHalfAliasedComposedContextConfigurationClass1",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.HalfConventionBasedAndHalfAliasedComposedContextConfigurationClass2",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AliasedComposedContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AliasedValueComposedContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ImplicitAliasesContextConfigurationClass1",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ImplicitAliasesContextConfigurationClass2",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ImplicitAliasesContextConfigurationClass3",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransitiveImplicitAliasesContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SingleLocationTransitiveImplicitAliasesContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransitiveImplicitAliasesWithSkippedLevelContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SingleLocationTransitiveImplicitAliasesWithSkippedLevelContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ComposedImplicitAliasesContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ShadowedAliasComposedContextConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AliasedComposedContextConfigurationAndTestPropertySourceClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ComponentScanWithBasePackagesAndValueAliasClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TestComponentScanClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ConventionBasedSinglePackageComponentScanClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AliasForBasedSinglePackageComponentScanClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SpringApplicationConfigurationClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ResourceHolder",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransactionalService",
    "entityType": "class",
    "code": "@Transactional\r\nvoid doIt();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransactionalService#doIt()",
    "entityType": "method",
    "code": "@Transactional\r\nvoid doIt();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransactionalServiceImpl",
    "entityType": "class",
    "code": "@Override\r\npublic void doIt() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.TransactionalServiceImpl#doIt()",
    "entityType": "method",
    "code": "@Override\r\npublic void doIt() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.InterfaceWithMetaAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.ClassWithInheritedMetaAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubClassWithInheritedMetaAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SubSubClassWithInheritedMetaAnnotation",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.MetaMetaAnnotatedClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.MetaMetaMetaAnnotatedClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.MetaCycleAnnotatedClass",
    "entityType": "class",
    "code": "",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AnnotatedInterface",
    "entityType": "class",
    "code": "@Order(0)\r\nvoid fromInterfaceImplementedByRoot();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.AnnotatedInterface#fromInterfaceImplementedByRoot()",
    "entityType": "method",
    "code": "@Order(0)\r\nvoid fromInterfaceImplementedByRoot();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NullableAnnotatedInterface",
    "entityType": "class",
    "code": "@Nullable\r\nString fromInterfaceImplementedByRoot();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.NullableAnnotatedInterface#fromInterfaceImplementedByRoot()",
    "entityType": "method",
    "code": "@Nullable\r\nString fromInterfaceImplementedByRoot();",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root",
    "entityType": "class",
    "code": "@Order(27)\r\npublic void annotatedOnRoot() ;\n@Meta1\r\npublic void metaAnnotatedOnRoot() ;\npublic void overrideToAnnotate() ;\n@Order(27)\r\npublic void overrideWithoutNewAnnotation() ;\npublic void notAnnotated() ;\n@Override\r\npublic void fromInterfaceImplementedByRoot() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root#annotatedOnRoot()",
    "entityType": "method",
    "code": "@Order(27)\r\npublic void annotatedOnRoot() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root#metaAnnotatedOnRoot()",
    "entityType": "method",
    "code": "@Meta1\r\npublic void metaAnnotatedOnRoot() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root#overrideToAnnotate()",
    "entityType": "method",
    "code": "public void overrideToAnnotate() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root#overrideWithoutNewAnnotation()",
    "entityType": "method",
    "code": "@Order(27)\r\npublic void overrideWithoutNewAnnotation() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root#notAnnotated()",
    "entityType": "method",
    "code": "public void notAnnotated() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Root#fromInterfaceImplementedByRoot()",
    "entityType": "method",
    "code": "@Override\r\npublic void fromInterfaceImplementedByRoot() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Leaf",
    "entityType": "class",
    "code": "@Order(25)\r\npublic void annotatedOnLeaf() ;\n@Meta1\r\npublic void metaAnnotatedOnLeaf() ;\n@MetaMeta\r\npublic void metaMetaAnnotatedOnLeaf() ;\n@Override\r\n@Order(1)\r\npublic void overrideToAnnotate() ;\n@Override\r\npublic void overrideWithoutNewAnnotation() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Leaf#annotatedOnLeaf()",
    "entityType": "method",
    "code": "@Order(25)\r\npublic void annotatedOnLeaf() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Leaf#metaAnnotatedOnLeaf()",
    "entityType": "method",
    "code": "@Meta1\r\npublic void metaAnnotatedOnLeaf() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Leaf#metaMetaAnnotatedOnLeaf()",
    "entityType": "method",
    "code": "@MetaMeta\r\npublic void metaMetaAnnotatedOnLeaf() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Leaf#overrideToAnnotate()",
    "entityType": "method",
    "code": "@Override\r\n@Order(1)\r\npublic void overrideToAnnotate() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.Leaf#overrideWithoutNewAnnotation()",
    "entityType": "method",
    "code": "@Override\r\npublic void overrideWithoutNewAnnotation() ;",
    "comment": ""
  },
  {
    "entityId": "org.springframework.core.annotation.SimpleGeneric",
    "entityType": "class",
    "code": "@Order(1)\r\npublic abstract void something(T arg);",
    "comment": ""
  }
]