{
    "relationships": [
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "tail_type": "title"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/messaging-gcp-pubsub",
        "tail_type": "url"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Cloud Messaging",
        "tail_type": "theme"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Integration",
        "tail_type": "theme"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Google Cloud Pub/Sub",
        "tail_type": "theme"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrates exchanging messages using Spring Integration's channel adapters with Google Cloud Pub/Sub. Includes setting up inbound and outbound adapters, configuring PubSubTemplate, creating topics and subscriptions, handling message processing with ServiceActivator, and authentication via GCP credentials. Requires Spring Boot, Spring Cloud GCP, and Google Cloud SDK dependencies.",
        "tail_type": "abstract"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Exchange messages between application components using Spring Integration and Google Cloud Pub/Sub",
        "tail_type": "purpose"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Cloud GCP",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Integration",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "pubsub messaging",
        "tail_type": "apiFunction"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "channel adapters",
        "tail_type": "apiFunction"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "service activation",
        "tail_type": "apiFunction"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "message acknowledgment",
        "tail_type": "apiFunction"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "automatic configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Exchanging Messages with Google Cloud Pub/Sub via Spring Integration",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "dependency management",
        "tail_type": "apiFunction"
      },
      {
        "head": "Exchange messages between application components using Spring Integration and Google Cloud Pub/Sub",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "<dependencies>\n    ...\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-gcp-starter-pubsub</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-core</artifactId>\n    </dependency>\n    ...\n</dependencies>",
        "tail_type": "implementationCode"
      },
      {
        "head": "Exchange messages between application components using Spring Integration and Google Cloud Pub/Sub",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "@SpringBootApplication\npublic class PubSubApplication {\n  public static void main(String[] args) throws IOException {\n    SpringApplication.run(PubSubApplication.class, args);\n  }\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "Exchange messages between application components using Spring Integration and Google Cloud Pub/Sub",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "@RestController\npublic class WebAppController {\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "@SpringBootApplication\npublic class PubSubApplication {\n  public static void main(String[] args) throws IOException {\n    SpringApplication.run(PubSubApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "@SpringBootApplication\npublic class PubSubApplication {\n  public static void main(String[] args) throws IOException {\n    SpringApplication.run(PubSubApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "@RestController\npublic class WebAppController {\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "@Autowired\nprivate PubsubOutboundGateway messagingGateway;\n\n@Value(\"${pubsubTopic}\")\nprivate String pubsubTopic;",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Autowired",
        "tail_type": "annotation"
      },
      {
        "head": "@Autowired\nprivate PubsubOutboundGateway messagingGateway;\n\n@Value(\"${pubsubTopic}\")\nprivate String pubsubTopic;",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Value",
        "tail_type": "annotation"
      }
    ]
  }