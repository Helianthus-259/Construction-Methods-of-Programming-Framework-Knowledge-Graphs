{
    "relationships": [
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Creating Load-Balanced Microservices with Spring Cloud LoadBalancer",
        "tail_type": "title"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Microservices",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Load Balancing",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Client-Side Load Balancing",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This guide walks through creating two Spring Boot projects (say-hello and user) to demonstrate client-side load balancing using Spring Cloud LoadBalancer. It includes setting up Spring Initializr projects with dependencies (Spring Web, Cloud Loadbalancer, Reactive Web), configuring WebClient with @LoadBalanced, creating a custom ServiceInstanceListSupplier for round-robin instance selection, and testing with multiple service instances. The tutorial covers Maven and Gradle setups, Spring annotations, and integrating load balancing in reactive web applications.",
        "tail_type": "abstract"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/spring-cloud-loadbalancer",
        "tail_type": "url"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Implement client-side load balancing in microservices using Spring Cloud LoadBalancer",
        "tail_type": "purpose"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "client-side load balancing",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "round-robin instance selection",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "WebClient configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "custom load balancer configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "service discovery integration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Implement client-side load balancing in microservices using Spring Cloud LoadBalancer",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "SayHelloApplication.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement client-side load balancing in microservices using Spring Cloud LoadBalancer",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "UserApplication.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement client-side load balancing in microservices using Spring Cloud LoadBalancer",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "WebClientConfig.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement client-side load balancing in microservices using Spring Cloud LoadBalancer",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "SayHelloConfiguration.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "SayHelloApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RestController",
        "tail_type": "class"
      },
      {
        "head": "SayHelloApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RequestMapping",
        "tail_type": "class"
      },
      {
        "head": "UserApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RestController",
        "tail_type": "class"
      },
      {
        "head": "UserApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.beans.factory.annotation.Autowired",
        "tail_type": "class"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.context.annotation.Configuration",
        "tail_type": "class"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.client.loadbalancer.LoadBalanced",
        "tail_type": "class"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.reactive.function.client.WebClient",
        "tail_type": "class"
      },
      {
        "head": "SayHelloConfiguration.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.client.loadbalancer.ServiceInstanceListSupplier",
        "tail_type": "class"
      },
      {
        "head": "SayHelloApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "SayHelloApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RequestMapping",
        "tail_type": "annotation"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Configuration",
        "tail_type": "annotation"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@LoadBalanced",
        "tail_type": "annotation"
      },
      {
        "head": "UserApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Autowired",
        "tail_type": "annotation"
      },
      {
        "head": "SayHelloConfiguration.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "WebClientConfig.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@LoadBalancerClient",
        "tail_type": "annotation"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Cloud LoadBalancer",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Web",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud LoadBalancer Client-Side Load Balancing",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Reactive Web",
        "tail_type": "frameworkModule"
      }
    ]
  }