{
    "relationships": [
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Building a Simple Web Application with Spring Boot",
        "tail_type": "title"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Web Development, Spring Boot, Application Setup, Testing, Production Services",
        "tail_type": "theme"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrates creating a Spring Boot web application with RESTful endpoints, automated configuration (embedded Tomcat/Jetty), Spring Initializr setup, unit/integration testing using MockMvc/TestRestTemplate, and adding production-grade monitoring via Spring Boot Actuator. Includes dependency management with Gradle/Maven and JAR deployment.",
        "tail_type": "abstract"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/spring-boot/",
        "tail_type": "url"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrate Spring Boot's capabilities in rapid application development including automatic configuration, testing, and production monitoring.",
        "tail_type": "purpose"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring MVC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Test",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Actuator",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "automatic configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "embedded server setup",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "dependency management",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "actuator endpoints",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot Web Application Development",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "mocking in tests",
        "tail_type": "apiFunction"
      },
      {
        "head": "Demonstrate Spring Boot's capabilities in rapid application development including automatic configuration, testing, and production monitoring.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.springboot;import org.springframework.web.bind.annotation.*;@RestControllerpublic class HelloController { @GetMapping(\"/\") public String index() { return \"Greetings from Spring Boot!\"; }}",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.springboot;import org.springframework.web.bind.annotation.*;@RestControllerpublic class HelloController { @GetMapping(\"/\") public String index() { return \"Greetings from Spring Boot!\"; }}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RestController",
        "tail_type": "class"
      },
      {
        "head": "package com.example.springboot;import org.springframework.web.bind.annotation.*;@RestControllerpublic class HelloController { @GetMapping(\"/\") public String index() { return \"Greetings from Spring Boot!\"; }}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.GetMapping",
        "tail_type": "class"
      },
      {
        "head": "package com.example.springboot;import org.springframework.web.bind.annotation.*;@RestControllerpublic class HelloController { @GetMapping(\"/\") public String index() { return \"Greetings from Spring Boot!\"; }}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.springboot;import org.springframework.web.bind.annotation.*;@RestControllerpublic class HelloController { @GetMapping(\"/\") public String index() { return \"Greetings from Spring Boot!\"; }}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.springboot;import org.springframework.boot.*;@SpringBootApplicationpublic class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } @Bean public CommandLineRunner commandLineRunner(ApplicationContext ctx) { return args -> { // Bean inspection code }; }}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "package com.example.springboot;import org.springframework.boot.*;@SpringBootApplicationpublic class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } @Bean public CommandLineRunner commandLineRunner(ApplicationContext ctx) { return args -> { // Bean inspection code }; }}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.springboot;import org.springframework.boot.*;@SpringBootApplicationpublic class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } @Bean public CommandLineRunner commandLineRunner(ApplicationContext ctx) { return args -> { // Bean inspection code }; }}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.springboot;import org.springframework.boot.test.context.*;@SpringBootTest@AutoConfigureMockMvcpublic class HelloControllerTest { @Autowired private MockMvc mockMvc; @Test public void testIndex() throws Exception { mockMvc.perform(get(\"/\")).andExpect(status().isOk()).andExpect(content().string(\"Greetings from Spring Boot!\")); }}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc",
        "tail_type": "class"
      },
      {
        "head": "package com.example.springboot;import org.springframework.boot.test.context.*;@SpringBootTest@AutoConfigureMockMvcpublic class HelloControllerTest { @Autowired private MockMvc mockMvc; @Test public void testIndex() throws Exception { mockMvc.perform(get(\"/\")).andExpect(status().isOk()).andExpect(content().string(\"Greetings from Spring Boot!\")); }}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootTest",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.springboot;import org.springframework.boot.test.context.*;@SpringBootTest@AutoConfigureMockMvcpublic class HelloControllerTest { @Autowired private MockMvc mockMvc; @Test public void testIndex() throws Exception { mockMvc.perform(get(\"/\")).andExpect(status().isOk()).andExpect(content().string(\"Greetings from Spring Boot!\")); }}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Test",
        "tail_type": "annotation"
      }
    ]
  }