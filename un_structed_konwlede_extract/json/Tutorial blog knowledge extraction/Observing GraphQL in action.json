{
    "relationships": [
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Observing GraphQL in action",
        "tail_type": "title"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "GraphQL",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "API Development",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Framework",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Observability",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "MongoDB",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Testing",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Pagination",
        "tail_type": "theme"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/topicals/observing-graphql-in-action",
        "tail_type": "url"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Build a GraphQL service with observability features using Spring for GraphQL and MongoDB",
        "tail_type": "purpose"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "GraphQL query handling",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "Pagination",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "Custom Scalars",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "Observability with metrics and tracing",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "Data fetching with MongoDB",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "Schema mapping",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "haveFunction",
        "tail": "Testing GraphQL controllers",
        "tail_type": "apiFunction"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring for GraphQL",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Web",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data MongoDB",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Docker Compose Support",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot Actuator",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Micrometer Tracing",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Observing GraphQL in action",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Zipkin",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Build a GraphQL service with observability features using Spring for GraphQL and MongoDB",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "TracksController code",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a GraphQL service with observability features using Spring for GraphQL and MongoDB",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "GraphQlConfiguration code",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a GraphQL service with observability features using Spring for GraphQL and MongoDB",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "PlaylistController code",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a GraphQL service with observability features using Spring for GraphQL and MongoDB",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "TrackRepository code",
        "tail_type": "implementationCode"
      },
      {
        "head": "TracksController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.mongodb.core.MongoTemplate",
        "tail_type": "class"
      },
      {
        "head": "TracksController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.graphql.data.method.annotation.Argument",
        "tail_type": "class"
      },
      {
        "head": "TracksController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.graphql.data.method.annotation.QueryMapping",
        "tail_type": "class"
      },
      {
        "head": "TracksController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.stereotype.Controller",
        "tail_type": "class"
      },
      {
        "head": "TracksController code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Controller",
        "tail_type": "annotation"
      },
      {
        "head": "TracksController code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@QueryMapping",
        "tail_type": "annotation"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "graphql.scalars.ExtendedScalars",
        "tail_type": "class"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "io.spring.guides.graphqlmusic.support.DurationSecondsScalar",
        "tail_type": "class"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.context.annotation.Bean",
        "tail_type": "class"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.context.annotation.Configuration",
        "tail_type": "class"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.graphql.execution.RuntimeWiringConfigurer",
        "tail_type": "class"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Configuration",
        "tail_type": "annotation"
      },
      {
        "head": "GraphQlConfiguration code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "PlaylistController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.graphql.data.method.annotation.Argument",
        "tail_type": "class"
      },
      {
        "head": "PlaylistController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.graphql.data.method.annotation.QueryMapping",
        "tail_type": "class"
      },
      {
        "head": "PlaylistController code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.stereotype.Controller",
        "tail_type": "class"
      },
      {
        "head": "PlaylistController code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Controller",
        "tail_type": "annotation"
      },
      {
        "head": "PlaylistController code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@QueryMapping",
        "tail_type": "annotation"
      },
      {
        "head": "TrackRepository code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.mongodb.repository.MongoRepository",
        "tail_type": "class"
      }
    ]
  }