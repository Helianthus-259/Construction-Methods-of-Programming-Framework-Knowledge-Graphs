{
    "relationships": [
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Applying Circuit Breakers with Spring Cloud Circuit Breaker",
        "tail_type": "title"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Microservices",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Fault Tolerance",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Reactive Programming",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrate circuit breaker implementation using Spring Cloud Circuit Breaker with Resilience4J. Configure reactive microservices with WebClient for HTTP calls, fallback methods, and dependency management. Includes setup for server/client applications, Resilience4J configuration, and reactive circuit breaker factories.",
        "tail_type": "abstract"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/cloud-circuit-breaker",
        "tail_type": "url"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Implement circuit breaker pattern to prevent cascading failures in microservices",
        "tail_type": "purpose"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "circuit breaker implementation",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "fallback mechanism",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "reactive web handling",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "HTTP client communication",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Cloud Circuit Breaker",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Resilience4J",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Circuit Breaker Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Reactive Web",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Implement circuit breaker pattern to prevent cascading failures in microservices",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "reactor.core.publisher.Mono",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RestController",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RequestMapping",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.reactive.function.client.WebClient",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@RestController\n@SpringBootApplication\npublic class ReadingApplication {\n\n\t@RequestMapping(\"/to-read\")\n    public Mono<String> toRead() {\n      return WebClient.builder().build()\n      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n      .bodyToMono(String.class);\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(ReadingApplication.class, args);\n  }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RequestMapping",
        "tail_type": "annotation"
      },
      {
        "head": "Implement circuit breaker pattern to prevent cascading failures in microservices",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package hello;\n\nimport reactor.core.publisher.Mono;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BookService {\n\n  private final ReactiveCircuitBreaker circuitBreaker;\n\n  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n    this.circuitBreaker = circuitBreakerFactory.create(\"recommended\");\n  }\n\n  public Mono<String> readingList() {\n    return circuitBreaker.run(\n        WebClient.builder().build().get().uri(\"http://localhost:8090/recommended\").retrieve().bodyToMono(String.class),\n        throwable -> Mono.just(\"Cloud Native Java (O'Reilly)\"));\n  }\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BookService {\n\n  private final ReactiveCircuitBreaker circuitBreaker;\n\n  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n    this.circuitBreaker = circuitBreakerFactory.create(\"recommended\");\n  }\n\n  public Mono<String> readingList() {\n    return circuitBreaker.run(\n        WebClient.builder().build().get().uri(\"http://localhost:8090/recommended\").retrieve().bodyToMono(String.class),\n        throwable -> Mono.just(\"Cloud Native Java (O'Reilly)\"));\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "reactor.core.publisher.Mono",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BookService {\n\n  private final ReactiveCircuitBreaker circuitBreaker;\n\n  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n    this.circuitBreaker = circuitBreakerFactory.create(\"recommended\");\n  }\n\n  public Mono<String> readingList() {\n    return circuitBreaker.run(\n        WebClient.builder().build().get().uri(\"http://localhost:8090/recommended\").retrieve().bodyToMono(String.class),\n        throwable -> Mono.just(\"Cloud Native Java (O'Reilly)\"));\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BookService {\n\n  private final ReactiveCircuitBreaker circuitBreaker;\n\n  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n    this.circuitBreaker = circuitBreakerFactory.create(\"recommended\");\n  }\n\n  public Mono<String> readingList() {\n    return circuitBreaker.run(\n        WebClient.builder().build().get().uri(\"http://localhost:8090/recommended\").retrieve().bodyToMono(String.class),\n        throwable -> Mono.just(\"Cloud Native Java (O'Reilly)\"));\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BookService {\n\n  private final ReactiveCircuitBreaker circuitBreaker;\n\n  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n    this.circuitBreaker = circuitBreakerFactory.create(\"recommended\");\n  }\n\n  public Mono<String> readingList() {\n    return circuitBreaker.run(\n        WebClient.builder().build().get().uri(\"http://localhost:8090/recommended\").retrieve().bodyToMono(String.class),\n        throwable -> Mono.just(\"Cloud Native Java (O'Reilly)\"));\n  }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.stereotype.Service",
        "tail_type": "class"
      },
      {
        "head": "package hello;\n\nimport reactor.core.publisher.Mono;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\nimport org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BookService {\n\n  private final ReactiveCircuitBreaker circuitBreaker;\n\n  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n    this.circuitBreaker = circuitBreakerFactory.create(\"recommended\");\n  }\n\n  public Mono<String> readingList() {\n    return circuitBreaker.run(\n        WebClient.builder().build().get().uri(\"http://localhost:8090/recommended\").retrieve().bodyToMono(String.class),\n        throwable -> Mono.just(\"Cloud Native Java (O'Reilly)\"));\n  }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Service",
        "tail_type": "annotation"
      }
    ]
  }