{
    "relationships": [
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Creating a Functional Reactive Application with Spring Data and Redis",
        "tail_type": "title"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Reactive Programming",
        "tail_type": "theme"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Data",
        "tail_type": "theme"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Redis",
        "tail_type": "theme"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Non-blocking I/O",
        "tail_type": "theme"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This guide demonstrates creating a reactive Spring application using Spring Data Redis and Project Reactor to interact with Redis non-blocking. It includes storing and retrieving Coffee objects with Reactive Streams Publishers Mono and Flux. Utilizes dependencies like Spring Reactive Web, Spring Data Reactive Redis, and Docker Compose. Covers configuration, data loading with Flux, and a RestController for external access.",
        "tail_type": "abstract"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/spring-data-reactive-redis",
        "tail_type": "url"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Implement reactive Redis interaction for Coffee objects",
        "tail_type": "purpose"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data Redis",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Project Reactor",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Reactive Web",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "reactive data access",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "non-blocking operations",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Flux and Mono usage",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Data Reactive Redis Guide",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "flushAll command",
        "tail_type": "apiFunction"
      },
      {
        "head": "Implement reactive Redis interaction for Coffee objects",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "Coffee.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement reactive Redis interaction for Coffee objects",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CoffeeConfiguration.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement reactive Redis interaction for Coffee objects",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CoffeeLoader.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement reactive Redis interaction for Coffee objects",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CoffeeController.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "CoffeeConfiguration.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
        "tail_type": "class"
      },
      {
        "head": "CoffeeConfiguration.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.redis.core.ReactiveRedisOperations",
        "tail_type": "class"
      },
      {
        "head": "CoffeeConfiguration.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.redis.core.ReactiveRedisTemplate",
        "tail_type": "class"
      },
      {
        "head": "CoffeeConfiguration.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Configuration",
        "tail_type": "annotation"
      },
      {
        "head": "CoffeeConfiguration.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "CoffeeController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "CoffeeController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "CoffeeLoader.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Component",
        "tail_type": "annotation"
      },
      {
        "head": "CoffeeLoader.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "reactor.core.publisher.Flux",
        "tail_type": "class"
      }
    ]
  }