{
    "relationships": [
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "tail_type": "title"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/crud-with-vaadin",
        "tail_type": "url"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Frontend Development",
        "tail_type": "theme"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Data Persistence",
        "tail_type": "theme"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "UI Development",
        "tail_type": "theme"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This tutorial demonstrates building a CRUD (Create, Read, Update, Delete) application using Vaadin for the frontend UI and Spring Data JPA for backend data persistence. It includes configuring a Spring Boot project with Vaadin and H2 database dependencies, creating entity and repository classes, implementing a main view with Vaadin Grid for data display, adding filtering functionality with TextField and custom repository methods, and integrating an editor component for data manipulation. The guide covers both manual project setup via Spring Initializr and using a pre-configured project, along with production build considerations for Vaadin.",
        "tail_type": "abstract"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Build a Vaadin UI for a JPA repository with full CRUD functionality and filtering",
        "tail_type": "purpose"
      },
      {
        "head": "Build a Vaadin UI for a JPA repository with full CRUD functionality and filtering",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "Customer.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a Vaadin UI for a JPA repository with full CRUD functionality and filtering",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CustomerRepository.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a Vaadin UI for a JPA repository with full CRUD functionality and filtering",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CrudWithVaadinApplication.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a Vaadin UI for a JPA repository with full CRUD functionality and filtering",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "MainView.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Build a Vaadin UI for a JPA repository with full CRUD functionality and filtering",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CustomerEditor.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Customer.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "javax.persistence.Entity",
        "tail_type": "class"
      },
      {
        "head": "Customer.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "javax.persistence.Id",
        "tail_type": "class"
      },
      {
        "head": "Customer.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "javax.persistence.GeneratedValue",
        "tail_type": "class"
      },
      {
        "head": "Customer.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Entity",
        "tail_type": "annotation"
      },
      {
        "head": "Customer.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Id",
        "tail_type": "annotation"
      },
      {
        "head": "Customer.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GeneratedValue",
        "tail_type": "annotation"
      },
      {
        "head": "MainView.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "com.vaadin.flow.component.grid.Grid",
        "tail_type": "class"
      },
      {
        "head": "MainView.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "com.vaadin.flow.component.orderedlayout.VerticalLayout",
        "tail_type": "class"
      },
      {
        "head": "MainView.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "com.vaadin.flow.router.Route",
        "tail_type": "class"
      },
      {
        "head": "MainView.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Route",
        "tail_type": "annotation"
      },
      {
        "head": "CustomerEditor.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.jpa.repository.JpaRepository",
        "tail_type": "class"
      },
      {
        "head": "CustomerEditor.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "com.vaadin.flow.data.binder.Binder",
        "tail_type": "class"
      },
      {
        "head": "CrudWithVaadinApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data JPA",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Vaadin",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "H2 Database",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "CRUD operations",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "data filtering",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "lazy loading",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "custom repository methods",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a CRUD Application with Vaadin and Spring Data JPA",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "production builds",
        "tail_type": "apiFunction"
      }
    ]
  }