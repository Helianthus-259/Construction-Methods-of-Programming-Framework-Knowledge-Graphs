{
    "relationships": [
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Centralized Configuration with Spring Cloud Config",
        "tail_type": "title"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Configuration Management",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Microservices",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Cloud Computing",
        "tail_type": "theme"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Guide to setting up a Spring Cloud Config Server and client for centralized configuration management. Includes server setup with @EnableConfigServer, Git repository integration for configuration files, client configuration using Config Client, Actuator for dynamic refresh via /actuator/refresh endpoint, and demonstration of property overrides. Requires dependencies like Spring Cloud Config Server, Config Client, Web, and Actuator.",
        "tail_type": "abstract"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/centralized-configuration",
        "tail_type": "url"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrate centralized configuration management and dynamic configuration updates without client restart",
        "tail_type": "purpose"
      },
      {
        "head": "Demonstrate centralized configuration management and dynamic configuration updates without client restart",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.configurationservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n@SpringBootApplication\n@EnableConfigServer\npublic class ConfigurationServiceApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationServiceApplication.class, args);\n\t}\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate centralized configuration management and dynamic configuration updates without client restart",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.configurationclient;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\npublic class ConfigurationClientApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationClientApplication.class, args);\n\t}\n}\n\n@RestController\n@RefreshScope\nclass MessageRestController {\n\t@Value(\"${message:Hello default}\")\n\tprivate String message;\n\n\t@GetMapping(\"/message\")\n\tString getMessage() {\n\t\treturn this.message;\n\t}\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate centralized configuration management and dynamic configuration updates without client restart",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "spring.cloud.config.server.git.uri=${HOME}/Desktop/config\nserver.port=8888",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate centralized configuration management and dynamic configuration updates without client restart",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "spring.application.name=a-bootiful-client\nspring.config.import=optional:configserver:http://localhost:8888\nmanagement.endpoints.web.exposure.include=*",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.configurationservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n@SpringBootApplication\n@EnableConfigServer\npublic class ConfigurationServiceApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationServiceApplication.class, args);\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.config.server.EnableConfigServer",
        "tail_type": "class"
      },
      {
        "head": "package com.example.configurationclient;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\npublic class ConfigurationClientApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationClientApplication.class, args);\n\t}\n}\n\n@RestController\n@RefreshScope\nclass MessageRestController {\n\t@Value(\"${message:Hello default}\")\n\tprivate String message;\n\n\t@GetMapping(\"/message\")\n\tString getMessage() {\n\t\treturn this.message;\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.context.config.annotation.RefreshScope",
        "tail_type": "class"
      },
      {
        "head": "package com.example.configurationservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n@SpringBootApplication\n@EnableConfigServer\npublic class ConfigurationServiceApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationServiceApplication.class, args);\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@EnableConfigServer",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.configurationservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n@SpringBootApplication\n@EnableConfigServer\npublic class ConfigurationServiceApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationServiceApplication.class, args);\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.configurationclient;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\npublic class ConfigurationClientApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationClientApplication.class, args);\n\t}\n}\n\n@RestController\n@RefreshScope\nclass MessageRestController {\n\t@Value(\"${message:Hello default}\")\n\tprivate String message;\n\n\t@GetMapping(\"/message\")\n\tString getMessage() {\n\t\treturn this.message;\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RefreshScope",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.configurationclient;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\npublic class ConfigurationClientApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationClientApplication.class, args);\n\t}\n}\n\n@RestController\n@RefreshScope\nclass MessageRestController {\n\t@Value(\"${message:Hello default}\")\n\tprivate String message;\n\n\t@GetMapping(\"/message\")\n\tString getMessage() {\n\t\treturn this.message;\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Value",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.configurationclient;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\npublic class ConfigurationClientApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConfigurationClientApplication.class, args);\n\t}\n}\n\n@RestController\n@RefreshScope\nclass MessageRestController {\n\t@Value(\"${message:Hello default}\")\n\tprivate String message;\n\n\t@GetMapping(\"/message\")\n\tString getMessage() {\n\t\treturn this.message;\n\t}\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Cloud Config Server",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring MVC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot Actuator",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Configuration Management",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Dynamic Configuration Refresh",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "REST API Setup",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Actuator Endpoints Usage",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Git Repository Integration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Cloud Config Server Setup and Client Configuration",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Dependency Management",
        "tail_type": "apiFunction"
      }
    ]
  }