{
    "relationships": [
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Creating a Spring Boot Application for RabbitMQ Messaging",
        "tail_type": "title"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Messaging Systems",
        "tail_type": "theme"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This tutorial demonstrates creating a Spring Boot application that publishes and subscribes to messages using RabbitMQ. It covers setting up a RabbitMQ server via Docker Compose, configuring Spring AMQP's RabbitTemplate for message publishing and MessageListenerAdapter for message subscription. The guide includes creating queues, topic exchanges, bindings, and testing the application with a CommandLineRunner. Requires Spring Boot, Spring AMQP, and Docker Compose dependencies.",
        "tail_type": "abstract"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/messaging-rabbitmq",
        "tail_type": "url"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Implement RabbitMQ messaging",
        "tail_type": "purpose"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring AMQP",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Docker Compose Support",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Implement RabbitMQ messaging",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "Receiver.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement RabbitMQ messaging",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "MessagingRabbitmqApplication.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement RabbitMQ messaging",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "Runner.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Receiver.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "java.util.concurrent.CountDownLatch",
        "tail_type": "class"
      },
      {
        "head": "MessagingRabbitmqApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.amqp.rabbit.core.RabbitTemplate",
        "tail_type": "class"
      },
      {
        "head": "MessagingRabbitmqApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter",
        "tail_type": "class"
      },
      {
        "head": "MessagingRabbitmqApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "MessagingRabbitmqApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "Runner.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.CommandLineRunner",
        "tail_type": "class"
      },
      {
        "head": "MessagingRabbitmqApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "MessagingRabbitmqApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "publishing messages",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "subscribing to messages",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "message listener configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "queue and exchange binding",
        "tail_type": "apiFunction"
      },
      {
        "head": "Spring Boot RabbitMQ Messaging Application",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "testing with CommandLineRunner",
        "tail_type": "apiFunction"
      }
    ]
  }