{
    "relationships": [
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Accessing Data with Cassandra",
        "tail_type": "title"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Database Integration",
        "tail_type": "theme"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Data",
        "tail_type": "theme"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Apache Cassandra",
        "tail_type": "theme"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/accessing-data-cassandra",
        "tail_type": "url"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This tutorial guides through using Spring Data Cassandra to build an application for storing and retrieving data in Apache Cassandra. It covers setting up Cassandra via Docker or DataStax Astra DB, configuring Spring Data Cassandra properties, creating entity classes with annotations, defining repositories for CRUD operations, and using CommandLineRunner to initialize data. Includes detailed steps for schema management, connection configurations, and both local and cloud-based database setups.",
        "tail_type": "abstract"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Store and retrieve data from Apache Cassandra using Spring Data Cassandra",
        "tail_type": "purpose"
      },
      {
        "head": "Store and retrieve data from Apache Cassandra using Spring Data Cassandra",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "Vet.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Store and retrieve data from Apache Cassandra using Spring Data Cassandra",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "VetRepository.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Store and retrieve data from Apache Cassandra using Spring Data Cassandra",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "AccessingDataCassandraApplication.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Vet.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.cassandra.core.mapping.Table",
        "tail_type": "class"
      },
      {
        "head": "Vet.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.cassandra.core.mapping.PrimaryKey",
        "tail_type": "class"
      },
      {
        "head": "VetRepository.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.repository.CassandraRepository",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataCassandraApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.CommandLineRunner",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataCassandraApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataCassandraApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataCassandraApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.context.annotation.Bean",
        "tail_type": "class"
      },
      {
        "head": "Vet.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Table",
        "tail_type": "annotation"
      },
      {
        "head": "Vet.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@PrimaryKey",
        "tail_type": "annotation"
      },
      {
        "head": "AccessingDataCassandraApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "AccessingDataCassandraApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data Cassandra",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "CRUD Operations",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Schema Management",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing Data with Cassandra",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Data Modeling",
        "tail_type": "apiFunction"
      }
    ]
  }