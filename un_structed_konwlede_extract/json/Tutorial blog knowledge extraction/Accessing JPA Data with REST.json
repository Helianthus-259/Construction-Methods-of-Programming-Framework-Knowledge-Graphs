{
    "relationships": [
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Accessing JPA Data with REST",
        "tail_type": "title"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "RESTful Services",
        "tail_type": "theme"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Data",
        "tail_type": "theme"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Database Access",
        "tail_type": "theme"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrates creating a Spring Boot application using Spring Data REST to expose JPA entities via RESTful endpoints. Includes setup of Person entity with JPA annotations, repository extending PagingAndSortingRepository, @RepositoryRestResource configuration, and testing CRUD operations with curl. Covers HATEOAS/HAL hypermedia navigation, custom queries, and integration with H2 database.",
        "tail_type": "abstract"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/accessing-data-rest",
        "tail_type": "url"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Create RESTful frontend for JPA data using Spring Data REST",
        "tail_type": "purpose"
      },
      {
        "head": "Create RESTful frontend for JPA data using Spring Data REST",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "javax.persistence.Entity",
        "tail_type": "class"
      },
      {
        "head": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "javax.persistence.Id",
        "tail_type": "class"
      },
      {
        "head": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "javax.persistence.GeneratedValue",
        "tail_type": "class"
      },
      {
        "head": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Entity",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Id",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.accessingdatarest; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Person { @Id @GeneratedValue private Long id; private String firstName; private String lastName; }",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GeneratedValue",
        "tail_type": "annotation"
      },
      {
        "head": "Create RESTful frontend for JPA data using Spring Data REST",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.accessingdatarest; import org.springframework.data.repository.PagingAndSortingRepository; import org.springframework.data.rest.core.annotation.RepositoryRestResource; @RepositoryRestResource(path = \"people\") public interface PersonRepository extends PagingAndSortingRepository<Person, Long> { List<Person> findByLastName(@Param(\"name\") String name); }",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.accessingdatarest; import org.springframework.data.repository.PagingAndSortingRepository; import org.springframework.data.rest.core.annotation.RepositoryRestResource; @RepositoryRestResource(path = \"people\") public interface PersonRepository extends PagingAndSortingRepository<Person, Long> { List<Person> findByLastName(@Param(\"name\") String name); }",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.repository.PagingAndSortingRepository",
        "tail_type": "class"
      },
      {
        "head": "package com.example.accessingdatarest; import org.springframework.data.repository.PagingAndSortingRepository; import org.springframework.data.rest.core.annotation.RepositoryRestResource; @RepositoryRestResource(path = \"people\") public interface PersonRepository extends PagingAndSortingRepository<Person, Long> { List<Person> findByLastName(@Param(\"name\") String name); }",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.rest.core.annotation.RepositoryRestResource",
        "tail_type": "class"
      },
      {
        "head": "package com.example.accessingdatarest; import org.springframework.data.repository.PagingAndSortingRepository; import org.springframework.data.rest.core.annotation.RepositoryRestResource; @RepositoryRestResource(path = \"people\") public interface PersonRepository extends PagingAndSortingRepository<Person, Long> { List<Person> findByLastName(@Param(\"name\") String name); }",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RepositoryRestResource",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.accessingdatarest; import org.springframework.data.repository.PagingAndSortingRepository; import org.springframework.data.rest.core.annotation.RepositoryRestResource; @RepositoryRestResource(path = \"people\") public interface PersonRepository extends PagingAndSortingRepository<Person, Long> { List<Person> findByLastName(@Param(\"name\") String name); }",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Param",
        "tail_type": "annotation"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "RESTful endpoint creation",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "CRUD operations",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Paging and Sorting",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Custom query methods",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "HATEOAS/HAL hypermedia",
        "tail_type": "apiFunction"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data REST",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data JPA",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Accessing JPA Data with REST",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "H2 Database",
        "tail_type": "frameworkModule"
      }
    ]
  }