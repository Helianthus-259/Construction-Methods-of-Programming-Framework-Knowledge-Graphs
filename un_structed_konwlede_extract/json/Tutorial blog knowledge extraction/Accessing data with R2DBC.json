{
    "relationships": [
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Building a Reactive Application with Spring Data R2DBC",
        "tail_type": "title"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/accessing-data-r2dbc",
        "tail_type": "url"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Reactive Programming",
        "tail_type": "theme"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Database Access",
        "tail_type": "theme"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrate how to build an application using Spring Data R2DBC for reactive data access in a Spring Boot application. Includes defining R2DBC entities with @Id, creating repository interfaces extending ReactiveCrudRepository, custom queries with @Query, schema initialization via ConnectionFactoryInitializer, and integrating with H2 database. Utilizes reactive types like Mono and Flux for non-blocking operations.",
        "tail_type": "abstract"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrate reactive data access with Spring Data R2DBC",
        "tail_type": "purpose"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data R2DBC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "H2 Database",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "R2DBC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "reactive CRUD operations",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "custom query methods",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "schema initialization",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "reactive data access",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "H2 database integration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Reactive Application with Spring Data R2DBC",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "repository implementation generation",
        "tail_type": "apiFunction"
      },
      {
        "head": "Demonstrate reactive data access with Spring Data R2DBC",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "Customer.java code",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate reactive data access with Spring Data R2DBC",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "CustomerRepository.java code",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate reactive data access with Spring Data R2DBC",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "AccessingDataR2dbcApplication.java code",
        "tail_type": "implementationCode"
      },
      {
        "head": "Customer.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.annotation.Id",
        "tail_type": "class"
      },
      {
        "head": "Customer.java code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Id",
        "tail_type": "annotation"
      },
      {
        "head": "CustomerRepository.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.r2dbc.repository.Query",
        "tail_type": "class"
      },
      {
        "head": "CustomerRepository.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.data.repository.reactive.ReactiveCrudRepository",
        "tail_type": "class"
      },
      {
        "head": "CustomerRepository.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "reactor.core.publisher.Flux",
        "tail_type": "class"
      },
      {
        "head": "CustomerRepository.java code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Query",
        "tail_type": "annotation"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.CommandLineRunner",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.context.annotation.Bean",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "io.r2dbc.spi.ConnectionFactory",
        "tail_type": "class"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "AccessingDataR2dbcApplication.java code",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Bean",
        "tail_type": "annotation"
      }
    ]
  }