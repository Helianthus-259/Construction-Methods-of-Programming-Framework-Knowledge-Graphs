{
    "relationships": [
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Creating a Spring REST application with contract stubs and consumer",
        "tail_type": "title"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/contract-rest",
        "tail_type": "url"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Create producer and consumer microservices with Spring Cloud Contract to ensure integration alignment via contract testing",
        "tail_type": "purpose"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Cloud Contract",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development, Microservices, Contract Testing, REST Services",
        "tail_type": "theme"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This tutorial demonstrates creating two Spring Boot microservices: a contract producer defining REST API specifications via Groovy contracts, and a consumer verifying integration through automated tests. It covers Spring Cloud Contract plugin setup for Gradle/Maven, contract definition, base test class creation, REST controller implementation, and stubs-based testing to ensure compatibility between services.",
        "tail_type": "abstract"
      },
      {
        "head": "Create producer and consumer microservices with Spring Cloud Contract to ensure integration alignment via contract testing",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "ContractRestServiceApplication.java, find_person_by_id.groovy, BaseClass.java, Person.java, PersonService.java, PersonRestController.java, ContractRestClientApplication.java, ContractRestClientApplicationTest.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "ContractRestServiceApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "ContractRestServiceApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "BaseClass.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.test.context.SpringBootTest",
        "tail_type": "class"
      },
      {
        "head": "BaseClass.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootTest",
        "tail_type": "annotation"
      },
      {
        "head": "PersonRestController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "PersonRestController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "PersonRestController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@PathVariable",
        "tail_type": "annotation"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Contract Testing",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Automated Test Generation",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "REST Service Integration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a Spring REST application with contract stubs and consumer",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Stub Generation",
        "tail_type": "apiFunction"
      },
      {
        "head": "ContractRestClientApplicationTest.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.test.context.SpringBootTest",
        "tail_type": "class"
      }
    ]
  }