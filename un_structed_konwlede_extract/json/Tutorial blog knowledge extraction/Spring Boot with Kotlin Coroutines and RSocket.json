{
    "relationships": [
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Building a Chat Application with Spring Boot and Kotlin",
        "tail_type": "title"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Reactive Programming",
        "tail_type": "theme"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Kotlin Integration",
        "tail_type": "theme"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Framework",
        "tail_type": "theme"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Web Application Development",
        "tail_type": "theme"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Demonstrate building a chat application with Spring Boot and Kotlin, evolving from blocking to reactive using WebFlux and RSocket.",
        "tail_type": "purpose"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/tutorials/spring-webflux-kotlin-rsocket",
        "tail_type": "url"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "The tutorial demonstrates building a chat application using Spring Boot and Kotlin, starting with a blocking request-response model and evolving to a non-blocking reactive system with Spring WebFlux, Kotlin Coroutines, and RSocket. It covers initial setup, persistence with H2 database, Spring Data JDBC/R2DBC, integration testing, Kotlin extensions, Markdown rendering, and RSocket streaming. Technologies include Thymeleaf, WebFlux, Coroutines, and Turbine for testing.",
        "tail_type": "abstract"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Reactive Streaming",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Coroutine Integration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "RSocket Communication",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Database Persistence",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Type Inference",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Null Safety",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Extension Functions",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Markdown Rendering",
        "tail_type": "apiFunction"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Integration Testing",
        "tail_type": "apiFunction"
      },
      {
        "head": "Demonstrate building a chat application with Spring Boot and Kotlin, evolving from blocking to reactive using WebFlux and RSocket.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "HtmlController Kotlin code with @Controller and @GetMapping",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate building a chat application with Spring Boot and Kotlin, evolving from blocking to reactive using WebFlux and RSocket.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "MessageResource Kotlin code with @RestController and @GetMapping",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate building a chat application with Spring Boot and Kotlin, evolving from blocking to reactive using WebFlux and RSocket.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "FakeMessageService Kotlin code with @Service and message generation",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate building a chat application with Spring Boot and Kotlin, evolving from blocking to reactive using WebFlux and RSocket.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "PersistentMessageService Kotlin code with @Service and database integration",
        "tail_type": "implementationCode"
      },
      {
        "head": "Demonstrate building a chat application with Spring Boot and Kotlin, evolving from blocking to reactive using WebFlux and RSocket.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "MessageRepository interface with Spring Data queries",
        "tail_type": "implementationCode"
      },
      {
        "head": "HtmlController Kotlin code with @Controller and @GetMapping",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "HtmlController",
        "tail_type": "class"
      },
      {
        "head": "HtmlController Kotlin code with @Controller and @GetMapping",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Controller",
        "tail_type": "annotation"
      },
      {
        "head": "HtmlController Kotlin code with @Controller and @GetMapping",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "MessageResource Kotlin code with @RestController and @GetMapping",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "MessageResource",
        "tail_type": "class"
      },
      {
        "head": "MessageResource Kotlin code with @RestController and @GetMapping",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "MessageResource Kotlin code with @RestController and @GetMapping",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RequestMapping",
        "tail_type": "annotation"
      },
      {
        "head": "FakeMessageService Kotlin code with @Service and message generation",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "FakeMessageService",
        "tail_type": "class"
      },
      {
        "head": "FakeMessageService Kotlin code with @Service and message generation",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Service",
        "tail_type": "annotation"
      },
      {
        "head": "PersistentMessageService Kotlin code with @Service and database integration",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "PersistentMessageService",
        "tail_type": "class"
      },
      {
        "head": "PersistentMessageService Kotlin code with @Service and database integration",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Service",
        "tail_type": "annotation"
      },
      {
        "head": "PersistentMessageService Kotlin code with @Service and database integration",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Primary",
        "tail_type": "annotation"
      },
      {
        "head": "MessageRepository interface with Spring Data queries",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "MessageRepository",
        "tail_type": "class"
      },
      {
        "head": "MessageRepository interface with Spring Data queries",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Query",
        "tail_type": "annotation"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring WebFlux",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data JDBC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Data R2DBC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "RSocket",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Kotlin Coroutines",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Building a Chat Application with Spring Boot and Kotlin",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Thymeleaf",
        "tail_type": "frameworkModule"
      }
    ]
  }