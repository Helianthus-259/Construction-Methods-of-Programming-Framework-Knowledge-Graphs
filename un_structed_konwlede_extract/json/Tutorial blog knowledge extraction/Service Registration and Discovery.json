{
    "relationships": [
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Starting and Using the Netflix Eureka Service Registry",
        "tail_type": "title"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Microservices",
        "tail_type": "theme"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Service Discovery",
        "tail_type": "theme"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Spring Cloud",
        "tail_type": "theme"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "This guide demonstrates setting up a Netflix Eureka service registry (eureka-server) and two client services (servicea and serviceb) that register with the server. The tutorial includes configuring the Eureka server with @EnableEurekaServer, setting up client applications with Eureka Discovery Client and Spring Web dependencies, and using DiscoveryClient and RestClient for inter-service communication. It covers Eureka dashboard monitoring, application.yml configurations for server port settings, and testing the setup with REST endpoints.",
        "tail_type": "abstract"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Set up a Netflix Eureka service registry and client services for service discovery.",
        "tail_type": "purpose"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/service-registration-and-discovery/",
        "tail_type": "url"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Cloud Netflix",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Eureka Server",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Eureka Discovery Client",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Web",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "service registration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "service discovery",
        "tail_type": "apiFunction"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "REST client communication",
        "tail_type": "apiFunction"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Eureka server configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Netflix Eureka Service Registry Setup",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "inter-service communication",
        "tail_type": "apiFunction"
      },
      {
        "head": "Set up a Netflix Eureka service registry and client services for service discovery.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.eurekaserver;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n@EnableEurekaServer\n@SpringBootApplication\npublic class EurekaServerApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(EurekaServerApplication.class, args);\n    }\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.eurekaserver;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n@EnableEurekaServer\n@SpringBootApplication\npublic class EurekaServerApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(EurekaServerApplication.class, args);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "package com.example.eurekaserver;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n@EnableEurekaServer\n@SpringBootApplication\npublic class EurekaServerApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(EurekaServerApplication.class, args);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.netflix.eureka.server.EnableEurekaServer",
        "tail_type": "class"
      },
      {
        "head": "package com.example.eurekaserver;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n@EnableEurekaServer\n@SpringBootApplication\npublic class EurekaServerApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(EurekaServerApplication.class, args);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@EnableEurekaServer",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.eurekaserver;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n@EnableEurekaServer\n@SpringBootApplication\npublic class EurekaServerApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(EurekaServerApplication.class, args);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "Set up a Netflix Eureka service registry and client services for service discovery.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.servicea.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class ServiceARestController {\n    @GetMapping(\"/helloWorld\")\n    public String helloWorld() {\n        return \"Hello world from Service A!\";\n    }\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.servicea.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class ServiceARestController {\n    @GetMapping(\"/helloWorld\")\n    public String helloWorld() {\n        return \"Hello world from Service A!\";\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.GetMapping",
        "tail_type": "class"
      },
      {
        "head": "package com.example.servicea.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class ServiceARestController {\n    @GetMapping(\"/helloWorld\")\n    public String helloWorld() {\n        return \"Hello world from Service A!\";\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RestController",
        "tail_type": "class"
      },
      {
        "head": "package com.example.servicea.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class ServiceARestController {\n    @GetMapping(\"/helloWorld\")\n    public String helloWorld() {\n        return \"Hello world from Service A!\";\n    }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.servicea.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class ServiceARestController {\n    @GetMapping(\"/helloWorld\")\n    public String helloWorld() {\n        return \"Hello world from Service A!\";\n    }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "Set up a Netflix Eureka service registry and client services for service discovery.",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "tail_type": "implementationCode"
      },
      {
        "head": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.cloud.client.discovery.DiscoveryClient",
        "tail_type": "class"
      },
      {
        "head": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.GetMapping",
        "tail_type": "class"
      },
      {
        "head": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.RestController",
        "tail_type": "class"
      },
      {
        "head": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.client.RestClient",
        "tail_type": "class"
      },
      {
        "head": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@RestController",
        "tail_type": "annotation"
      },
      {
        "head": "package com.example.serviceb.controller;\n\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestClient;\n\n@RestController\npublic class ServiceBRestController {\n    private final DiscoveryClient discoveryClient;\n    private final RestClient restClient;\n\n    public ServiceBRestController(DiscoveryClient discoveryClient, RestClient restClient) {\n        this.discoveryClient = discoveryClient;\n        this.restClient = restClient;\n    }\n\n    @GetMapping(\"/helloEureka\")\n    public String helloEureka() {\n        ServiceInstance serviceInstance = discoveryClient.getInstances(\"servicea\").get(0);\n        return restClient.get()\n                .uri(serviceInstance.getUri() + \"/helloWorld\")\n                .retrieve()\n                .body(String.class);\n    }\n}",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      }
    ]
  }