{
    "relationships": [
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Creating a server application that can receive HTTP multi-part file uploads",
        "tail_type": "title"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Backend Development",
        "tail_type": "theme"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "File Handling",
        "tail_type": "theme"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Guide demonstrating creation of a Spring Boot web application for handling HTTP multipart file uploads. Includes HTML interface implementation, Thymeleaf templating, auto-configuration of MultipartConfigElement, file storage service with exception handling, and file size limit configuration. Utilizes Spring Web, Thymeleaf dependencies, and testing with MockMvc.",
        "tail_type": "abstract"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "https://spring.io/guides/gs/uploading-files",
        "tail_type": "url"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "have",
        "tail": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "tail_type": "purpose"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring Boot",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Spring MVC",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "correlate_to",
        "tail": "Thymeleaf",
        "tail_type": "frameworkModule"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "HTTP multipart file upload handling",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Multipart configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Auto-configuration",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Mock testing",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Thymeleaf template rendering",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "Exception handling",
        "tail_type": "apiFunction"
      },
      {
        "head": "Creating a server application that can receive HTTP multi-part file uploads",
        "head_type": "tutorialEntity",
        "relation": "haveFuntion",
        "tail": "File size limiting",
        "tail_type": "apiFunction"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "UploadingFilesApplication.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "FileUploadController.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "StorageService.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "StorageProperties.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "StorageException.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "StorageFileNotFoundException.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "FileSystemStorageService.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "Implement HTTP multipart file upload handling in a Spring Boot application",
        "head_type": "purpose",
        "relation": "accomplished_by",
        "tail": "FileUploadTests.java",
        "tail_type": "implementationCode"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.stereotype.Controller",
        "tail_type": "class"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.GetMapping",
        "tail_type": "class"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.bind.annotation.PostMapping",
        "tail_type": "class"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder",
        "tail_type": "class"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@Controller",
        "tail_type": "annotation"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@GetMapping",
        "tail_type": "annotation"
      },
      {
        "head": "FileUploadController.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@PostMapping",
        "tail_type": "annotation"
      },
      {
        "head": "UploadingFilesApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.SpringApplication",
        "tail_type": "class"
      },
      {
        "head": "UploadingFilesApplication.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.boot.autoconfigure.SpringBootApplication",
        "tail_type": "class"
      },
      {
        "head": "UploadingFilesApplication.java",
        "head_type": "implementationCode",
        "relation": "use",
        "tail": "@SpringBootApplication",
        "tail_type": "annotation"
      },
      {
        "head": "FileUploadTests.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.mock.web.MockMultipartFile",
        "tail_type": "class"
      },
      {
        "head": "FileUploadTests.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "org.springframework.test.web.servlet.MockMvc",
        "tail_type": "class"
      },
      {
        "head": "FileSystemStorageService.java",
        "head_type": "implementationCode",
        "relation": "import",
        "tail": "java.nio.file.Path",
        "tail_type": "class"
      }
    ]
  }