{
    "relationships": [
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Deploying a Spring Boot Application on Kubernetes",
    "tail_type": "title"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Backend Development",
    "tail_type": "theme"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Cloud Deployment",
    "tail_type": "theme"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Containerization",
    "tail_type": "theme"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Kubernetes",
    "tail_type": "theme"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Spring Boot",
    "tail_type": "theme"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Guide to deploying a Spring Boot application on Kubernetes, including creating the application with Spring WebFlux and Actuator dependencies, containerizing using Maven/Gradle Spring Boot plugins, generating Kubernetes deployment YAML, applying configurations with kubectl, and verifying deployment with port-forwarding and health checks.",
    "tail_type": "abstract"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "https://spring.io/guides/gs/spring-boot-kubernetes",
    "tail_type": "url"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "have",
    "tail": "Deploy a Spring Boot application on Kubernetes",
    "tail_type": "purpose"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "correlate_to",
    "tail": "Spring Boot",
    "tail_type": "frameworkModule"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "correlate_to",
    "tail": "Spring WebFlux",
    "tail_type": "frameworkModule"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "correlate_to",
    "tail": "Spring Actuator",
    "tail_type": "frameworkModule"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "haveFuntion",
    "tail": "containerization",
    "tail_type": "apiFunction"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "haveFuntion",
    "tail": "deployment automation",
    "tail_type": "apiFunction"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "haveFuntion",
    "tail": "health monitoring",
    "tail_type": "apiFunction"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "haveFuntion",
    "tail": "service exposure",
    "tail_type": "apiFunction"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "haveFuntion",
    "tail": "image building",
    "tail_type": "apiFunction"
    },
    {
    "head": "Spring Boot Kubernetes Deployment",
    "head_type": "tutorialEntity",
    "relation": "haveFuntion",
    "tail": "port forwarding",
    "tail_type": "apiFunction"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "$ kubectl cluster-info\nKubernetes master is running at https://127.0.0.1:46253\nKubeDNS is running at https://127.0.0.1:46253/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "$ kubectl get all\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   10.43.0.1    <none>        443/TCP   7m13s",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "curl https://start.spring.io/starter.tgz -d dependencies=webflux,actuator -d type=maven-project | tar -xzvf -",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "./mvnw install",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "java -jar target/*.jar",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "./mvnw spring-boot:build-image",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "./gradlew bootBuildImage",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "docker run -p 8080:8080 demo:0.0.1-SNAPSHOT",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "kubectlcreatedeploymentdemo−−image=springguides/demo−−dry−run−o=yaml>deployment.yaml\nkubectl create deployment demo --image=springguides/demo --dry-run -o=yaml > deployment.yaml\nkubectlcreatedeploymentdemo−−image=springguides/demo−−dry−run−o=yaml>deployment.yaml\n echo --- >> deployment.yaml\n$ kubectl create service clusterip demo --tcp=8080:8080 --dry-run -o=yaml >> deployment.yaml",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "$ kubectl apply -f deployment.yaml\ndeployment.apps/demo created\nservice/demo created",
    "tail_type": "implementationCode"
    },
    {
    "head": "Deploy a Spring Boot application on Kubernetes",
    "head_type": "purpose",
    "relation": "accomplished_by",
    "tail": "$ kubectl port-forward svc/demo 8080:8080",
    "tail_type": "implementationCode"
    }
    ]
    }