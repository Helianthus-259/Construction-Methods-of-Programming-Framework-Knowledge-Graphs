{
    "relationships": [
        {
            "head": "org.springframework.cglib.reflect.FastClass#getMethod(Method)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getMethod",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getMethod(Method)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "getMethod",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "completeSampleCode",
            "tail_type": "completeSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Constructor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getConstructor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Constructor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass",
            "head_type": "class",
            "relation": "have",
            "tail": "getConstructor(Constructor) method",
            "tail_type": "apiFunction"
        },
        {
            "head": "getConstructor(Constructor) method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getConstructor(Constructor) sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getConstructor(Constructor) sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "Complete example of getConstructor(Constructor)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getMethod(String,Class[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getMethod",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getMethod(String,Class[])",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "getMethod",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "completeSampleCode",
            "tail_type": "completeSampleCode"
        },
        {
            "head": "completeSampleCode",
            "head_type": "completeSampleCode",
            "relation": "have",
            "tail": "sampleCodeContent",
            "tail_type": "sampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Class[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getConstructor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Class[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "NoSuchMethodException",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "getConstructor(type.getConstructor(parameterTypes))",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getConstructor(Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getName()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "apiFunction",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getName()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "apiFunction",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getJavaClass()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getJavaClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getJavaClass()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "getJavaClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getJavaClass is used to obtain the Class object corresponding to the type.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getJavaClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Class getJavaClass() {\n    return type;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#toString()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "toString representation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "Returns a string representation of the object.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "This method overrides the default toString method provided by the Object class.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "java\n@Override\npublic String toString() {\n    return type.toString();\n}\n",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#hashCode()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate hash code",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "override annotation used",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "return type hash code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#hashCode()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#equals(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "equality check",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "equality check",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "null check",
            "tail_type": "useConstraint"
        },
        {
            "head": "equality check",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "instanceof check",
            "tail_type": "useConstraint"
        },
        {
            "head": "equality check",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "return type boolean",
            "tail_type": "useScenario"
        },
        {
            "head": "equality check",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastClass#equals(Object) sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#equals(Object) sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "equality check",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "equality check",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getMethodIndex",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "arbitrarySelectionOnReturnTypeConflict",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "invocationOptimization",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "invocationOptimizationSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "getMethodIndexConcept",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "invocationOptimizationDesignPrinciple",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass#getIndex(String,Class[])",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(Class[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getConstructorIndex",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "getConstructorIndexSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getConstructorIndexSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "getConstructorIndexSampleCodeContent",
            "tail_type": "codeContent"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "getConstructorIndexRelatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getConstructorIndexRelatedConceptInterpretation",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "getConstructorIndexRelatedConceptInterpretationContent",
            "tail_type": "interpretationContent"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(Class[])",
            "head_type": "method",
            "relation": "have",
            "tail": "getConstructorIndexDesignPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "getConstructorIndexDesignPrincipleInterpretation",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "getConstructorIndexDesignPrincipleInterpretationContent",
            "tail_type": "interpretationContent"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#invoke(int,Object,Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "method invocation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#invoke(int,Object,Object[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "InvocationTargetException",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#invoke(int,Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "invokes a method by index",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#invoke(int,Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "related to reflection and dynamic method invocation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#invoke(int,Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "design based on CGLIB's FastClass for efficient method calls",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#invoke(int,Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "public Object invoke(int index, Object obj, Object[] args) throws InvocationTargetException",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#newInstance(int,Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create new instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#newInstance(int,Object[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "constructor throws an exception",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#newInstance(int,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#newInstance(int,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#newInstance(int,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(Signature)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getIndex",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getIndex(Signature)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "getIndex",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "completeSampleCode",
            "tail_type": "completeSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getMaxIndex()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getMaxIndex",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass#getMaxIndex()",
            "head_type": "method",
            "relation": "have",
            "tail": "Returns the maximum method index for this class.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass#getMaxIndex()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getSignatureWithoutReturnType",
            "tail_type": "apiFunction"
        },
        {
            "head": "getSignatureWithoutReturnType",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getSignatureWithoutReturnType(String,Class[])",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getSignatureWithoutReturnType(String,Class[])",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "create",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "setType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "firstInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "nextInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getProtectionDomain",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setType(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setType(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.Generator#setType(Class)",
            "tail_type": "method"
        },
        {
            "head": "setType",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public void setType(Class type) {\n    this.type = type;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "createFastClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "createFastClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "createFastClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "createFastClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "��取默认的类加载器",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "设计原则：确保获取正确的类加载器",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "使用示例代码",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "generateClassSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generateClassSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generateClassSampleCodeContent",
            "tail_type": "useSampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "ReflectUtils.newInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ReflectUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "relatedConceptInterpretation",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "ReflectUtils.newInstance is used to create a new instance of a class dynamically.",
            "tail_type": "description"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "designPrincipleInterpretation",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "This method follows the principle of reflection to dynamically create instances of classes, which is a core concept in Java's dynamic programming.",
            "tail_type": "description"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "package com.example;\n\nimport org.springframework.cglib.reflect.Generator;\nimport java.lang.reflect.Method;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Generator generator = new Generator();\n        Method method = generator.getClass().getMethod(\"firstInstance\", Class.class);\n        Object instance = method.invoke(generator, Main.class);\n        System.out.println(instance.getClass().getName());\n    }\n}",
            "tail_type": "code"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "instance generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.Generator#nextInstance(Object) returns the provided instance.",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is used to generate or return the next instance based on the provided object.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "The design principle behind this method is to provide a straightforward mechanism for instance generation or retrieval, ensuring that the provided instance is returned as-is.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "emitIndexBySignature",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "emitIndexByClassArray",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "invokeSwitchHelper",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "signatureSwitchHelper",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getIntRange",
            "tail_type": "apiFunction"
        },
        {
            "head": "emitIndexBySignature",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "methods",
            "tail_type": "useScenario"
        },
        {
            "head": "emitIndexByClassArray",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "methods",
            "tail_type": "useScenario"
        },
        {
            "head": "invokeSwitchHelper",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "members",
            "tail_type": "useScenario"
        },
        {
            "head": "signatureSwitchHelper",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "signatures",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "java.lang.reflect.InvocationTargetException",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "IllegalArgumentException",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "emitIndexBySignature",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "support constructor indices",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "have",
            "tail": "support constructor indices",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "have",
            "tail": "private void emitIndexBySignature(List methods) { CodeEmitter e = begin_method(Constants.ACC_PUBLIC, SIGNATURE_GET_INDEX, null); List signatures = CollectionUtils.transform(methods, obj -> ReflectUtils.getSignature((Method) obj).toString()); e.load_arg(0); e.invoke_virtual(Constants.TYPE_OBJECT, TO_STRING); signatureSwitchHelper(e, signatures); e.end_method(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "have",
            "tail": "The method emitIndexBySignature is used to generate index by signature for a list of methods. It uses a CodeEmitter to begin a method, transforms the list of methods into their signatures, and then uses a switch helper to handle the signatures. Finally, it ends the method.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "have",
            "tail": "The design principle behind emitIndexBySignature is to efficiently generate indices for methods based on their signatures. This is achieved by transforming the list of methods into signatures and using a switch helper to handle them, ensuring that the method is ended properly.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexBySignature(List)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexByClassArray(List)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "emitIndexByClassArray",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#emitIndexByClassArray(List)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "sampleCode",
            "tail_type": "sampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "signatureSwitchHelper",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "head_type": "method",
            "relation": "have",
            "tail": "processCase",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "head_type": "method",
            "relation": "have",
            "tail": "processDefault",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "head_type": "method",
            "relation": "have",
            "tail": "EmitUtils.string_switch",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClassEmitter#signatureSwitchHelper(CodeEmitter,List)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate method invocation code",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "method signature must match",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "dynamic method invocation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "head_type": "method",
            "relation": "have",
            "tail": "generate method invocation code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClassEmitter#invokeSwitchHelper(CodeEmitter,List,int,Type)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#getIntRange(int)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate integer range array",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter#getIntRange(int)",
            "head_type": "method",
            "relation": "have",
            "tail": "private static int[] getIntRange(int length) {\n    int[] range = new int[length];\n    for (int i = 0; i < length; i++) {\n        range[i] = i;\n    }\n    return range;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClassEmitter#getIntRange(int)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "processCase",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "processDefault",
            "tail_type": "apiFunction"
        },
        {
            "head": "processCase",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "processDefault",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processCase(Object,Label)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "processCase",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processCase(Object,Label)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.GetIndexCallback#processCase(Object,Label) sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processDefault()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "process default values",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processDefault()",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code for processing default values",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processDefault()",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation for processing default values",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processDefault()",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation for processing default values",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.GetIndexCallback#processDefault()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.GetIndexCallback",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "constructor invocation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "parameter type retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "exception type retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "instance creation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "java constructor retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "constructor invocation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "parameter type retrieval",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "exception type retrieval",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "instance creation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "java constructor retrieval",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "complete sample code for using FastConstructor",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#getParameterTypes()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getParameterTypes",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#getParameterTypes()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastConstructor",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastConstructor#getParameterTypes()",
            "tail_type": "method"
        },
        {
            "head": "getParameterTypes",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastConstructor#getParameterTypes()",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getExceptionTypes()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getExceptionTypes()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastConstructor",
            "tail_type": "class"
        },
        {
            "head": "getExceptionTypes()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastConstructor",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "object instantiation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "invocation target exception handling",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "dynamic object creation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "complete sample code for dynamic object creation",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation for dynamic object creation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation for dynamic object creation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastConstructor",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "objectInstantiation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.FastConstructor",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "invocationTargetExceptionHandling",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "java.lang.reflect.InvocationTargetException",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "java.lang.reflect.FastConstructor",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "java.lang.reflect.FastConstructor",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "java.lang.reflect.FastConstructor",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastConstructor",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getJavaConstructor()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getJavaConstructor()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Constructor getJavaConstructor() { return (Constructor) member; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getJavaConstructor()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "Retrieves the underlying Java Constructor object.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getJavaConstructor()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "This method is used to obtain the original Java Constructor object represented by the FastConstructor instance.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "get parameter types",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "get exception types",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "get index",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "get name",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "get declaring class",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "get modifiers",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "to string",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "hash code",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "equals",
            "tail_type": "apiFunction"
        },
        {
            "head": "get parameter types",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "get exception types",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "get index",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "get name",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "get declaring class",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "get modifiers",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "to string",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "hash code",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "equals",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getParameterTypes()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getParameterTypes()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getExceptionTypes()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getExceptionTypes()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "class"
        },
        {
            "head": "getExceptionTypes()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#getIndex()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getIndex",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#getIndex()",
            "head_type": "method",
            "relation": "have",
            "tail": "public int getIndex() {\n    return index;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#getName()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "apiFunction_getName",
            "tail_type": "apiFunction"
        },
        {
            "head": "apiFunction_getName",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode_getName",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode_getName",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "sampleCode_getName",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "haveFunction",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "apiFunction"
        },
        {
            "tail": "public Class getDeclaringClass() { return fc.getJavaClass(); }",
            "head_type": "apiFunction",
            "relation": "have",
            "head": "getDeclaringClass()",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastClass",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "head": "getDeclaringClass()",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "head": "getDeclaringClass()",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastClass",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "class"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "apiFunction"
        },
        {
            "tail": "public Class getJavaClass() { return fc.getJavaClass(); }",
            "head_type": "apiFunction",
            "relation": "have",
            "head": "getJavaClass()",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastClass",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "head": "getJavaClass()",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "head": "getJavaClass()",
            "tail_type": "class"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "getJavaClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "tail": "getDeclaringClass()",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastClass"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#getModifiers()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getModifiers",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#getModifiers()",
            "head_type": "method",
            "relation": "have",
            "tail": "getModifiers sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getModifiers sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "public int getModifiers() {\n    return member.getModifiers();\n}",
            "tail_type": "code"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#toString()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "toString()",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "Override annotation used",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "Convert member to string",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#toString()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "hash code calculation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "override annotation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "member object usage",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "return statement",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "java.lang.Object.hashCode() override",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "hash code generation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "public int hashCode() { return member.hashCode(); }",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "equality check",
            "head_type": "method",
            "relation": "haveFunction",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "apiFunction"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "method",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "head": "equality check",
            "tail_type": "method"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "method",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "method"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember",
            "head_type": "useSampleCode",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "tail_type": "class"
        },
        {
            "tail": "org.springframework.cglib.reflect.FastMember#equals(Object)",
            "head_type": "class",
            "relation": "have",
            "head": "org.springframework.cglib.reflect.FastMember",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMember#equals(Object)"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "method invocation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "return type retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "parameter type retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "exception type retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "Java method retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "method existence",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "have",
            "tail": "use sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "methodIndexRetrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "methodExistence",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "methodIndexing",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastClass",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#helper(FastClass,Method)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "java.lang.reflect.Method",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getReturnType()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getReturnType()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Class getReturnType() { return ((Method) member).getReturnType(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getReturnType()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "This method is used to retrieve the return type of a method represented by a FastMethod instance.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getReturnType()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "This method utilizes reflection to access the underlying Method object's return type.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getParameterTypes",
            "tail_type": "apiFunction"
        },
        {
            "head": "getParameterTypes",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMethod",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMethod",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getExceptionTypes()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getExceptionTypes()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMethod",
            "tail_type": "class"
        },
        {
            "head": "getExceptionTypes()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#invoke(Object,Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "method invocation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#invoke(Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "invokes a method on a specified object with arguments",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#invoke(Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "public Object invoke(Object obj, Object[] args) throws InvocationTargetException {\n    return fc.invoke(index, obj, args);\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#invoke(Object,Object[])",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMethod",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#invoke(Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is part of the FastMethod class, which is designed to provide fast method invocation capabilities. It uses the FastClass mechanism to achieve this, allowing for efficient method calls without the overhead of reflection.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod#invoke(Object,Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "The design principle behind this method is to optimize method invocation by leveraging the FastClass mechanism, which precomputes method indices and other necessary information to reduce the overhead associated with reflective method calls.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.FastMethod",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getJavaMethod",
            "tail_type": "apiFunction"
        },
        {
            "head": "getJavaMethod",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.FastMethod",
            "tail_type": "class"
        },
        {
            "head": "getJavaMethod",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getJavaMethod returns the Java Method object represented by this FastMethod instance.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getJavaMethod",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Method getJavaMethod() {\n    return (Method) member;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "method delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "method signature compatibility",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "applied_to",
            "tail": "event listener registration",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "main method delegation example",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "delegation for event handling",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "design principles of method delegation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#createStatic(Class,String,Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "createStatic",
            "tail_type": "apiFunction"
        },
        {
            "head": "createStatic",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "createStatic(Class targetClass, String methodName, Class iface)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "createStatic(Class targetClass, String methodName, Class iface)",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MethodDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "createStatic(Class targetClass, String methodName, Class iface)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#create(Object,String,Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "createMethodDelegate",
            "tail_type": "apiFunction"
        },
        {
            "head": "createMethodDelegate",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "createMethodDelegateSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "createMethodDelegateSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "createMethodDelegateSampleCodeContent",
            "tail_type": "useSampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#create(Object,String,Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MethodDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "equality check",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "object type",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "object comparison",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.MethodDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#hashCode()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateHashCode",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "sampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#getTarget()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getTarget",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#getTarget()",
            "head_type": "method",
            "relation": "have",
            "tail": "getTarget returns the target object",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#getTarget()",
            "head_type": "method",
            "relation": "have",
            "tail": "public Object getTarget() {\n    return target;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#newInstance(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create delegate instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegate#newInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "create delegate instance sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "create delegate instance sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "complete sample code for creating delegate instance",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegateKey",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "newInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "newInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegateKey#newInstance(Class,String,Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create delegate instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegateKey#newInstance(Class,String,Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegateKey#newInstance(Class,String,Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MethodDelegateKey#newInstance(Class,String,Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "generate proxied method",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "create MethodDelegate instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "set target object for delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "set target class for delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "set method name for delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "set interface for delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "generate proxied method",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "return type compatibility",
            "tail_type": "useConstraint"
        },
        {
            "head": "generate proxied method",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "static method constraint",
            "tail_type": "useConstraint"
        },
        {
            "head": "create MethodDelegate instance",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "代表团例创建",
            "tail_type": "useScenario"
        },
        {
            "head": "set target object for delegation",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "动态代理目标对象设置",
            "tail_type": "useScenario"
        },
        {
            "head": "set target class for delegation",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "动态代理目标类设置",
            "tail_type": "useScenario"
        },
        {
            "head": "set method name for delegation",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "指定代理方法名称",
            "tail_type": "useScenario"
        },
        {
            "head": "set interface for delegation",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "指定代理接口",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "动态代理类生成",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "方法委派设计原则",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "动态代理实现示例代码",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTarget(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setTarget",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTarget(Object)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "setTarget",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "Setting a target object for method invocation.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "Used in dynamic proxy generation.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTarget(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "public void setTarget(Object target) {\n    this.target = target;\n    this.targetClass = target.getClass();\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTargetClass(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setTargetClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTargetClass(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "setTargetClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.reflect.Generator#setTargetClass(Class)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTargetClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Sets the target class for the generator.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setTargetClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is used to specify the target class for the generator, which is essential for the code generation process.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setMethodName(String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setMethodName",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setMethodName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "Sets the method name for the generated method.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setMethodName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "Ensure the method name is valid in Java.",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setMethodName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "Used when dynamically generating methods at runtime.",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setMethodName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "public void setMethodName(String methodName) {\n    this.methodName = methodName;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setMethodName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "Follows Java naming conventions and ensures method names are set appropriately.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Setting Interface",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Set Interface Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Related Concept Interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design Principle Interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "Returns the default class loader",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "The default class loader is used to load classes that are not found in the parent class loader.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "public ClassLoader getDefaultClassLoader() {\n    return targetClass.getClassLoader();\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getProtectionDomain",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ReflectUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ProtectionDomain",
            "tail_type": "class"
        },
        {
            "head": "getProtectionDomain",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getProtectionDomain() Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getProtectionDomain() Sample Code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "Complete getProtectionDomain() Example",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create MethodDelegate",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "have",
            "tail": "setNamePrefix based on targetClass name",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "have",
            "tail": "generate key using KEY_FACTORY",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "have",
            "tail": "create MethodDelegate using super.create()",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MethodDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "related to dynamic proxy generation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "design principle of flexibility and reusability",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Method Delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Creates a new instance of a specified class and delegates method calls to a target object.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Utilizes reflection to instantiate a class and set up method delegation.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "public Object firstInstance(Class type) {\n    return ((MethodDelegate) ReflectUtils.newInstance(type)).newInstance(target);\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create new instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "create new instance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "nextInstance sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "nextInstance sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "java\n@Override\nprotected Object nextInstance(Object instance) {\n    return ((MethodDelegate) instance).newInstance(target);\n}\n",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "IllegalArgumentException for incompatible return types",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "IllegalArgumentException for static method mismatch",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "proxy method generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code for generating a proxy class",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation for method generation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation for dynamic class generation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "multicastDelegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "multicastDelegationSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "multicastDelegationSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "multicastDelegationCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "multicastDelegationExplanation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "multicastDelegationDesignPrinciple",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#getTargets()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "retrieve list of targets",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#getTargets()",
            "head_type": "method",
            "relation": "have",
            "tail": "return a new ArrayList containing all targets",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#getTargets()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#add(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "additionOfTarget",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#add(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "additionOfTargetSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "additionOfTargetSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "completeSampleCodeForAdditionOfTarget",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#remove(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "removeTarget",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#remove(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "removeTargetSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "removeTargetSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "removeTargetSampleCodeContent",
            "tail_type": "useSampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#newInstance()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create new instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#newInstance()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#create(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "createMulticastDelegate",
            "tail_type": "apiFunction"
        },
        {
            "head": "createMulticastDelegate",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "createMulticastDelegateSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "createMulticastDelegateSampleCode",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate#create(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "multicastDelegateRelatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "multicastDelegateDesignPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "MulticastDelegate creation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "Interface method proxy generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "Delegate instance management",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "Dynamic class generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "Interface type constraint",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "applied_to",
            "tail": "Dynamic proxy creation scenario",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "Complete sample code for creating a MulticastDelegate",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "Detailed explanation of related concepts such as CGLIB, dynamic proxies, and multicast delegates",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "Design principles behind the Generator class, focusing on flexibility and dynamic behavior",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.CodeEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.EmitUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.MethodInfo",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Signature",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.TypeUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "��取默认类加载器",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "CGLIB库中的类生成器",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "设计原则：使用动态代理和字节码操作来生成类",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "使用场景：在动态代理创建对象时获取类加载器",
            "tail_type": "useScenario"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "使用示例代码：\n\npackage com.example;\n\nimport org.springframework.cglib.reflect.Generator;\n\npublic class Main {\n    public static void main(String[] args) {\n        Generator generator = new Generator();\n        ClassLoader defaultClassLoader = generator.getDefaultClassLoader();\n        System.out.println(\"Default ClassLoader: \" + defaultClassLoader);\n    }\n}\n",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getProtectionDomain",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "getProtectionDomain",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getProtectionDomainSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getProtectionDomainSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "getProtectionDomainSampleCodeContent",
            "tail_type": "useSampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Setting Interface",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Set Interface Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Related Concept Interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design Principle Interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator#setInterface(Class)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "createMulticastDelegate",
            "tail_type": "apiFunction"
        },
        {
            "head": "createMulticastDelegate",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "MulticastDelegateCreation",
            "tail_type": "useSampleCode"
        },
        {
            "head": "MulticastDelegateCreation",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#create()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "MulticastDelegateClassInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "MulticastDelegate",
            "head_type": "class",
            "relation": "have",
            "tail": "MulticastDelegateDesignPrinciple",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate proxied method",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate class",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate constructor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate method",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate delegate method",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate add method",
            "tail_type": "apiFunction"
        },
        {
            "head": "generate proxied method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate proxied method sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate class",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate class sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate constructor",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate constructor sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate method sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate delegate method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate delegate method sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate instance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate instance sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate add method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generate add method sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ClassVisitor",
            "tail_type": "class"
        },
        {
            "head": "generate proxied method sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate proxied method sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate class sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate class sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate constructor sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate constructor sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate method sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate method sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate delegate method sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate delegate method sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate instance sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate instance sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generate add method sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generate add method sample code content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "emitProxy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "have",
            "tail": "EmitUtils.begin_method(ce, method, modifiers)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "have",
            "tail": "EmitUtils.process_array(e, Constants.TYPE_OBJECT_ARRAY, type -> { ... })",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "have",
            "tail": "e.load_args(); e.invoke(method);",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "have",
            "tail": "e.return_value(); e.end_method();",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#emitProxy(ClassEmitter,MethodInfo)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "instance_creation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "reflection_operation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "multicast_delegation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "type_compatibility",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "object_instantiation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.reflect.Generator",
            "tail_type": "class"
        },
        {
            "head": "instance_creation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "reflection_operation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "multicast_delegation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "instance creation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "MulticastDelegate",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Creates a new instance of a class using a MulticastDelegate.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "This method leverages the MulticastDelegate to create new instances, adhering to the principle of encapsulation and delegation.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.reflect.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "java\npackage com.example;\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.lang.reflect.Proxy;\n\nclass MyInvocationHandler implements InvocationHandler {\n\n    private Object target;\n\n    public MyInvocationHandler(Object target) {\n        this.target = target;\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        return method.invoke(target, args);\n    }\n}\n\nclass Main {\n    public static void main(String[] args) {\n        SampleClass sample = new SampleClass();\n        MyInvocationHandler handler = new MyInvocationHandler(sample);\n        SampleInterface proxy = (SampleInterface) Proxy.newProxyInstance(\n                SampleInterface.class.getClassLoader(),\n                new Class[] { SampleInterface.class },\n                handler\n        );\n        proxy.sampleMethod();\n    }\n}\n\nclass SampleClass implements SampleInterface {\n    @Override\n    public void sampleMethod() {\n        System.out.println(\"Sample method called\");\n    }\n}\n\ninterface SampleInterface {\n    void sampleMethod();\n}\n",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib(SpringCglibInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "ensurePackageProcessing",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib(SpringCglibInfo",
            "head_type": "class",
            "relation": "have",
            "tail": "package-levelJavadoc",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib(SpringCglibInfo",
            "head_type": "class",
            "relation": "have",
            "tail": "authorChrisBeams",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib(SpringCglibInfo",
            "head_type": "class",
            "relation": "have",
            "tail": "sinceVersion3.2",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "class filtering",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
            "head_type": "class",
            "relation": "have",
            "tail": "class filtering",
            "tail_type": "apiFunction"
        },
        {
            "head": "class filtering",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "class transformation",
            "tail_type": "useScenario"
        },
        {
            "head": "class filtering",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "class transformation",
            "tail_type": "useScenario"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit methods",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit fields",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit annotations",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit inner classes",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit outer classes",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit source",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit end",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class transformation",
            "head_type": "useScenario",
            "relation": "have",
            "tail": "visit attributes",
            "tail_type": "useSampleCode"
        },
        {
            "head": "class filtering",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "related to class visitors",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "class filtering",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "used in class transformation pipelines",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setTarget",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "setTarget(ClassVisitor) sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#accept(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "class filtering",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#accept(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "version compatibility",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#accept(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "class transformation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#accept(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#accept(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#accept(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "class transformation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "class version compatibility",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "class method visiting",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.ClassTransformer",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitSource(String,String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "visitSource",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitSource(String,String)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitSource(String,String) Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitOuterClass(String,String,String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "visitOuterClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitOuterClass(String,String,String)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
            "tail_type": "class"
        },
        {
            "head": "visitOuterClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitOuterClass(String,String,String)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitAnnotation(String,boolean)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "visitAnnotation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitAnnotation(String,boolean)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
            "tail_type": "class"
        },
        {
            "head": "visitAnnotation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.transform.AbstractClassFilterTransformer#visitAnnotation(String,boolean)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "visitAnnotation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "Handles visiting annotations in the class transformation process.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "visitAnnotation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "Delegates the annotation visiting to the target transformer.",
            "tail_type": "designPrincipleInterpretation"
        }
    ]
}