{
    "relationships": [
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "XML content similarity assertion",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator) sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.core.testfixture.xml.XmlAssert",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.core.testfixture.xml.DifferenceEvaluator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator) related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarTo(String,DifferenceEvaluator) design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "XML Content Assertion",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "XML Content Assertion Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "XML Content Assertion Sample Code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "java\nimport org.springframework.core.testfixture.xml.XmlContentAssert;\n\npublic class XmlContentAssertionExample {\n    public static void main(String[] args) {\n        XmlContentAssert assert1 = new XmlContentAssert(\"<tag>value</tag>\");\n        Object control = \"<tag>value</tag>\";\n        assert1.isSimilarToIgnoringWhitespace(control);\n    }\n}\n",
            "tail_type": "String"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(Object)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.core.testfixture.xml.XmlContentAssert",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert",
            "head_type": "class",
            "relation": "have",
            "tail": "XML Content Assertion Class Interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "XML Content Assertion Class Interpretation",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "This class is designed to provide assertion methods for XML content, allowing developers to verify that XML documents match expected structures or values.",
            "tail_type": "String"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert",
            "head_type": "class",
            "relation": "have",
            "tail": "XML Content Assertion Design Principle",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "XML Content Assertion Design Principle",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "The design principle behind this class is to facilitate easy and readable XML testing by abstracting away common assertion patterns and providing a fluent interface for specifying assertions.",
            "tail_type": "String"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(String,NodeMatcher)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "isSimilarToIgnoringWhitespace",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(String,NodeMatcher)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.core.testfixture.xml.XmlContentAssert",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(String,NodeMatcher)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(String,NodeMatcher)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.core.testfixture.xml.XmlContentAssert#isSimilarToIgnoringWhitespace(String,NodeMatcher)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "store a fixed set of keys",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "provide an unmodifiable set",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "return the size of the set",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "iterate over the set",
            "tail_type": "apiFunction"
        },
        {
            "head": "store a fixed set of keys",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "provide an unmodifiable set",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "return the size of the set",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "iterate over the set",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#iterator()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "iterator",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#iterator()",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.beans.FixedKeySet",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#iterator()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.FixedKeySet",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet",
            "head_type": "class",
            "relation": "have",
            "tail": "org.springframework.cglib.beans",
            "tail_type": "package"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#iterator()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#size()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "size determination",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#size()",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is used to determine the size of a fixed key set.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#size()",
            "head_type": "method",
            "relation": "have",
            "tail": "This method follows the principle of simplicity and directness in design, ensuring that the size determination is straightforward and efficient.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.FixedKeySet#size()",
            "head_type": "method",
            "relation": "have",
            "tail": "java\npackage org.springframework.cglib.beans;\n\npublic class FixedKeySetExample {\n    public static void main(String[] args) {\n        FixedKeySet keySet = new FixedKeySet();\n        int size = keySet.size();\n        System.out.println(\"Size of the fixed key set: \" + size);\n    }\n}\n",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "createImmutableBean",
            "tail_type": "apiFunction"
        },
        {
            "head": "createImmutableBean",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "createObjectFromBean",
            "tail_type": "useScenario"
        },
        {
            "head": "createImmutableBean",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "sampleCodeForCreateImmutableBean",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptsForImmutableBean",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrinciplesForImmutableBean",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean#create(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "createImmutableBean",
            "tail_type": "apiFunction"
        },
        {
            "head": "createImmutableBean",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "createImmutableBeanSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "createImmutableBeanSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "createImmutableBeanCodeContent",
            "tail_type": "codeContent"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean#create(Object)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "generateImmutableBean",
            "tail_type": "apiFunction"
        },
        {
            "head": "generateImmutableBean",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generateImmutableBeanSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generateImmutableBeanSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generateImmutableBeanCodeContent",
            "tail_type": "codeContent"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean#create(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "immutableBeanCreationConcept",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "immutableBeanCreationConcept",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "immutableBeanCreationConceptDescription",
            "tail_type": "description"
        },
        {
            "head": "org.springframework.cglib.beans.ImmutableBean#create(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "immutableBeanCreationDesignPrinciple",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "immutableBeanCreationDesignPrinciple",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "immutableBeanCreationDesignPrincipleDescription",
            "tail_type": "description"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "create",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "setBean",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getProtectionDomain",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "firstInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "nextInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "generateClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "create",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "setBean",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getProtectionDomain",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "firstInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "nextInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#setBean(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Setting Bean Object",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#setBean(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Set Bean Object Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#setBean(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Related Concept Interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#setBean(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design Principle Interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator#setBean(Object)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#getDefaultClassLoader()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator",
            "tail_type": "class"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "��取默认类加载器",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "have",
            "tail": "设计原则：使用委托模式，通过代理类访问实际类加载器",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "getDefaultClassLoader",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "使用示例代码",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getProtectionDomain",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ReflectUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#getProtectionDomain()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ProtectionDomain",
            "tail_type": "class"
        },
        {
            "head": "getProtectionDomain",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getProtectionDomain() Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getProtectionDomain() Sample Code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "Complete getProtectionDomain() Example",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#create()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "objectCreation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#create()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.beans.Generator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator#create()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#create()",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#create()",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "generateClassSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generateClassSampleCode",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "generateClassRelatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "generateClassRelatedConceptInterpretation",
            "head_type": "relatedConceptInterpretation",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "generateClassDesignPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "generateClassDesignPrincipleInterpretation",
            "head_type": "designPrincipleInterpretation",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.beans.Generator#generateClass(ClassVisitor)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "ReflectUtils.newInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "ReflectUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#firstInstance(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "bean",
            "tail_type": "class"
        },
        {
            "head": "ReflectUtils.newInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "ReflectUtils.newInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "ReflectUtils.newInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "optimization needed",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.beans.Generator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "code generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "ClassLoader cannot be null",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "applied_to",
            "tail": "caching generated classes",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "class generation caching",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "CGLIB code generation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "CGLIB design principles",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.proxy.Enhancer",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#wrapCachedClass(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "wrapCachedClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#wrapCachedClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "WeakReference",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#wrapCachedClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#wrapCachedClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#wrapCachedClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#unwrapCachedValue(T)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "unwrapCachedValue",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#unwrapCachedValue(T)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "unwrapCachedValue",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "Unwrap a cached value from a WeakReference",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "unwrapCachedValue",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Object unwrapCachedValue(T cached) { return ((WeakReference) cached).get(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamePrefix(String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setNamePrefix",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamePrefix(String)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamePrefix(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getClassName()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getting class name",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getClassName()",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "related to generating dynamic classes",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "design principle of generating dynamic classes",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getClassName()",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code for getting class name",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassName(String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Setting the class name",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "private void setClassName(String className) { this.className = className; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassName(String)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generateClassName(Predicate)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateClassName",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generateClassName(Predicate)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.NamingPolicy",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generateClassName(Predicate)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.Predicate",
            "tail_type": "class"
        },
        {
            "head": "generateClassName",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "generateClassNameUseSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generateClassNameUseSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generateClassNameSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "classLoaderMustBeSet",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "classGeneration",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "have",
            "tail": "classGenerationSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "have",
            "tail": "classLoaderExplanation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrinciplesOfClassGenerator",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setClassLoader(ClassLoader)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setContextClass(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "setContextClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setContextClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setContextClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "public void setContextClass(Class contextClass) { this.contextClass = contextClass; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setContextClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "Sets the context class for the class generation process.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setContextClass(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "The design principle behind setContextClass is to provide a way to specify the context class which is used as a basis for generating new classes. This is particularly useful in environments where class generation needs to be done in a specific context, such as within a framework like Spring.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamingPolicy(NamingPolicy)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "override default naming policy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamingPolicy(NamingPolicy)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "custom policy or null to use the default",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamingPolicy(NamingPolicy)",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamingPolicy(NamingPolicy)",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamingPolicy(NamingPolicy)",
            "head_type": "method",
            "relation": "have",
            "tail": "use sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setNamingPolicy(NamingPolicy)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "DefaultNamingPolicy",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getNamingPolicy()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getNamingPolicy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getNamingPolicy()",
            "head_type": "method",
            "relation": "have",
            "tail": "getNamingPolicy returns the naming policy",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator#getNamingPolicy()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getNamingPolicy()",
            "head_type": "method",
            "relation": "have",
            "tail": "public NamingPolicy getNamingPolicy() { return namingPolicy; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setUseCache(boolean)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "use and update the static cache of generated classes",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setUseCache(boolean)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "class with the same properties",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setUseCache(boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "Whether use and update the static cache of generated classes for a class with the same properties. Default is <code>true</code>.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setUseCache(boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "public void setUseCache(boolean useCache) {\n    this.useCache = useCache;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getUseCache()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getUseCache",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator#getUseCache()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getUseCache()",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getUseCache()",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getUseCache()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "class loading",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "unique class names",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "class generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setAttemptLoad(boolean)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassLoader",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getAttemptLoad()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getAttemptLoad",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "getAttemptLoad",
            "tail_type": "apiFunction"
        },
        {
            "head": "getAttemptLoad",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public boolean getAttemptLoad() { return attemptLoad; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getAttemptLoad",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "This method is used to retrieve the status of attemptLoad, which indicates whether an attempt to load has been made.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getAttemptLoad",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "The design principle behind this method is to provide a way to check if a loading attempt has occurred, which can be useful for debugging or ensuring that resources are loaded properly.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "set bytecode generation strategy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "strategy cannot be null",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "have",
            "tail": "by default uses DefaultGeneratorStrategy",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "have",
            "tail": "package com.example;\nimport org.springframework.cglib.core.GeneratorStrategy;\nimport org.springframework.cglib.core.DefaultGeneratorStrategy;\npublic class Example {\n    public static void main(String[] args) {\n        org.springframework.cglib.core.AbstractClassGenerator acg = new org.springframework.cglib.core.AbstractClassGenerator();\n        acg.setStrategy(DefaultGeneratorStrategy.INSTANCE);\n    }\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.DefaultGeneratorStrategy",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#setStrategy(GeneratorStrategy)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getStrategy()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getStrategy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getStrategy()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "setStrategy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getStrategy()",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getStrategy()",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getStrategy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "setStrategy",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getCurrent()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Used internally by CGLIB. Returns the AbstractClassGenerator that is being used to generate a class in the current thread.",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getCurrent()",
            "head_type": "method",
            "relation": "have",
            "tail": "public static AbstractClassGenerator getCurrent() {\n    return (AbstractClassGenerator) CURRENT.get();\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getCurrent()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getClassLoader()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "classLoaderRetrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "classLoaderRetrieval",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "nullClassLoaderHandling",
            "tail_type": "useConstraint"
        },
        {
            "head": "classLoaderRetrieval",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "classLoading",
            "tail_type": "useScenario"
        },
        {
            "head": "classLoaderRetrieval",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "classLoadingSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "classLoaderRetrieval",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "classLoadingConcept",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "classLoaderRetrieval",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "designPrinciplesOfClassLoading",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getClassLoader()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getDefaultClassLoader()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getDefaultClassLoader()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator#getDefaultClassLoader()",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getProtectionDomain()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getProtectionDomain",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getProtectionDomain()",
            "head_type": "method",
            "relation": "have",
            "tail": "Returns the protection domain to use when defining the class",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getProtectionDomain()",
            "head_type": "method",
            "relation": "have",
            "tail": "Default implementation returns null for using a default protection domain. Sub-classes may override to use a more specific protection domain",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#getProtectionDomain()",
            "head_type": "method",
            "relation": "have",
            "tail": "package com.healthMgr.common.email; import java.xxxx; public class OneClass { // specific code }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#create(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Object creation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#create(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "Key object must be non-null",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#create(Object)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "Dynamic class generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#create(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Sample code for creating an object",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#create(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Explanation of related concepts",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#create(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "ClassLoaderNotNull",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "DynamicClassCreation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "have",
            "tail": "DynamicClassCreationSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "have",
            "tail": "RelatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "have",
            "tail": "DesignPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassLoaderData",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassNameReader",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.CodeGenerationException",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ProtectionDomain",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#generate(ClassLoaderData)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ReflectUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#firstInstance(Class)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "instance generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#firstInstance(Class)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#firstInstance(Class)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Object Creation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "Exception Handling",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "Dynamic Object Generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Sample Code for nextInstance Method",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Explanation of nextInstance Method",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design Principles of nextInstance Method",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AbstractClassGenerator#nextInstance(Object)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "classLoading",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "classCaching",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "uniqueNameChecking",
            "tail_type": "apiFunction"
        },
        {
            "head": "classLoading",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "classLoaderNotNull",
            "tail_type": "useConstraint"
        },
        {
            "head": "classCaching",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "reuseGeneratedClasses",
            "tail_type": "useScenario"
        },
        {
            "head": "uniqueNameChecking",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "reservedClassNames",
            "tail_type": "useScenario"
        },
        {
            "head": "classLoading",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "classLoaderRetrieval",
            "tail_type": "useSampleCode"
        },
        {
            "head": "classCaching",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "classCachingMechanism",
            "tail_type": "useSampleCode"
        },
        {
            "head": "uniqueNameChecking",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "nameReservation",
            "tail_type": "useSampleCode"
        },
        {
            "head": "classLoading",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "classGenerationProcess",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "classCaching",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "classCachingPurpose",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "uniqueNameChecking",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "uniqueNameImportance",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrinciples",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "classLoading",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.proxy.Enhancer",
            "tail_type": "class"
        },
        {
            "head": "classCaching",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "uniqueNameChecking",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#getClassLoader()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "class loader retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#getClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is used to retrieve the class loader associated with the current context.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#getClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "The design principle behind this method is to encapsulate the class loader retrieval logic and provide a centralized way to access it.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#getClassLoader()",
            "head_type": "method",
            "relation": "have",
            "tail": "public ClassLoader getClassLoader() {\n    return classLoader.get();\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#reserveName(String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "reserveName",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#reserveName(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "public void reserveName(String name) {\n    reservedClassNames.add(name);\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "reserveName",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassLoaderData",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getUniqueNamePredicate()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getUniqueNamePredicate()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Predicate getUniqueNamePredicate() { return uniqueNamePredicate; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getUniqueNamePredicate()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "This method returns a unique name predicate.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getUniqueNamePredicate()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "The design principle of this method is to provide a unique identifier for class names.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generate classes",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "cache usage",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "class generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code for generating classes",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderData#get(AbstractClassGenerator,boolean)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "AbstractClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.Source",
            "head_type": "class",
            "relation": "have",
            "tail": "String name",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Source",
            "head_type": "class",
            "relation": "have",
            "tail": "public Source(String name) { this.name = name; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "always returns ASM9",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi",
            "head_type": "class",
            "relation": "have",
            "tail": "always returns ASM9",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi#value()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "always returns ASM9",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi#value()",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi#value()",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.AsmApi#value()",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "CodeEmitter handling",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "Label management",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "end of label already set constraint",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Block#getCodeEmitter()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getCodeEmitter",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.Block#getCodeEmitter()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.Block#getCodeEmitter()",
            "head_type": "method",
            "relation": "have",
            "tail": "public CodeEmitter getCodeEmitter() {\n    return e;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Block#end()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "ending a block",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.Block#end()",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "cannot end a block multiple times",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.Block#end()",
            "head_type": "method",
            "relation": "have",
            "tail": "public void end() {\n    if (end != null) {\n        throw new IllegalStateException(\"end of label already set\");\n    }\n    end = e.mark();\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Block#end()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.Block",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getStart()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getStart()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Label getStart() { return start; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.Block#getStart()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.Block#getStart()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getStart()",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getEnd()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getEnd()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public Label getEnd() { return end; }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Block",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "getEnd()",
            "head_type": "apiFunction",
            "relation": "relatedConceptInterpretation",
            "tail": "This method is used to retrieve the end label of a block.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getEnd()",
            "head_type": "apiFunction",
            "relation": "designPrincipleInterpretation",
            "tail": "Encapsulation of block details, providing controlled access to the end label.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "class generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "interface constraints",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "applied_to",
            "tail": "class and method creation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "sample code for class generation",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "related concept interpretation for class generation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "design principle interpretation for class generation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "class generation",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "interface constraints",
            "head_type": "useConstraint",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "class and method creation",
            "head_type": "useScenario",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "sample code for class generation",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "related concept interpretation for class generation",
            "head_type": "relatedConceptInterpretation",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "design principle interpretation for class generation",
            "head_type": "designPrincipleInterpretation",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Setting Target ClassVisitor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "Sets the target ClassVisitor for the ClassEmitter",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "Ensure Proper Initialization",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "public void setTarget(ClassVisitor cv) {\n    this.cv = cv;\n    fieldInfo = new HashMap();\n    // just to be safe\n    staticInit = staticHook = null;\n    staticHookSig = null;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getNextHook()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "hookCounter increment",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getNextHook()",
            "head_type": "method",
            "relation": "have",
            "tail": "hookCounter increment sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter#getNextHook()",
            "tail_type": "method"
        },
        {
            "head": "hookCounter increment sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "hookCounter increment",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getClassInfo()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getClassInfo",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getClassInfo()",
            "head_type": "method",
            "relation": "have",
            "tail": "classInfo retrieval",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getClassInfo()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#begin_class(int,int,String,Type,Type[],String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "begin_class",
            "tail_type": "apiFunction"
        },
        {
            "head": "begin_class",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "begin_class_sample_code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_class_sample_code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "begin_class_sample_code_content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_class",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "begin_class_related_concept",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "begin_class_related_concept",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "begin_class_related_concept_content",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "begin_class",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "begin_class_design_principle",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "begin_class_design_principle",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "begin_class_design_principle_content",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getStaticHook()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "static hook generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getStaticHook()",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "interface access constraint",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getStaticHook()",
            "head_type": "method",
            "relation": "have",
            "tail": "interface access constraint explanation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getStaticHook()",
            "head_type": "method",
            "relation": "have",
            "tail": "static hook generation sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter#getStaticHook()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "design principle explanation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#init()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "initialization",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#init()",
            "head_type": "method",
            "relation": "have",
            "tail": "Initialization of the ClassEmitter",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#init()",
            "head_type": "method",
            "relation": "have",
            "tail": "Design Principle: Initialization",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#init()",
            "head_type": "method",
            "relation": "have",
            "tail": "package com.example;\n\nimport org.springframework.cglib.core.ClassEmitter;\n\npublic class ExampleClass {\n    public static void main(String[] args) {\n        ClassEmitter emitter = new ClassEmitter();\n        emitter.init();\n        // Additional initialization code here\n    }\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getAccess()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getAccess",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassEmitter#getAccess()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "getAccess",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public int getAccess() {\n    return classInfo.getModifiers();\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getAccess",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "Retrieves the access modifiers of the class.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "getAccess",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "This method is designed to follow the principle of encapsulation by providing controlled access to class modifiers.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getClassType()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getClassType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getClassType()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getClassType()",
            "head_type": "method",
            "relation": "have",
            "tail": "classInfo.getType()",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getSuperType()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getSuperType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getSuperType()",
            "head_type": "method",
            "relation": "have",
            "tail": "getSuperTypeSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getSuperTypeSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "getSuperTypeCodeContent",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#end_class()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "end_class",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#end_class()",
            "head_type": "method",
            "relation": "have",
            "tail": "public void end_class() { if (staticHook != null && staticInit == null) { begin_static(); } if (staticInit != null) { staticHook.return_value(); staticHook.end_method(); rawStaticInit.visitInsn(Constants.RETURN); rawStaticInit.visitMaxs(0, 0); staticInit = staticHook = null; staticHookSig = null; } cv.visitEnd(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#end_class()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "end_class",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public void end_class() { if (staticHook != null && staticInit == null) { begin_static(); } if (staticInit != null) { staticHook.return_value(); staticHook.end_method(); rawStaticInit.visitInsn(Constants.RETURN); rawStaticInit.visitMaxs(0, 0); staticInit = staticHook = null; staticHookSig = null; } cv.visitEnd(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "end_class",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#begin_method(int,Signature,Type[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "begin_method",
            "tail_type": "apiFunction"
        },
        {
            "head": "begin_method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "begin_method_sample_code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_method_sample_code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "begin_method_sample_code_content",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "begin_method_related_concept",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "begin_method_related_concept",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "begin_method_related_concept_content",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "begin_method",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "begin_method_design_principle",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "begin_method_design_principle",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "begin_method_design_principle_content",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#begin_static()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "begin static method",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#begin_static()",
            "head_type": "method",
            "relation": "have",
            "tail": "begin static method sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin static method sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "public CodeEmitter begin_static() {\n    return begin_method(Constants.ACC_STATIC, Constants.SIG_STATIC, null);\n}",
            "tail_type": "code"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "declaring a field",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "field must be declared consistently",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "dynamic class generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassEmitter#declare_field(int access, String name, Type type, Object value) { FieldInfo existing = (FieldInfo) fieldInfo.get(name); FieldInfo info = new FieldInfo(access, name, type, value); if (existing != null) { if (!info.equals(existing)) { throw new IllegalArgumentException(\"Field \\\"\" + name + \"\\\" has been declared differently\"); } } else { fieldInfo.put(name, info); cv.visitField(access, name, type.getDescriptor(), null, value); } }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "FieldInfo is used to store field information",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design principle: Consistency and correctness in field declaration",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter#declare_field(int,String,Type,Object)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "field information retrieval",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "field name must be valid",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "checking if a field is declared in a class",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code for checking field declaration",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "interpretation of field declaration",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle behind field declaration check",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#isFieldDeclared(String)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getFieldInfo",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "field must be declared in the class",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "retrieving field information",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#getFieldInfo(String)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassEmitter",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "visit",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "begin_class",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_class",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "TypeUtils.fromInternalName(superName)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_class",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "TypeUtils.fromInternalNames(interfaces)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "null",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "visit method constructs a class",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visit(int,int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "Design principle for visit method",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitEnd()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "end_class emission",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitEnd()",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassEmitter#visitEnd() completes the class definition emission.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitEnd()",
            "head_type": "method",
            "relation": "have",
            "tail": "public void visitEnd() { end_class(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitField(int,String,String,String,Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "visitField",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitField(int,String,String,String,Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "visitFieldSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "visitFieldSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "visitFieldSampleCodeContent",
            "tail_type": "useSampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitMethod(int,String,String,String,String[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "visitMethod",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitMethod(int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "begin_method",
            "tail_type": "useSampleCode"
        },
        {
            "head": "begin_method",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "Signature",
            "tail_type": "class"
        },
        {
            "head": "begin_method",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "TypeUtils.fromInternalNames",
            "tail_type": "useSampleCode"
        },
        {
            "head": "TypeUtils.fromInternalNames",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "TypeUtils",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitMethod(int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassEmitter#visitMethod(int,String,String,String,String[])",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "constructor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "equals",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "hashCode",
            "tail_type": "apiFunction"
        },
        {
            "head": "constructor",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "equals",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "hashCode",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "useSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "complete sample code",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "equality check",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "null input",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "object comparison",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.core.FieldInfo",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#hashCode()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "hashCode",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "Calculate Hash Code",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "Override Annotation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.FieldInfo#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "Sample Code for HashCode Method",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "create instance from array",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey",
            "head_type": "class",
            "relation": "have",
            "tail": "create sample code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "create sample code",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "sample code for creating instance",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey",
            "head_type": "class",
            "relation": "have",
            "tail": "related concept interpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "related concept interpretation",
            "head_type": "relatedConceptInterpretation",
            "relation": "have",
            "tail": "ClassesKey is used to create instances from an array of class names",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey",
            "head_type": "class",
            "relation": "have",
            "tail": "design principle interpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "design principle interpretation",
            "head_type": "designPrincipleInterpretation",
            "relation": "have",
            "tail": "ClassesKey encapsulates the logic for creating instances based on class names, following the principle of encapsulation and factory pattern",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#create(Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create instance from array",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#create(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "public static Object create(Object[] array) {\n    return FACTORY.newInstance(classNames(array));\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "create instance from array",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "public static Object create(Object[] array) {\n    return FACTORY.newInstance(classNames(array));\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "class name extraction",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "null input returns null",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "extracting class names from an array of objects",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "private static String[] classNames(Object[] objects) {\n    if (objects == null) {\n        return null;\n    }\n    String[] classNames = new String[objects.length];\n    for (int i = 0; i < objects.length; i++) {\n        Object object = objects[i];\n        if (object != null) {\n            Class<?> aClass = object.getClass();\n            classNames[i] = aClass == null ? null : aClass.getName();\n        }\n    }\n    return classNames;\n}",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is used to extract the class names from an array of objects. It iterates over each object in the array, retrieves its class using `getClass()`, and then fetches the fully qualified name of the class using `getName()`. If any object in the array is null, the corresponding element in the returned array will also be null. If the entire input array is null, the method returns null immediately.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "The design principle behind this method is to provide a utility function that abstracts the process of extracting class names from an array of objects. This encapsulation ensures that any changes to the way class names are retrieved or formatted can be made in one place, enhancing maintainability. Additionally, by handling null inputs gracefully, the method ensures robustness and prevents potential NullPointerExceptions that could occur if the input array or any of its elements are null.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassesKey",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassesKey#classNames(Object[])",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.Key",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "newInstance",
            "tail_type": "apiFunction"
        },
        {
            "head": "newInstance",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.Key#newInstance(Object[])",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "create new instance",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.Key#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "related to object creation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.Key#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "design principle of flexibility",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.Key#newInstance(Object[])",
            "head_type": "method",
            "relation": "have",
            "tail": "sample code for creating instance",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassGenerator",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "generateClass",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "void generateClass(ClassVisitor v) throws Exception;",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassGenerator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateClass",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassGenerator#generateClass(ClassVisitor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassGenerator",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getSuperType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getInterfaces",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getModifiers",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "equals",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "hashCode",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "toString",
            "tail_type": "apiFunction"
        },
        {
            "head": "getType",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getSuperType",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getInterfaces",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getModifiers",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "equals",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "hashCode",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "toString",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#getType()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getType",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#getType()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassInfo#getType()",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getSuperType()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getSuperType()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "getSuperType()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassInfo#getSuperType()",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getInterfaces()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getInterfaces()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "getInterfaces()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassInfo#getInterfaces()",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getModifiers()",
            "tail_type": "apiFunction"
        },
        {
            "head": "getModifiers()",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "getModifiers()",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "equality check",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "null input returns false",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "non-ClassInfo input returns false",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "type comparison",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#equals(Object)",
            "head_type": "method",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#hashCode()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "generateHashCode",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#hashCode()",
            "head_type": "method",
            "relation": "have",
            "tail": "generateHashCodeSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "generateHashCodeSampleCode",
            "head_type": "useSampleCode",
            "relation": "have",
            "tail": "generateHashCodeSampleCodeContent",
            "tail_type": "useSampleCodeContent"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#hashCode()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#toString()",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "convert class information to string",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "public String toString() { return getType().getClassName(); }",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#toString()",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassInfo",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "Converts the class information to a string representation.",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassInfo#toString()",
            "head_type": "method",
            "relation": "have",
            "tail": "This method is designed to provide a simple string representation of the class information managed by ClassInfo. It currently returns the class name by accessing the getType() method and retrieving the className. Future enhancements might include additional details such as modifiers, superType, and interfaces.",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "exposing the application ClassLoader as current thread context ClassLoader",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "constrained_by",
            "tail": "the ClassLoader to expose as current thread context ClassLoader must not be null",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "applied_to",
            "tail": "class generation",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "ClassGenerator",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "GeneratorStrategy",
            "tail_type": "class"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "class generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "head_type": "method",
            "relation": "constrained_by",
            "tail": "class loader availability",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "head_type": "method",
            "relation": "applied_to",
            "tail": "class generation with custom class loader",
            "tail_type": "useScenario"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "head_type": "method",
            "relation": "have",
            "tail": "thread context class loader handling",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "head_type": "method",
            "relation": "have",
            "tail": "resetting thread context class loader",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "head_type": "method",
            "relation": "have",
            "tail": "class loader aware class generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "ClassLoaderAwareGeneratorStrategy",
            "head_type": "class",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy#generate(ClassGenerator)",
            "tail_type": "method"
        },
        {
            "head": "class generation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "class loader aware class generation",
            "tail_type": "apiFunction"
        },
        {
            "head": "class loader aware class generation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "thread context class loader handling",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "class loader aware class generation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "resetting thread context class loader",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "class loader aware class generation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "class generation with custom class loader",
            "tail_type": "useScenario"
        },
        {
            "head": "class loader aware class generation",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "class loader availability",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getClassName",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getClassInfo",
            "tail_type": "apiFunction"
        },
        {
            "head": "getClassName",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getClassInfo",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getClassName",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "classRetrieval",
            "tail_type": "useScenario"
        },
        {
            "head": "getClassInfo",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "classInformationRetrieval",
            "tail_type": "useScenario"
        },
        {
            "head": "getClassName",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "classReaderAvailability",
            "tail_type": "useConstraint"
        },
        {
            "head": "getClassInfo",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "classReaderAvailability",
            "tail_type": "useConstraint"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader",
            "head_type": "class",
            "relation": "have",
            "tail": "relatedConceptInterpretation",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader",
            "head_type": "class",
            "relation": "have",
            "tail": "designPrincipleInterpretation",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "getClassName",
            "tail_type": "apiFunction"
        },
        {
            "head": "getClassName",
            "head_type": "apiFunction",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassNameReader",
            "tail_type": "class"
        },
        {
            "head": "getClassName",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "getClassName(ClassReader r)",
            "tail_type": "useSampleCode"
        },
        {
            "head": "getClassName(ClassReader r)",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "getClassName",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader#getClassInfo(ClassReader)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "getClassInfo",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader#getClassInfo(ClassReader)",
            "head_type": "method",
            "relation": "have",
            "tail": "��取类信息",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader#getClassInfo(ClassReader)",
            "head_type": "method",
            "relation": "have",
            "tail": "设计模式：访问者模式",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassNameReader#getClassInfo(ClassReader)",
            "head_type": "method",
            "relation": "have",
            "tail": "使用示例代码",
            "tail_type": "useSampleCode"
        },
        {
            "head": "使用示例代码",
            "head_type": "useSampleCode",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassNameReader#getClassInfo(ClassReader)",
            "tail_type": "method"
        },
        {
            "head": "org.springframework.cglib.core.EarlyExitException",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "early exit exception handling",
            "tail_type": "apiFunction"
        },
        {
            "head": "early exit exception handling",
            "head_type": "apiFunction",
            "relation": "constrained_by",
            "tail": "must be used within a try-catch block",
            "tail_type": "useConstraint"
        },
        {
            "head": "early exit exception handling",
            "head_type": "apiFunction",
            "relation": "applied_to",
            "tail": "performance-critical sections of code",
            "tail_type": "useScenario"
        },
        {
            "head": "early exit exception handling",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "sample code for handling early exit exceptions",
            "tail_type": "useSampleCode"
        },
        {
            "head": "early exit exception handling",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "detailed explanation of early exit exceptions",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "early exit exception handling",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "design principles behind early exit exceptions",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "constructor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer",
            "head_type": "class",
            "relation": "haveFunction",
            "tail": "setTarget",
            "tail_type": "apiFunction"
        },
        {
            "head": "constructor",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "setTarget",
            "head_type": "apiFunction",
            "relation": "have",
            "tail": "useSampleCode",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "haveFunction",
            "tail": "Setting Target ClassVisitor",
            "tail_type": "apiFunction"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "Set Target ClassVisitor Sample Code",
            "tail_type": "useSampleCode"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "Related Concept Interpretation for setTarget",
            "tail_type": "relatedConceptInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "have",
            "tail": "Design Principle Interpretation for setTarget",
            "tail_type": "designPrincipleInterpretation"
        },
        {
            "head": "org.springframework.cglib.core.ClassTransformer#setTarget(ClassVisitor)",
            "head_type": "method",
            "relation": "associated_with",
            "tail": "org.springframework.cglib.core.ClassTransformer",
            "tail_type": "class"
        }
    ]
}